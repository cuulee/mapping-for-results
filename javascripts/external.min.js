/*	SWFObject v2.2 <http://code.google.com/p/swfobject/> 
	is released under the MIT License <http://www.opensource.org/licenses/mit-license.php> 
*/
var swfobject=function(){var D="undefined",r="object",S="Shockwave Flash",W="ShockwaveFlash.ShockwaveFlash",q="application/x-shockwave-flash",R="SWFObjectExprInst",x="onreadystatechange",O=window,j=document,t=navigator,T=false,U=[h],o=[],N=[],I=[],l,Q,E,B,J=false,a=false,n,G,m=true,M=function(){var aa=typeof j.getElementById!=D&&typeof j.getElementsByTagName!=D&&typeof j.createElement!=D,ah=t.userAgent.toLowerCase(),Y=t.platform.toLowerCase(),ae=Y?/win/.test(Y):/win/.test(ah),ac=Y?/mac/.test(Y):/mac/.test(ah),af=/webkit/.test(ah)?parseFloat(ah.replace(/^.*webkit\/(\d+(\.\d+)?).*$/,"$1")):false,X=!+"\v1",ag=[0,0,0],ab=null;if(typeof t.plugins!=D&&typeof t.plugins[S]==r){ab=t.plugins[S].description;if(ab&&!(typeof t.mimeTypes!=D&&t.mimeTypes[q]&&!t.mimeTypes[q].enabledPlugin)){T=true;X=false;ab=ab.replace(/^.*\s+(\S+\s+\S+$)/,"$1");ag[0]=parseInt(ab.replace(/^(.*)\..*$/,"$1"),10);ag[1]=parseInt(ab.replace(/^.*\.(.*)\s.*$/,"$1"),10);ag[2]=/[a-zA-Z]/.test(ab)?parseInt(ab.replace(/^.*[a-zA-Z]+(.*)$/,"$1"),10):0}}else{if(typeof O.ActiveXObject!=D){try{var ad=new ActiveXObject(W);if(ad){ab=ad.GetVariable("$version");if(ab){X=true;ab=ab.split(" ")[1].split(",");ag=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}}catch(Z){}}}return{w3:aa,pv:ag,wk:af,ie:X,win:ae,mac:ac}}(),k=function(){if(!M.w3){return}if((typeof j.readyState!=D&&j.readyState=="complete")||(typeof j.readyState==D&&(j.getElementsByTagName("body")[0]||j.body))){f()}if(!J){if(typeof j.addEventListener!=D){j.addEventListener("DOMContentLoaded",f,false)}if(M.ie&&M.win){j.attachEvent(x,function(){if(j.readyState=="complete"){j.detachEvent(x,arguments.callee);f()}});if(O==top){(function(){if(J){return}try{j.documentElement.doScroll("left")}catch(X){setTimeout(arguments.callee,0);return}f()})()}}if(M.wk){(function(){if(J){return}if(!/loaded|complete/.test(j.readyState)){setTimeout(arguments.callee,0);return}f()})()}s(f)}}();function f(){if(J){return}try{var Z=j.getElementsByTagName("body")[0].appendChild(C("span"));Z.parentNode.removeChild(Z)}catch(aa){return}J=true;var X=U.length;for(var Y=0;Y<X;Y++){U[Y]()}}function K(X){if(J){X()}else{U[U.length]=X}}function s(Y){if(typeof O.addEventListener!=D){O.addEventListener("load",Y,false)}else{if(typeof j.addEventListener!=D){j.addEventListener("load",Y,false)}else{if(typeof O.attachEvent!=D){i(O,"onload",Y)}else{if(typeof O.onload=="function"){var X=O.onload;O.onload=function(){X();Y()}}else{O.onload=Y}}}}}function h(){if(T){V()}else{H()}}function V(){var X=j.getElementsByTagName("body")[0];var aa=C(r);aa.setAttribute("type",q);var Z=X.appendChild(aa);if(Z){var Y=0;(function(){if(typeof Z.GetVariable!=D){var ab=Z.GetVariable("$version");if(ab){ab=ab.split(" ")[1].split(",");M.pv=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}else{if(Y<10){Y++;setTimeout(arguments.callee,10);return}}X.removeChild(aa);Z=null;H()})()}else{H()}}function H(){var ag=o.length;if(ag>0){for(var af=0;af<ag;af++){var Y=o[af].id;var ab=o[af].callbackFn;var aa={success:false,id:Y};if(M.pv[0]>0){var ae=c(Y);if(ae){if(F(o[af].swfVersion)&&!(M.wk&&M.wk<312)){w(Y,true);if(ab){aa.success=true;aa.ref=z(Y);ab(aa)}}else{if(o[af].expressInstall&&A()){var ai={};ai.data=o[af].expressInstall;ai.width=ae.getAttribute("width")||"0";ai.height=ae.getAttribute("height")||"0";if(ae.getAttribute("class")){ai.styleclass=ae.getAttribute("class")}if(ae.getAttribute("align")){ai.align=ae.getAttribute("align")}var ah={};var X=ae.getElementsByTagName("param");var ac=X.length;for(var ad=0;ad<ac;ad++){if(X[ad].getAttribute("name").toLowerCase()!="movie"){ah[X[ad].getAttribute("name")]=X[ad].getAttribute("value")}}P(ai,ah,Y,ab)}else{p(ae);if(ab){ab(aa)}}}}}else{w(Y,true);if(ab){var Z=z(Y);if(Z&&typeof Z.SetVariable!=D){aa.success=true;aa.ref=Z}ab(aa)}}}}}function z(aa){var X=null;var Y=c(aa);if(Y&&Y.nodeName=="OBJECT"){if(typeof Y.SetVariable!=D){X=Y}else{var Z=Y.getElementsByTagName(r)[0];if(Z){X=Z}}}return X}function A(){return !a&&F("6.0.65")&&(M.win||M.mac)&&!(M.wk&&M.wk<312)}function P(aa,ab,X,Z){a=true;E=Z||null;B={success:false,id:X};var ae=c(X);if(ae){if(ae.nodeName=="OBJECT"){l=g(ae);Q=null}else{l=ae;Q=X}aa.id=R;if(typeof aa.width==D||(!/%$/.test(aa.width)&&parseInt(aa.width,10)<310)){aa.width="310"}if(typeof aa.height==D||(!/%$/.test(aa.height)&&parseInt(aa.height,10)<137)){aa.height="137"}j.title=j.title.slice(0,47)+" - Flash Player Installation";var ad=M.ie&&M.win?"ActiveX":"PlugIn",ac="MMredirectURL="+O.location.toString().replace(/&/g,"%26")+"&MMplayerType="+ad+"&MMdoctitle="+j.title;if(typeof ab.flashvars!=D){ab.flashvars+="&"+ac}else{ab.flashvars=ac}if(M.ie&&M.win&&ae.readyState!=4){var Y=C("div");X+="SWFObjectNew";Y.setAttribute("id",X);ae.parentNode.insertBefore(Y,ae);ae.style.display="none";(function(){if(ae.readyState==4){ae.parentNode.removeChild(ae)}else{setTimeout(arguments.callee,10)}})()}u(aa,ab,X)}}function p(Y){if(M.ie&&M.win&&Y.readyState!=4){var X=C("div");Y.parentNode.insertBefore(X,Y);X.parentNode.replaceChild(g(Y),X);Y.style.display="none";(function(){if(Y.readyState==4){Y.parentNode.removeChild(Y)}else{setTimeout(arguments.callee,10)}})()}else{Y.parentNode.replaceChild(g(Y),Y)}}function g(ab){var aa=C("div");if(M.win&&M.ie){aa.innerHTML=ab.innerHTML}else{var Y=ab.getElementsByTagName(r)[0];if(Y){var ad=Y.childNodes;if(ad){var X=ad.length;for(var Z=0;Z<X;Z++){if(!(ad[Z].nodeType==1&&ad[Z].nodeName=="PARAM")&&!(ad[Z].nodeType==8)){aa.appendChild(ad[Z].cloneNode(true))}}}}}return aa}function u(ai,ag,Y){var X,aa=c(Y);if(M.wk&&M.wk<312){return X}if(aa){if(typeof ai.id==D){ai.id=Y}if(M.ie&&M.win){var ah="";for(var ae in ai){if(ai[ae]!=Object.prototype[ae]){if(ae.toLowerCase()=="data"){ag.movie=ai[ae]}else{if(ae.toLowerCase()=="styleclass"){ah+=' class="'+ai[ae]+'"'}else{if(ae.toLowerCase()!="classid"){ah+=" "+ae+'="'+ai[ae]+'"'}}}}}var af="";for(var ad in ag){if(ag[ad]!=Object.prototype[ad]){af+='<param name="'+ad+'" value="'+ag[ad]+'" />'}}aa.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"'+ah+">"+af+"</object>";N[N.length]=ai.id;X=c(ai.id)}else{var Z=C(r);Z.setAttribute("type",q);for(var ac in ai){if(ai[ac]!=Object.prototype[ac]){if(ac.toLowerCase()=="styleclass"){Z.setAttribute("class",ai[ac])}else{if(ac.toLowerCase()!="classid"){Z.setAttribute(ac,ai[ac])}}}}for(var ab in ag){if(ag[ab]!=Object.prototype[ab]&&ab.toLowerCase()!="movie"){e(Z,ab,ag[ab])}}aa.parentNode.replaceChild(Z,aa);X=Z}}return X}function e(Z,X,Y){var aa=C("param");aa.setAttribute("name",X);aa.setAttribute("value",Y);Z.appendChild(aa)}function y(Y){var X=c(Y);if(X&&X.nodeName=="OBJECT"){if(M.ie&&M.win){X.style.display="none";(function(){if(X.readyState==4){b(Y)}else{setTimeout(arguments.callee,10)}})()}else{X.parentNode.removeChild(X)}}}function b(Z){var Y=c(Z);if(Y){for(var X in Y){if(typeof Y[X]=="function"){Y[X]=null}}Y.parentNode.removeChild(Y)}}function c(Z){var X=null;try{X=j.getElementById(Z)}catch(Y){}return X}function C(X){return j.createElement(X)}function i(Z,X,Y){Z.attachEvent(X,Y);I[I.length]=[Z,X,Y]}function F(Z){var Y=M.pv,X=Z.split(".");X[0]=parseInt(X[0],10);X[1]=parseInt(X[1],10)||0;X[2]=parseInt(X[2],10)||0;return(Y[0]>X[0]||(Y[0]==X[0]&&Y[1]>X[1])||(Y[0]==X[0]&&Y[1]==X[1]&&Y[2]>=X[2]))?true:false}function v(ac,Y,ad,ab){if(M.ie&&M.mac){return}var aa=j.getElementsByTagName("head")[0];if(!aa){return}var X=(ad&&typeof ad=="string")?ad:"screen";if(ab){n=null;G=null}if(!n||G!=X){var Z=C("style");Z.setAttribute("type","text/css");Z.setAttribute("media",X);n=aa.appendChild(Z);if(M.ie&&M.win&&typeof j.styleSheets!=D&&j.styleSheets.length>0){n=j.styleSheets[j.styleSheets.length-1]}G=X}if(M.ie&&M.win){if(n&&typeof n.addRule==r){n.addRule(ac,Y)}}else{if(n&&typeof j.createTextNode!=D){n.appendChild(j.createTextNode(ac+" {"+Y+"}"))}}}function w(Z,X){if(!m){return}var Y=X?"visible":"hidden";if(J&&c(Z)){c(Z).style.visibility=Y}else{v("#"+Z,"visibility:"+Y)}}function L(Y){var Z=/[\\\"<>\.;]/;var X=Z.exec(Y)!=null;return X&&typeof encodeURIComponent!=D?encodeURIComponent(Y):Y}var d=function(){if(M.ie&&M.win){window.attachEvent("onunload",function(){var ac=I.length;for(var ab=0;ab<ac;ab++){I[ab][0].detachEvent(I[ab][1],I[ab][2])}var Z=N.length;for(var aa=0;aa<Z;aa++){y(N[aa])}for(var Y in M){M[Y]=null}M=null;for(var X in swfobject){swfobject[X]=null}swfobject=null})}}();return{registerObject:function(ab,X,aa,Z){if(M.w3&&ab&&X){var Y={};Y.id=ab;Y.swfVersion=X;Y.expressInstall=aa;Y.callbackFn=Z;o[o.length]=Y;w(ab,false)}else{if(Z){Z({success:false,id:ab})}}},getObjectById:function(X){if(M.w3){return z(X)}},embedSWF:function(ab,ah,ae,ag,Y,aa,Z,ad,af,ac){var X={success:false,id:ah};if(M.w3&&!(M.wk&&M.wk<312)&&ab&&ah&&ae&&ag&&Y){w(ah,false);K(function(){ae+="";ag+="";var aj={};if(af&&typeof af===r){for(var al in af){aj[al]=af[al]}}aj.data=ab;aj.width=ae;aj.height=ag;var am={};if(ad&&typeof ad===r){for(var ak in ad){am[ak]=ad[ak]}}if(Z&&typeof Z===r){for(var ai in Z){if(typeof am.flashvars!=D){am.flashvars+="&"+ai+"="+Z[ai]}else{am.flashvars=ai+"="+Z[ai]}}}if(F(Y)){var an=u(aj,am,ah);if(aj.id==ah){w(ah,true)}X.success=true;X.ref=an}else{if(aa&&A()){aj.data=aa;P(aj,am,ah,ac);return}else{w(ah,true)}}if(ac){ac(X)}})}else{if(ac){ac(X)}}},switchOffAutoHideShow:function(){m=false},ua:M,getFlashPlayerVersion:function(){return{major:M.pv[0],minor:M.pv[1],release:M.pv[2]}},hasFlashPlayerVersion:F,createSWF:function(Z,Y,X){if(M.w3){return u(Z,Y,X)}else{return undefined}},showExpressInstall:function(Z,aa,X,Y){if(M.w3&&A()){P(Z,aa,X,Y)}},removeSWF:function(X){if(M.w3){y(X)}},createCSS:function(aa,Z,Y,X){if(M.w3){v(aa,Z,Y,X)}},addDomLoadEvent:K,addLoadEvent:s,getQueryParamValue:function(aa){var Z=j.location.search||j.location.hash;if(Z){if(/\?/.test(Z)){Z=Z.split("?")[1]}if(aa==null){return L(Z)}var Y=Z.split("&");for(var X=0;X<Y.length;X++){if(Y[X].substring(0,Y[X].indexOf("="))==aa){return L(Y[X].substring((Y[X].indexOf("=")+1)))}}}return""},expressInstallCallback:function(){if(a){var X=c(R);if(X&&l){X.parentNode.replaceChild(l,X);if(Q){w(Q,true);if(M.ie&&M.win){l.style.display="block"}}if(E){E(B)}}a=false}}}}();

/*
 * Raphael 1.3.2 - JavaScript Vector Library
 *
 * Copyright (c) 2009 Dmitry Baranovskiy (http://raphaeljs.com)
 * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.
 */
Raphael=(function(){var a=/[, ]+/,aY=/^(circle|rect|path|ellipse|text|image)$/,a9="prototype",W="hasOwnProperty",P=document,aB=window,m={was:Object[a9][W].call(aB,"Raphael"),is:aB.Raphael},au=function(){if(au.is(arguments[0],"array")){var d=arguments[0],e=z[a7](au,d.splice(0,3+au.is(d[0],aq))),S=e.set();for(var R=0,bc=d[n];R<bc;R++){var E=d[R]||{};aY.test(E.type)&&S[f](e[E.type]().attr(E));}return S;}return z[a7](au,arguments);},a4=function(){},aU="appendChild",a7="apply",a2="concat",aA="",at=" ",C="split",J="click dblclick mousedown mousemove mouseout mouseover mouseup"[C](at),aH="join",n="length",bb=String[a9].toLowerCase,af=Math,h=af.max,aR=af.min,aq="number",aJ="toString",aE=Object[a9][aJ],a0={},aV=af.pow,f="push",a5=/^(?=[\da-f]$)/,c=/^url\(['"]?([^\)]+?)['"]?\)$/i,A=/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgb\(\s*([\d\.]+\s*,\s*[\d\.]+\s*,\s*[\d\.]+)\s*\)|rgb\(\s*([\d\.]+%\s*,\s*[\d\.]+%\s*,\s*[\d\.]+%)\s*\)|hs[bl]\(\s*([\d\.]+\s*,\s*[\d\.]+\s*,\s*[\d\.]+)\s*\)|hs[bl]\(\s*([\d\.]+%\s*,\s*[\d\.]+%\s*,\s*[\d\.]+%)\s*\))\s*$/i,U=af.round,y="setAttribute",aa=parseFloat,K=parseInt,aX=String[a9].toUpperCase,k={blur:0,"clip-rect":"0 0 1e9 1e9",cursor:"default",cx:0,cy:0,fill:"#fff","fill-opacity":1,font:'10px "Arial"',"font-family":'"Arial"',"font-size":"10","font-style":"normal","font-weight":400,gradient:0,height:0,href:"http://raphaeljs.com/",opacity:1,path:"M0,0",r:0,rotation:0,rx:0,ry:0,scale:"1 1",src:"",stroke:"#000","stroke-dasharray":"","stroke-linecap":"butt","stroke-linejoin":"butt","stroke-miterlimit":0,"stroke-opacity":1,"stroke-width":1,target:"_blank","text-anchor":"middle",title:"Raphael",translation:"0 0",width:0,x:0,y:0},ad={along:"along",blur:aq,"clip-rect":"csv",cx:aq,cy:aq,fill:"colour","fill-opacity":aq,"font-size":aq,height:aq,opacity:aq,path:"path",r:aq,rotation:"csv",rx:aq,ry:aq,scale:"csv",stroke:"colour","stroke-opacity":aq,"stroke-width":aq,translation:"csv",width:aq,x:aq,y:aq},aZ="replace";au.version="1.3.2";au.type=(aB.SVGAngle||P.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")?"SVG":"VML");if(au.type=="VML"){var ak=P.createElement("div");ak.innerHTML="<!--[if vml]><br><br><![endif]-->";if(ak.childNodes[n]!=2){return au.type=null;}ak=null;}au.svg=!(au.vml=au.type=="VML");a4[a9]=au[a9];au._id=0;au._oid=0;au.fn={};au.is=function(e,d){d=bb.call(d);return((d=="object"||d=="undefined")&&typeof e==d)||(e==null&&d=="null")||bb.call(aE.call(e).slice(8,-1))==d;};au.setWindow=function(d){aB=d;P=aB.document;};var aM=function(e){if(au.vml){var d=/^\s+|\s+$/g;aM=an(function(R){var S;R=(R+aA)[aZ](d,aA);try{var bc=new aB.ActiveXObject("htmlfile");bc.write("<body>");bc.close();S=bc.body;}catch(be){S=aB.createPopup().document.body;}var i=S.createTextRange();try{S.style.color=R;var bd=i.queryCommandValue("ForeColor");bd=((bd&255)<<16)|(bd&65280)|((bd&16711680)>>>16);return"#"+("000000"+bd[aJ](16)).slice(-6);}catch(be){return"none";}});}else{var E=P.createElement("i");E.title="Rapha\xebl Colour Picker";E.style.display="none";P.body[aU](E);aM=an(function(i){E.style.color=i;return P.defaultView.getComputedStyle(E,aA).getPropertyValue("color");});}return aM(e);};var ao=function(){return"hsb("+[this.h,this.s,this.b]+")";},w=function(){return this.hex;};au.hsb2rgb=an(function(bf,bd,bj){if(au.is(bf,"object")&&"h" in bf&&"s" in bf&&"b" in bf){bj=bf.b;bd=bf.s;bf=bf.h;}var R,S,bk;if(bj==0){return{r:0,g:0,b:0,hex:"#000"};}if(bf>1||bd>1||bj>1){bf/=255;bd/=255;bj/=255;}var bc=~~(bf*6),bg=(bf*6)-bc,E=bj*(1-bd),e=bj*(1-(bd*bg)),bl=bj*(1-(bd*(1-bg)));R=[bj,e,E,E,bl,bj,bj][bc];S=[bl,bj,bj,e,E,E,bl][bc];bk=[E,E,bl,bj,bj,e,E][bc];R*=255;S*=255;bk*=255;var bh={r:R,g:S,b:bk,toString:w},d=(~~R)[aJ](16),be=(~~S)[aJ](16),bi=(~~bk)[aJ](16);d=d[aZ](a5,"0");be=be[aZ](a5,"0");bi=bi[aZ](a5,"0");bh.hex="#"+d+be+bi;return bh;},au);au.rgb2hsb=an(function(d,e,bd){if(au.is(d,"object")&&"r" in d&&"g" in d&&"b" in d){bd=d.b;e=d.g;d=d.r;}if(au.is(d,"string")){var bf=au.getRGB(d);d=bf.r;e=bf.g;bd=bf.b;}if(d>1||e>1||bd>1){d/=255;e/=255;bd/=255;}var bc=h(d,e,bd),i=aR(d,e,bd),R,E,S=bc;if(i==bc){return{h:0,s:0,b:bc};}else{var be=(bc-i);E=be/bc;if(d==bc){R=(e-bd)/be;}else{if(e==bc){R=2+((bd-d)/be);}else{R=4+((d-e)/be);}}R/=6;R<0&&R++;R>1&&R--;}return{h:R,s:E,b:S,toString:ao};},au);var aN=/,?([achlmqrstvxz]),?/gi;au._path2string=function(){return this.join(",")[aZ](aN,"$1");};function an(E,e,d){function i(){var R=Array[a9].slice.call(arguments,0),bc=R[aH]("\u25ba"),S=i.cache=i.cache||{},bd=i.count=i.count||[];if(S[W](bc)){return d?d(S[bc]):S[bc];}bd[n]>=1000&&delete S[bd.shift()];bd[f](bc);S[bc]=E[a7](e,R);return d?d(S[bc]):S[bc];}return i;}au.getRGB=an(function(d){if(!d||!!((d=d+aA).indexOf("-")+1)){return{r:-1,g:-1,b:-1,hex:"none",error:1};}if(d=="none"){return{r:-1,g:-1,b:-1,hex:"none"};}!(({hs:1,rg:1})[W](d.substring(0,2))||d.charAt()=="#")&&(d=aM(d));var S,i,E,be,bf,bc=d.match(A);if(bc){if(bc[2]){be=K(bc[2].substring(5),16);E=K(bc[2].substring(3,5),16);i=K(bc[2].substring(1,3),16);}if(bc[3]){be=K((bf=bc[3].charAt(3))+bf,16);E=K((bf=bc[3].charAt(2))+bf,16);i=K((bf=bc[3].charAt(1))+bf,16);}if(bc[4]){bc=bc[4][C](/\s*,\s*/);i=aa(bc[0]);E=aa(bc[1]);be=aa(bc[2]);}if(bc[5]){bc=bc[5][C](/\s*,\s*/);i=aa(bc[0])*2.55;E=aa(bc[1])*2.55;be=aa(bc[2])*2.55;}if(bc[6]){bc=bc[6][C](/\s*,\s*/);i=aa(bc[0]);E=aa(bc[1]);be=aa(bc[2]);return au.hsb2rgb(i,E,be);}if(bc[7]){bc=bc[7][C](/\s*,\s*/);i=aa(bc[0])*2.55;E=aa(bc[1])*2.55;be=aa(bc[2])*2.55;return au.hsb2rgb(i,E,be);}bc={r:i,g:E,b:be};var e=(~~i)[aJ](16),R=(~~E)[aJ](16),bd=(~~be)[aJ](16);e=e[aZ](a5,"0");R=R[aZ](a5,"0");bd=bd[aZ](a5,"0");bc.hex="#"+e+R+bd;return bc;}return{r:-1,g:-1,b:-1,hex:"none",error:1};},au);au.getColor=function(e){var i=this.getColor.start=this.getColor.start||{h:0,s:1,b:e||0.75},d=this.hsb2rgb(i.h,i.s,i.b);i.h+=0.075;if(i.h>1){i.h=0;i.s-=0.2;i.s<=0&&(this.getColor.start={h:0,s:1,b:i.b});}return d.hex;};au.getColor.reset=function(){delete this.start;};var aC=/([achlmqstvz])[\s,]*((-?\d*\.?\d*(?:e[-+]?\d+)?\s*,?\s*)+)/ig,ar=/(-?\d*\.?\d*(?:e[-+]?\d+)?)\s*,?\s*/ig;au.parsePathString=an(function(d){if(!d){return null;}var i={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},e=[];if(au.is(d,"array")&&au.is(d[0],"array")){e=aD(d);}if(!e[n]){(d+aA)[aZ](aC,function(R,E,bd){var bc=[],S=bb.call(E);bd[aZ](ar,function(bf,be){be&&bc[f](+be);});if(S=="m"&&bc[n]>2){e[f]([E][a2](bc.splice(0,2)));S="l";E=E=="m"?"l":"L";}while(bc[n]>=i[S]){e[f]([E][a2](bc.splice(0,i[S])));if(!i[S]){break;}}});}e[aJ]=au._path2string;return e;});au.findDotsAtSegment=function(e,d,bq,bo,bc,R,be,bd,bk){var bi=1-bk,bh=aV(bi,3)*e+aV(bi,2)*3*bk*bq+bi*3*bk*bk*bc+aV(bk,3)*be,bf=aV(bi,3)*d+aV(bi,2)*3*bk*bo+bi*3*bk*bk*R+aV(bk,3)*bd,bm=e+2*bk*(bq-e)+bk*bk*(bc-2*bq+e),bl=d+2*bk*(bo-d)+bk*bk*(R-2*bo+d),bp=bq+2*bk*(bc-bq)+bk*bk*(be-2*bc+bq),bn=bo+2*bk*(R-bo)+bk*bk*(bd-2*R+bo),bj=(1-bk)*e+bk*bq,bg=(1-bk)*d+bk*bo,E=(1-bk)*bc+bk*be,i=(1-bk)*R+bk*bd,S=(90-af.atan((bm-bp)/(bl-bn))*180/af.PI);(bm>bp||bl<bn)&&(S+=180);return{x:bh,y:bf,m:{x:bm,y:bl},n:{x:bp,y:bn},start:{x:bj,y:bg},end:{x:E,y:i},alpha:S};};var Y=an(function(bh){if(!bh){return{x:0,y:0,width:0,height:0};}bh=L(bh);var be=0,bd=0,R=[],e=[],E;for(var S=0,bg=bh[n];S<bg;S++){E=bh[S];if(E[0]=="M"){be=E[1];bd=E[2];R[f](be);e[f](bd);}else{var bc=aL(be,bd,E[1],E[2],E[3],E[4],E[5],E[6]);R=R[a2](bc.min.x,bc.max.x);e=e[a2](bc.min.y,bc.max.y);be=E[5];bd=E[6];}}var d=aR[a7](0,R),bf=aR[a7](0,e);return{x:d,y:bf,width:h[a7](0,R)-d,height:h[a7](0,e)-bf};}),aD=function(bc){var E=[];if(!au.is(bc,"array")||!au.is(bc&&bc[0],"array")){bc=au.parsePathString(bc);}for(var e=0,R=bc[n];e<R;e++){E[e]=[];for(var d=0,S=bc[e][n];d<S;d++){E[e][d]=bc[e][d];}}E[aJ]=au._path2string;return E;},ah=an(function(R){if(!au.is(R,"array")||!au.is(R&&R[0],"array")){R=au.parsePathString(R);}var bg=[],bi=0,bh=0,bl=0,bk=0,E=0;if(R[0][0]=="M"){bi=R[0][1];bh=R[0][2];bl=bi;bk=bh;E++;bg[f](["M",bi,bh]);}for(var bd=E,bm=R[n];bd<bm;bd++){var d=bg[bd]=[],bj=R[bd];if(bj[0]!=bb.call(bj[0])){d[0]=bb.call(bj[0]);switch(d[0]){case"a":d[1]=bj[1];d[2]=bj[2];d[3]=bj[3];d[4]=bj[4];d[5]=bj[5];d[6]=+(bj[6]-bi).toFixed(3);d[7]=+(bj[7]-bh).toFixed(3);break;case"v":d[1]=+(bj[1]-bh).toFixed(3);break;case"m":bl=bj[1];bk=bj[2];default:for(var bc=1,be=bj[n];bc<be;bc++){d[bc]=+(bj[bc]-((bc%2)?bi:bh)).toFixed(3);}}}else{d=bg[bd]=[];if(bj[0]=="m"){bl=bj[1]+bi;bk=bj[2]+bh;}for(var S=0,e=bj[n];S<e;S++){bg[bd][S]=bj[S];}}var bf=bg[bd][n];switch(bg[bd][0]){case"z":bi=bl;bh=bk;break;case"h":bi+=+bg[bd][bf-1];break;case"v":bh+=+bg[bd][bf-1];break;default:bi+=+bg[bd][bf-2];bh+=+bg[bd][bf-1];}}bg[aJ]=au._path2string;return bg;},0,aD),t=an(function(R){if(!au.is(R,"array")||!au.is(R&&R[0],"array")){R=au.parsePathString(R);}var bf=[],bh=0,bg=0,bk=0,bj=0,E=0;if(R[0][0]=="M"){bh=+R[0][1];bg=+R[0][2];bk=bh;bj=bg;E++;bf[0]=["M",bh,bg];}for(var bd=E,bl=R[n];bd<bl;bd++){var d=bf[bd]=[],bi=R[bd];if(bi[0]!=aX.call(bi[0])){d[0]=aX.call(bi[0]);switch(d[0]){case"A":d[1]=bi[1];d[2]=bi[2];d[3]=bi[3];d[4]=bi[4];d[5]=bi[5];d[6]=+(bi[6]+bh);d[7]=+(bi[7]+bg);break;case"V":d[1]=+bi[1]+bg;break;case"H":d[1]=+bi[1]+bh;break;case"M":bk=+bi[1]+bh;bj=+bi[2]+bg;default:for(var bc=1,be=bi[n];bc<be;bc++){d[bc]=+bi[bc]+((bc%2)?bh:bg);}}}else{for(var S=0,e=bi[n];S<e;S++){bf[bd][S]=bi[S];}}switch(d[0]){case"Z":bh=bk;bg=bj;break;case"H":bh=d[1];break;case"V":bg=d[1];break;default:bh=bf[bd][bf[bd][n]-2];bg=bf[bd][bf[bd][n]-1];}}bf[aJ]=au._path2string;return bf;},null,aD),a8=function(e,E,d,i){return[e,E,d,i,d,i];},aT=function(e,E,bc,R,d,i){var S=1/3,bd=2/3;return[S*e+bd*bc,S*E+bd*R,S*d+bd*bc,S*i+bd*R,d,i];},O=function(bl,bQ,bu,bs,bm,bg,S,bk,bP,bn){var R=af.PI,br=R*120/180,d=R/180*(+bm||0),by=[],bv,bM=an(function(bR,bU,i){var bT=bR*af.cos(i)-bU*af.sin(i),bS=bR*af.sin(i)+bU*af.cos(i);return{x:bT,y:bS};});if(!bn){bv=bM(bl,bQ,-d);bl=bv.x;bQ=bv.y;bv=bM(bk,bP,-d);bk=bv.x;bP=bv.y;var e=af.cos(R/180*bm),bi=af.sin(R/180*bm),bA=(bl-bk)/2,bz=(bQ-bP)/2;var bK=(bA*bA)/(bu*bu)+(bz*bz)/(bs*bs);if(bK>1){bK=af.sqrt(bK);bu=bK*bu;bs=bK*bs;}var E=bu*bu,bD=bs*bs,bF=(bg==S?-1:1)*af.sqrt(af.abs((E*bD-E*bz*bz-bD*bA*bA)/(E*bz*bz+bD*bA*bA))),bp=bF*bu*bz/bs+(bl+bk)/2,bo=bF*-bs*bA/bu+(bQ+bP)/2,bf=af.asin(((bQ-bo)/bs).toFixed(7)),be=af.asin(((bP-bo)/bs).toFixed(7));bf=bl<bp?R-bf:bf;be=bk<bp?R-be:be;bf<0&&(bf=R*2+bf);be<0&&(be=R*2+be);if(S&&bf>be){bf=bf-R*2;}if(!S&&be>bf){be=be-R*2;}}else{bf=bn[0];be=bn[1];bp=bn[2];bo=bn[3];}var bj=be-bf;if(af.abs(bj)>br){var bq=be,bt=bk,bh=bP;be=bf+br*(S&&be>bf?1:-1);bk=bp+bu*af.cos(be);bP=bo+bs*af.sin(be);by=O(bk,bP,bu,bs,bm,0,S,bt,bh,[be,bq,bp,bo]);}bj=be-bf;var bd=af.cos(bf),bO=af.sin(bf),bc=af.cos(be),bN=af.sin(be),bB=af.tan(bj/4),bE=4/3*bu*bB,bC=4/3*bs*bB,bL=[bl,bQ],bJ=[bl+bE*bO,bQ-bC*bd],bI=[bk+bE*bN,bP-bC*bc],bG=[bk,bP];bJ[0]=2*bL[0]-bJ[0];bJ[1]=2*bL[1]-bJ[1];if(bn){return[bJ,bI,bG][a2](by);}else{by=[bJ,bI,bG][a2](by)[aH]()[C](",");var bw=[];for(var bH=0,bx=by[n];bH<bx;bH++){bw[bH]=bH%2?bM(by[bH-1],by[bH],d).y:bM(by[bH],by[bH+1],d).x;}return bw;}},T=function(e,d,E,i,be,bd,bc,S,bf){var R=1-bf;return{x:aV(R,3)*e+aV(R,2)*3*bf*E+R*3*bf*bf*be+aV(bf,3)*bc,y:aV(R,3)*d+aV(R,2)*3*bf*i+R*3*bf*bf*bd+aV(bf,3)*S};},aL=an(function(i,d,R,E,bl,bk,bh,be){var bj=(bl-2*R+i)-(bh-2*bl+R),bg=2*(R-i)-2*(bl-R),bd=i-R,bc=(-bg+af.sqrt(bg*bg-4*bj*bd))/2/bj,S=(-bg-af.sqrt(bg*bg-4*bj*bd))/2/bj,bf=[d,be],bi=[i,bh],e;af.abs(bc)>1000000000000&&(bc=0.5);af.abs(S)>1000000000000&&(S=0.5);if(bc>0&&bc<1){e=T(i,d,R,E,bl,bk,bh,be,bc);bi[f](e.x);bf[f](e.y);}if(S>0&&S<1){e=T(i,d,R,E,bl,bk,bh,be,S);bi[f](e.x);bf[f](e.y);}bj=(bk-2*E+d)-(be-2*bk+E);bg=2*(E-d)-2*(bk-E);bd=d-E;bc=(-bg+af.sqrt(bg*bg-4*bj*bd))/2/bj;S=(-bg-af.sqrt(bg*bg-4*bj*bd))/2/bj;af.abs(bc)>1000000000000&&(bc=0.5);af.abs(S)>1000000000000&&(S=0.5);if(bc>0&&bc<1){e=T(i,d,R,E,bl,bk,bh,be,bc);bi[f](e.x);bf[f](e.y);}if(S>0&&S<1){e=T(i,d,R,E,bl,bk,bh,be,S);bi[f](e.x);bf[f](e.y);}return{min:{x:aR[a7](0,bi),y:aR[a7](0,bf)},max:{x:h[a7](0,bi),y:h[a7](0,bf)}};}),L=an(function(bl,bg){var R=t(bl),bh=bg&&t(bg),bi={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},d={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},bc=function(bm,bn){var i,bo;if(!bm){return["C",bn.x,bn.y,bn.x,bn.y,bn.x,bn.y];}!(bm[0] in {T:1,Q:1})&&(bn.qx=bn.qy=null);switch(bm[0]){case"M":bn.X=bm[1];bn.Y=bm[2];break;case"A":bm=["C"][a2](O[a7](0,[bn.x,bn.y][a2](bm.slice(1))));break;case"S":i=bn.x+(bn.x-(bn.bx||bn.x));bo=bn.y+(bn.y-(bn.by||bn.y));bm=["C",i,bo][a2](bm.slice(1));break;case"T":bn.qx=bn.x+(bn.x-(bn.qx||bn.x));bn.qy=bn.y+(bn.y-(bn.qy||bn.y));bm=["C"][a2](aT(bn.x,bn.y,bn.qx,bn.qy,bm[1],bm[2]));break;case"Q":bn.qx=bm[1];bn.qy=bm[2];bm=["C"][a2](aT(bn.x,bn.y,bm[1],bm[2],bm[3],bm[4]));break;case"L":bm=["C"][a2](a8(bn.x,bn.y,bm[1],bm[2]));break;case"H":bm=["C"][a2](a8(bn.x,bn.y,bm[1],bn.y));break;case"V":bm=["C"][a2](a8(bn.x,bn.y,bn.x,bm[1]));break;case"Z":bm=["C"][a2](a8(bn.x,bn.y,bn.X,bn.Y));break;}return bm;},e=function(bm,bn){if(bm[bn][n]>7){bm[bn].shift();var bo=bm[bn];while(bo[n]){bm.splice(bn++,0,["C"][a2](bo.splice(0,6)));}bm.splice(bn,1);bj=h(R[n],bh&&bh[n]||0);}},E=function(bq,bp,bn,bm,bo){if(bq&&bp&&bq[bo][0]=="M"&&bp[bo][0]!="M"){bp.splice(bo,0,["M",bm.x,bm.y]);bn.bx=0;bn.by=0;bn.x=bq[bo][1];bn.y=bq[bo][2];bj=h(R[n],bh&&bh[n]||0);}};for(var be=0,bj=h(R[n],bh&&bh[n]||0);be<bj;be++){R[be]=bc(R[be],bi);e(R,be);bh&&(bh[be]=bc(bh[be],d));bh&&e(bh,be);E(R,bh,bi,d,be);E(bh,R,d,bi,be);var bd=R[be],bk=bh&&bh[be],S=bd[n],bf=bh&&bk[n];bi.x=bd[S-2];bi.y=bd[S-1];bi.bx=aa(bd[S-4])||bi.x;bi.by=aa(bd[S-3])||bi.y;d.bx=bh&&(aa(bk[bf-4])||d.x);d.by=bh&&(aa(bk[bf-3])||d.y);d.x=bh&&bk[bf-2];d.y=bh&&bk[bf-1];}return bh?[R,bh]:R;},null,aD),r=an(function(bg){var bf=[];for(var bc=0,bh=bg[n];bc<bh;bc++){var e={},be=bg[bc].match(/^([^:]*):?([\d\.]*)/);e.color=au.getRGB(be[1]);if(e.color.error){return null;}e.color=e.color.hex;be[2]&&(e.offset=be[2]+"%");bf[f](e);}for(bc=1,bh=bf[n]-1;bc<bh;bc++){if(!bf[bc].offset){var E=aa(bf[bc-1].offset||0),R=0;for(var S=bc+1;S<bh;S++){if(bf[S].offset){R=bf[S].offset;break;}}if(!R){R=100;S=bh;}R=aa(R);var bd=(R-E)/(S-bc+1);for(;bc<S;bc++){E+=bd;bf[bc].offset=E+"%";}}}return bf;}),av=function(d,R,i,E){var e;if(au.is(d,"string")||au.is(d,"object")){e=au.is(d,"string")?P.getElementById(d):d;if(e.tagName){if(R==null){return{container:e,width:e.style.pixelWidth||e.offsetWidth,height:e.style.pixelHeight||e.offsetHeight};}else{return{container:e,width:R,height:i};}}}else{if(au.is(d,aq)&&E!=null){return{container:1,x:d,y:R,width:i,height:E};}}},aP=function(d,i){var e=this;for(var E in i){if(i[W](E)&&!(E in d)){switch(typeof i[E]){case"function":(function(R){d[E]=d===e?R:function(){return R[a7](e,arguments);};})(i[E]);break;case"object":d[E]=d[E]||{};aP.call(this,d[E],i[E]);break;default:d[E]=i[E];break;}}}},ap=function(d,e){d==e.top&&(e.top=d.prev);d==e.bottom&&(e.bottom=d.next);d.next&&(d.next.prev=d.prev);d.prev&&(d.prev.next=d.next);},ac=function(d,e){if(e.top===d){return;}ap(d,e);d.next=null;d.prev=e.top;e.top.next=d;e.top=d;},l=function(d,e){if(e.bottom===d){return;}ap(d,e);d.next=e.bottom;d.prev=null;e.bottom.prev=d;e.bottom=d;},D=function(e,d,i){ap(e,i);d==i.top&&(i.top=e);d.next&&(d.next.prev=e);e.next=d.next;e.prev=d;d.next=e;},ax=function(e,d,i){ap(e,i);d==i.bottom&&(i.bottom=e);d.prev&&(d.prev.next=e);e.prev=d.prev;d.prev=e;e.next=d;},u=function(d){return function(){throw new Error("Rapha\xebl: you are calling to method \u201c"+d+"\u201d of removed object");};},az=/^r(?:\(([^,]+?)\s*,\s*([^\)]+?)\))?/;if(au.svg){a4[a9].svgns="http://www.w3.org/2000/svg";a4[a9].xlink="http://www.w3.org/1999/xlink";U=function(d){return +d+(~~d===d)*0.5;};var Z=function(S){for(var e=0,E=S[n];e<E;e++){if(bb.call(S[e][0])!="a"){for(var d=1,R=S[e][n];d<R;d++){S[e][d]=U(S[e][d]);}}else{S[e][6]=U(S[e][6]);S[e][7]=U(S[e][7]);}}return S;},aS=function(i,d){if(d){for(var e in d){if(d[W](e)){i[y](e,d[e]+aA);}}}else{return P.createElementNS(a4[a9].svgns,i);}};au[aJ]=function(){return"Your browser supports SVG.\nYou are running Rapha\xebl "+this.version;};var s=function(d,E){var e=aS("path");E.canvas&&E.canvas[aU](e);var i=new aF(e,E);i.type="path";ae(i,{fill:"none",stroke:"#000",path:d});return i;};var b=function(R,bk,d){var bh="linear",be=0.5,bc=0.5,bm=R.style;bk=(bk+aA)[aZ](az,function(bo,i,bp){bh="radial";if(i&&bp){be=aa(i);bc=aa(bp);var bn=((bc>0.5)*2-1);aV(be-0.5,2)+aV(bc-0.5,2)>0.25&&(bc=af.sqrt(0.25-aV(be-0.5,2))*bn+0.5)&&bc!=0.5&&(bc=bc.toFixed(5)-0.00001*bn);}return aA;});bk=bk[C](/\s*\-\s*/);if(bh=="linear"){var bd=bk.shift();bd=-aa(bd);if(isNaN(bd)){return null;}var S=[0,0,af.cos(bd*af.PI/180),af.sin(bd*af.PI/180)],bj=1/(h(af.abs(S[2]),af.abs(S[3]))||1);S[2]*=bj;S[3]*=bj;if(S[2]<0){S[0]=-S[2];S[2]=0;}if(S[3]<0){S[1]=-S[3];S[3]=0;}}var bg=r(bk);if(!bg){return null;}var e=R.getAttribute("fill");e=e.match(/^url\(#(.*)\)$/);e&&d.defs.removeChild(P.getElementById(e[1]));var E=aS(bh+"Gradient");E.id="r"+(au._id++)[aJ](36);aS(E,bh=="radial"?{fx:be,fy:bc}:{x1:S[0],y1:S[1],x2:S[2],y2:S[3]});d.defs[aU](E);for(var bf=0,bl=bg[n];bf<bl;bf++){var bi=aS("stop");aS(bi,{offset:bg[bf].offset?bg[bf].offset:!bf?"0%":"100%","stop-color":bg[bf].color||"#fff"});E[aU](bi);}aS(R,{fill:"url(#"+E.id+")",opacity:1,"fill-opacity":1});bm.fill=aA;bm.opacity=1;bm.fillOpacity=1;return 1;};var Q=function(e){var d=e.getBBox();aS(e.pattern,{patternTransform:au.format("translate({0},{1})",d.x,d.y)});};var ae=function(bi,br){var bl={"":[0],none:[0],"-":[3,1],".":[1,1],"-.":[3,1,1,1],"-..":[3,1,1,1,1,1],". ":[1,3],"- ":[4,3],"--":[8,3],"- .":[4,3,1,3],"--.":[8,3,1,3],"--..":[8,3,1,3,1,3]},bn=bi.node,bj=bi.attrs,bf=bi.rotate(),S=function(by,bx){bx=bl[bb.call(bx)];if(bx){var bv=by.attrs["stroke-width"]||"1",bt={round:bv,square:bv,butt:0}[by.attrs["stroke-linecap"]||br["stroke-linecap"]]||0,bw=[];var bu=bx[n];while(bu--){bw[bu]=bx[bu]*bv+((bu%2)?1:-1)*bt;}aS(bn,{"stroke-dasharray":bw[aH](",")});}};br[W]("rotation")&&(bf=br.rotation);var be=(bf+aA)[C](a);if(!(be.length-1)){be=null;}else{be[1]=+be[1];be[2]=+be[2];}aa(bf)&&bi.rotate(0,true);for(var bm in br){if(br[W](bm)){if(!k[W](bm)){continue;}var bk=br[bm];bj[bm]=bk;switch(bm){case"blur":bi.blur(bk);break;case"rotation":bi.rotate(bk,true);break;case"href":case"title":case"target":var bp=bn.parentNode;if(bb.call(bp.tagName)!="a"){var E=aS("a");bp.insertBefore(E,bn);E[aU](bn);bp=E;}bp.setAttributeNS(bi.paper.xlink,bm,bk);break;case"cursor":bn.style.cursor=bk;break;case"clip-rect":var e=(bk+aA)[C](a);if(e[n]==4){bi.clip&&bi.clip.parentNode.parentNode.removeChild(bi.clip.parentNode);var i=aS("clipPath"),bo=aS("rect");i.id="r"+(au._id++)[aJ](36);aS(bo,{x:e[0],y:e[1],width:e[2],height:e[3]});i[aU](bo);bi.paper.defs[aU](i);aS(bn,{"clip-path":"url(#"+i.id+")"});bi.clip=bo;}if(!bk){var bq=P.getElementById(bn.getAttribute("clip-path")[aZ](/(^url\(#|\)$)/g,aA));bq&&bq.parentNode.removeChild(bq);aS(bn,{"clip-path":aA});delete bi.clip;}break;case"path":if(bi.type=="path"){aS(bn,{d:bk?bj.path=Z(t(bk)):"M0,0"});}break;case"width":bn[y](bm,bk);if(bj.fx){bm="x";bk=bj.x;}else{break;}case"x":if(bj.fx){bk=-bj.x-(bj.width||0);}case"rx":if(bm=="rx"&&bi.type=="rect"){break;}case"cx":be&&(bm=="x"||bm=="cx")&&(be[1]+=bk-bj[bm]);bn[y](bm,U(bk));bi.pattern&&Q(bi);break;case"height":bn[y](bm,bk);if(bj.fy){bm="y";bk=bj.y;}else{break;}case"y":if(bj.fy){bk=-bj.y-(bj.height||0);}case"ry":if(bm=="ry"&&bi.type=="rect"){break;}case"cy":be&&(bm=="y"||bm=="cy")&&(be[2]+=bk-bj[bm]);bn[y](bm,U(bk));bi.pattern&&Q(bi);break;case"r":if(bi.type=="rect"){aS(bn,{rx:bk,ry:bk});}else{bn[y](bm,bk);}break;case"src":if(bi.type=="image"){bn.setAttributeNS(bi.paper.xlink,"href",bk);}break;case"stroke-width":bn.style.strokeWidth=bk;bn[y](bm,bk);if(bj["stroke-dasharray"]){S(bi,bj["stroke-dasharray"]);}break;case"stroke-dasharray":S(bi,bk);break;case"translation":var bc=(bk+aA)[C](a);bc[0]=+bc[0]||0;bc[1]=+bc[1]||0;if(be){be[1]+=bc[0];be[2]+=bc[1];}v.call(bi,bc[0],bc[1]);break;case"scale":bc=(bk+aA)[C](a);bi.scale(+bc[0]||1,+bc[1]||+bc[0]||1,isNaN(aa(bc[2]))?null:+bc[2],isNaN(aa(bc[3]))?null:+bc[3]);break;case"fill":var R=(bk+aA).match(c);if(R){i=aS("pattern");var bh=aS("image");i.id="r"+(au._id++)[aJ](36);aS(i,{x:0,y:0,patternUnits:"userSpaceOnUse",height:1,width:1});aS(bh,{x:0,y:0});bh.setAttributeNS(bi.paper.xlink,"href",R[1]);i[aU](bh);var bs=P.createElement("img");bs.style.cssText="position:absolute;left:-9999em;top-9999em";bs.onload=function(){aS(i,{width:this.offsetWidth,height:this.offsetHeight});aS(bh,{width:this.offsetWidth,height:this.offsetHeight});P.body.removeChild(this);bi.paper.safari();};P.body[aU](bs);bs.src=R[1];bi.paper.defs[aU](i);bn.style.fill="url(#"+i.id+")";aS(bn,{fill:"url(#"+i.id+")"});bi.pattern=i;bi.pattern&&Q(bi);break;}if(!au.getRGB(bk).error){delete br.gradient;delete bj.gradient;!au.is(bj.opacity,"undefined")&&au.is(br.opacity,"undefined")&&aS(bn,{opacity:bj.opacity});!au.is(bj["fill-opacity"],"undefined")&&au.is(br["fill-opacity"],"undefined")&&aS(bn,{"fill-opacity":bj["fill-opacity"]});}else{if((({circle:1,ellipse:1})[W](bi.type)||(bk+aA).charAt()!="r")&&b(bn,bk,bi.paper)){bj.gradient=bk;bj.fill="none";break;}}case"stroke":bn[y](bm,au.getRGB(bk).hex);break;case"gradient":(({circle:1,ellipse:1})[W](bi.type)||(bk+aA).charAt()!="r")&&b(bn,bk,bi.paper);break;case"opacity":case"fill-opacity":if(bj.gradient){var d=P.getElementById(bn.getAttribute("fill")[aZ](/^url\(#|\)$/g,aA));if(d){var bd=d.getElementsByTagName("stop");bd[bd[n]-1][y]("stop-opacity",bk);}break;}default:bm=="font-size"&&(bk=K(bk,10)+"px");var bg=bm[aZ](/(\-.)/g,function(bt){return aX.call(bt.substring(1));});bn.style[bg]=bk;bn[y](bm,bk);break;}}}I(bi,br);if(be){bi.rotate(be.join(at));}else{aa(bf)&&bi.rotate(bf,true);}};var j=1.2,I=function(d,R){if(d.type!="text"||!(R[W]("text")||R[W]("font")||R[W]("font-size")||R[W]("x")||R[W]("y"))){return;}var bf=d.attrs,e=d.node,bh=e.firstChild?K(P.defaultView.getComputedStyle(e.firstChild,aA).getPropertyValue("font-size"),10):10;if(R[W]("text")){bf.text=R.text;while(e.firstChild){e.removeChild(e.firstChild);}var E=(R.text+aA)[C]("\n");for(var S=0,bg=E[n];S<bg;S++){if(E[S]){var bd=aS("tspan");S&&aS(bd,{dy:bh*j,x:bf.x});bd[aU](P.createTextNode(E[S]));e[aU](bd);}}}else{E=e.getElementsByTagName("tspan");for(S=0,bg=E[n];S<bg;S++){S&&aS(E[S],{dy:bh*j,x:bf.x});}}aS(e,{y:bf.y});var bc=d.getBBox(),be=bf.y-(bc.y+bc.height/2);be&&isFinite(be)&&aS(e,{y:bf.y+be});},aF=function(e,d){var E=0,i=0;this[0]=e;this.id=au._oid++;this.node=e;e.raphael=this;this.paper=d;this.attrs=this.attrs||{};this.transformations=[];this._={tx:0,ty:0,rt:{deg:0,cx:0,cy:0},sx:1,sy:1};!d.bottom&&(d.bottom=this);this.prev=d.top;d.top&&(d.top.next=this);d.top=this;this.next=null;};aF[a9].rotate=function(e,d,E){if(this.removed){return this;}if(e==null){if(this._.rt.cx){return[this._.rt.deg,this._.rt.cx,this._.rt.cy][aH](at);}return this._.rt.deg;}var i=this.getBBox();e=(e+aA)[C](a);if(e[n]-1){d=aa(e[1]);E=aa(e[2]);}e=aa(e[0]);if(d!=null){this._.rt.deg=e;}else{this._.rt.deg+=e;}(E==null)&&(d=null);this._.rt.cx=d;this._.rt.cy=E;d=d==null?i.x+i.width/2:d;E=E==null?i.y+i.height/2:E;if(this._.rt.deg){this.transformations[0]=au.format("rotate({0} {1} {2})",this._.rt.deg,d,E);this.clip&&aS(this.clip,{transform:au.format("rotate({0} {1} {2})",-this._.rt.deg,d,E)});}else{this.transformations[0]=aA;this.clip&&aS(this.clip,{transform:aA});}aS(this.node,{transform:this.transformations[aH](at)});return this;};aF[a9].hide=function(){!this.removed&&(this.node.style.display="none");return this;};aF[a9].show=function(){!this.removed&&(this.node.style.display="");return this;};aF[a9].remove=function(){if(this.removed){return;}ap(this,this.paper);this.node.parentNode.removeChild(this.node);for(var d in this){delete this[d];}this.removed=true;};aF[a9].getBBox=function(){if(this.removed){return this;}if(this.type=="path"){return Y(this.attrs.path);}if(this.node.style.display=="none"){this.show();var E=true;}var bd={};try{bd=this.node.getBBox();}catch(S){}finally{bd=bd||{};}if(this.type=="text"){bd={x:bd.x,y:Infinity,width:0,height:0};for(var d=0,R=this.node.getNumberOfChars();d<R;d++){var bc=this.node.getExtentOfChar(d);(bc.y<bd.y)&&(bd.y=bc.y);(bc.y+bc.height-bd.y>bd.height)&&(bd.height=bc.y+bc.height-bd.y);(bc.x+bc.width-bd.x>bd.width)&&(bd.width=bc.x+bc.width-bd.x);}}E&&this.hide();return bd;};aF[a9].attr=function(E,bd){if(this.removed){return this;}if(E==null){var S={};for(var R in this.attrs){if(this.attrs[W](R)){S[R]=this.attrs[R];}}this._.rt.deg&&(S.rotation=this.rotate());(this._.sx!=1||this._.sy!=1)&&(S.scale=this.scale());S.gradient&&S.fill=="none"&&(S.fill=S.gradient)&&delete S.gradient;return S;}if(bd==null&&au.is(E,"string")){if(E=="translation"){return v.call(this);}if(E=="rotation"){return this.rotate();}if(E=="scale"){return this.scale();}if(E=="fill"&&this.attrs.fill=="none"&&this.attrs.gradient){return this.attrs.gradient;}return this.attrs[E];}if(bd==null&&au.is(E,"array")){var d={};for(var e=0,bc=E.length;e<bc;e++){d[E[e]]=this.attr(E[e]);}return d;}if(bd!=null){var be={};be[E]=bd;ae(this,be);}else{if(E!=null&&au.is(E,"object")){ae(this,E);}}return this;};aF[a9].toFront=function(){if(this.removed){return this;}this.node.parentNode[aU](this.node);var d=this.paper;d.top!=this&&ac(this,d);return this;};aF[a9].toBack=function(){if(this.removed){return this;}if(this.node.parentNode.firstChild!=this.node){this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild);l(this,this.paper);var d=this.paper;}return this;};aF[a9].insertAfter=function(d){if(this.removed){return this;}var e=d.node;if(e.nextSibling){e.parentNode.insertBefore(this.node,e.nextSibling);}else{e.parentNode[aU](this.node);}D(this,d,this.paper);return this;};aF[a9].insertBefore=function(d){if(this.removed){return this;}var e=d.node;e.parentNode.insertBefore(this.node,e);ax(this,d,this.paper);return this;};aF[a9].blur=function(e){var d=this;if(+e!==0){var i=aS("filter"),E=aS("feGaussianBlur");d.attrs.blur=e;i.id="r"+(au._id++)[aJ](36);aS(E,{stdDeviation:+e||1.5});i.appendChild(E);d.paper.defs.appendChild(i);d._blur=i;aS(d.node,{filter:"url(#"+i.id+")"});}else{if(d._blur){d._blur.parentNode.removeChild(d._blur);delete d._blur;delete d.attrs.blur;}d.node.removeAttribute("filter");}};var V=function(e,d,S,R){d=U(d);S=U(S);var E=aS("circle");e.canvas&&e.canvas[aU](E);var i=new aF(E,e);i.attrs={cx:d,cy:S,r:R,fill:"none",stroke:"#000"};i.type="circle";aS(E,i.attrs);return i;};var aO=function(i,d,bd,e,S,bc){d=U(d);bd=U(bd);var R=aS("rect");i.canvas&&i.canvas[aU](R);var E=new aF(R,i);E.attrs={x:d,y:bd,width:e,height:S,r:bc||0,rx:bc||0,ry:bc||0,fill:"none",stroke:"#000"};E.type="rect";aS(R,E.attrs);return E;};var am=function(e,d,bc,S,R){d=U(d);bc=U(bc);var E=aS("ellipse");e.canvas&&e.canvas[aU](E);var i=new aF(E,e);i.attrs={cx:d,cy:bc,rx:S,ry:R,fill:"none",stroke:"#000"};i.type="ellipse";aS(E,i.attrs);return i;};var q=function(i,bc,d,bd,e,S){var R=aS("image");aS(R,{x:d,y:bd,width:e,height:S,preserveAspectRatio:"none"});R.setAttributeNS(i.xlink,"href",bc);i.canvas&&i.canvas[aU](R);var E=new aF(R,i);E.attrs={x:d,y:bd,width:e,height:S,src:bc};E.type="image";return E;};var ab=function(e,d,S,R){var E=aS("text");aS(E,{x:d,y:S,"text-anchor":"middle"});e.canvas&&e.canvas[aU](E);var i=new aF(E,e);i.attrs={x:d,y:S,"text-anchor":"middle",text:R,font:k.font,stroke:"none",fill:"#000"};i.type="text";ae(i,i.attrs);return i;};var a6=function(e,d){this.width=e||this.width;this.height=d||this.height;this.canvas[y]("width",this.width);this.canvas[y]("height",this.height);return this;};var z=function(){var E=av[a7](0,arguments),i=E&&E.container,e=E.x,bc=E.y,R=E.width,d=E.height;if(!i){throw new Error("SVG container not found.");}var S=aS("svg");R=R||512;d=d||342;aS(S,{xmlns:"http://www.w3.org/2000/svg",version:1.1,width:R,height:d});if(i==1){S.style.cssText="position:absolute;left:"+e+"px;top:"+bc+"px";P.body[aU](S);}else{if(i.firstChild){i.insertBefore(S,i.firstChild);}else{i[aU](S);}}i=new a4;i.width=R;i.height=d;i.canvas=S;aP.call(i,i,au.fn);i.clear();return i;};a4[a9].clear=function(){var d=this.canvas;while(d.firstChild){d.removeChild(d.firstChild);}this.bottom=this.top=null;(this.desc=aS("desc"))[aU](P.createTextNode("Created with Rapha\xebl"));d[aU](this.desc);d[aU](this.defs=aS("defs"));};a4[a9].remove=function(){this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(var d in this){this[d]=u(d);}};}if(au.vml){var H={M:"m",L:"l",C:"c",Z:"x",m:"t",l:"r",c:"v",z:"x"},ay=/([clmz]),?([^clmz]*)/gi,ba=/-?[^,\s-]+/g,aI=1000+at+1000,p=10,aQ=function(bh){var be=/[ahqstv]/ig,E=t;(bh+aA).match(be)&&(E=L);be=/[clmz]/g;if(E==t&&!(bh+aA).match(be)){var bd=(bh+aA)[aZ](ay,function(bk,bm,bi){var bl=[],i=bb.call(bm)=="m",bj=H[bm];bi[aZ](ba,function(bn){if(i&&bl[n]==2){bj+=bl+H[bm=="m"?"l":"L"];bl=[];}bl[f](U(bn*p));});return bj+bl;});return bd;}var bf=E(bh),e,d;bd=[];for(var S=0,bg=bf[n];S<bg;S++){e=bf[S];d=bb.call(bf[S][0]);d=="z"&&(d="x");for(var R=1,bc=e[n];R<bc;R++){d+=U(e[R]*p)+(R!=bc-1?",":aA);}bd[f](d);}return bd[aH](at);};au[aJ]=function(){return"Your browser doesn\u2019t support SVG. Falling down to VML.\nYou are running Rapha\xebl "+this.version;};s=function(i,e){var S=al("group");S.style.cssText="position:absolute;left:0;top:0;width:"+e.width+"px;height:"+e.height+"px";S.coordsize=e.coordsize;S.coordorigin=e.coordorigin;var R=al("shape"),E=R.style;E.width=e.width+"px";E.height=e.height+"px";R.coordsize=aI;R.coordorigin=e.coordorigin;S[aU](R);var bc=new aF(R,S,e),d={fill:"none",stroke:"#000"};i&&(d.path=i);bc.isAbsolute=true;bc.type="path";bc.path=[];bc.Path=aA;ae(bc,d);e.canvas[aU](S);return bc;};ae=function(bf,bk){bf.attrs=bf.attrs||{};var bi=bf.node,bl=bf.attrs,bc=bi.style,E,bp=bf;for(var bd in bk){if(bk[W](bd)){bl[bd]=bk[bd];}}bk.href&&(bi.href=bk.href);bk.title&&(bi.title=bk.title);bk.target&&(bi.target=bk.target);bk.cursor&&(bc.cursor=bk.cursor);"blur" in bk&&bf.blur(bk.blur);if(bk.path&&bf.type=="path"){bl.path=bk.path;bi.path=aQ(bl.path);}if(bk.rotation!=null){bf.rotate(bk.rotation,true);}if(bk.translation){E=(bk.translation+aA)[C](a);v.call(bf,E[0],E[1]);if(bf._.rt.cx!=null){bf._.rt.cx+=+E[0];bf._.rt.cy+=+E[1];bf.setBox(bf.attrs,E[0],E[1]);}}if(bk.scale){E=(bk.scale+aA)[C](a);bf.scale(+E[0]||1,+E[1]||+E[0]||1,+E[2]||null,+E[3]||null);}if("clip-rect" in bk){var d=(bk["clip-rect"]+aA)[C](a);if(d[n]==4){d[2]=+d[2]+(+d[0]);d[3]=+d[3]+(+d[1]);var be=bi.clipRect||P.createElement("div"),bo=be.style,S=bi.parentNode;bo.clip=au.format("rect({1}px {2}px {3}px {0}px)",d);if(!bi.clipRect){bo.position="absolute";bo.top=0;bo.left=0;bo.width=bf.paper.width+"px";bo.height=bf.paper.height+"px";S.parentNode.insertBefore(be,S);be[aU](S);bi.clipRect=be;}}if(!bk["clip-rect"]){bi.clipRect&&(bi.clipRect.style.clip=aA);}}if(bf.type=="image"&&bk.src){bi.src=bk.src;}if(bf.type=="image"&&bk.opacity){bi.filterOpacity=" progid:DXImageTransform.Microsoft.Alpha(opacity="+(bk.opacity*100)+")";bc.filter=(bi.filterMatrix||aA)+(bi.filterOpacity||aA);}bk.font&&(bc.font=bk.font);bk["font-family"]&&(bc.fontFamily='"'+bk["font-family"][C](",")[0][aZ](/^['"]+|['"]+$/g,aA)+'"');bk["font-size"]&&(bc.fontSize=bk["font-size"]);bk["font-weight"]&&(bc.fontWeight=bk["font-weight"]);bk["font-style"]&&(bc.fontStyle=bk["font-style"]);if(bk.opacity!=null||bk["stroke-width"]!=null||bk.fill!=null||bk.stroke!=null||bk["stroke-width"]!=null||bk["stroke-opacity"]!=null||bk["fill-opacity"]!=null||bk["stroke-dasharray"]!=null||bk["stroke-miterlimit"]!=null||bk["stroke-linejoin"]!=null||bk["stroke-linecap"]!=null){bi=bf.shape||bi;var bj=(bi.getElementsByTagName("fill")&&bi.getElementsByTagName("fill")[0]),bm=false;!bj&&(bm=bj=al("fill"));if("fill-opacity" in bk||"opacity" in bk){var e=((+bl["fill-opacity"]+1||2)-1)*((+bl.opacity+1||2)-1);e<0&&(e=0);e>1&&(e=1);bj.opacity=e;}bk.fill&&(bj.on=true);if(bj.on==null||bk.fill=="none"){bj.on=false;}if(bj.on&&bk.fill){var i=bk.fill.match(c);if(i){bj.src=i[1];bj.type="tile";}else{bj.color=au.getRGB(bk.fill).hex;bj.src=aA;bj.type="solid";if(au.getRGB(bk.fill).error&&(bp.type in {circle:1,ellipse:1}||(bk.fill+aA).charAt()!="r")&&b(bp,bk.fill)){bl.fill="none";bl.gradient=bk.fill;}}}bm&&bi[aU](bj);var R=(bi.getElementsByTagName("stroke")&&bi.getElementsByTagName("stroke")[0]),bn=false;!R&&(bn=R=al("stroke"));if((bk.stroke&&bk.stroke!="none")||bk["stroke-width"]||bk["stroke-opacity"]!=null||bk["stroke-dasharray"]||bk["stroke-miterlimit"]||bk["stroke-linejoin"]||bk["stroke-linecap"]){R.on=true;}(bk.stroke=="none"||R.on==null||bk.stroke==0||bk["stroke-width"]==0)&&(R.on=false);R.on&&bk.stroke&&(R.color=au.getRGB(bk.stroke).hex);e=((+bl["stroke-opacity"]+1||2)-1)*((+bl.opacity+1||2)-1);var bg=(aa(bk["stroke-width"])||1)*0.75;e<0&&(e=0);e>1&&(e=1);bk["stroke-width"]==null&&(bg=bl["stroke-width"]);bk["stroke-width"]&&(R.weight=bg);bg&&bg<1&&(e*=bg)&&(R.weight=1);R.opacity=e;bk["stroke-linejoin"]&&(R.joinstyle=bk["stroke-linejoin"]||"miter");R.miterlimit=bk["stroke-miterlimit"]||8;bk["stroke-linecap"]&&(R.endcap=bk["stroke-linecap"]=="butt"?"flat":bk["stroke-linecap"]=="square"?"square":"round");if(bk["stroke-dasharray"]){var bh={"-":"shortdash",".":"shortdot","-.":"shortdashdot","-..":"shortdashdotdot",". ":"dot","- ":"dash","--":"longdash","- .":"dashdot","--.":"longdashdot","--..":"longdashdotdot"};R.dashstyle=bh[W](bk["stroke-dasharray"])?bh[bk["stroke-dasharray"]]:aA;}bn&&bi[aU](R);}if(bp.type=="text"){bc=bp.paper.span.style;bl.font&&(bc.font=bl.font);bl["font-family"]&&(bc.fontFamily=bl["font-family"]);bl["font-size"]&&(bc.fontSize=bl["font-size"]);bl["font-weight"]&&(bc.fontWeight=bl["font-weight"]);bl["font-style"]&&(bc.fontStyle=bl["font-style"]);bp.node.string&&(bp.paper.span.innerHTML=(bp.node.string+aA)[aZ](/</g,"&#60;")[aZ](/&/g,"&#38;")[aZ](/\n/g,"<br>"));bp.W=bl.w=bp.paper.span.offsetWidth;bp.H=bl.h=bp.paper.span.offsetHeight;bp.X=bl.x;bp.Y=bl.y+U(bp.H/2);switch(bl["text-anchor"]){case"start":bp.node.style["v-text-align"]="left";bp.bbx=U(bp.W/2);break;case"end":bp.node.style["v-text-align"]="right";bp.bbx=-U(bp.W/2);break;default:bp.node.style["v-text-align"]="center";break;}}};b=function(d,bd){d.attrs=d.attrs||{};var be=d.attrs,bg=d.node.getElementsByTagName("fill"),S="linear",bc=".5 .5";d.attrs.gradient=bd;bd=(bd+aA)[aZ](az,function(bi,bj,i){S="radial";if(bj&&i){bj=aa(bj);i=aa(i);aV(bj-0.5,2)+aV(i-0.5,2)>0.25&&(i=af.sqrt(0.25-aV(bj-0.5,2))*((i>0.5)*2-1)+0.5);bc=bj+at+i;}return aA;});bd=bd[C](/\s*\-\s*/);if(S=="linear"){var e=bd.shift();e=-aa(e);if(isNaN(e)){return null;}}var R=r(bd);if(!R){return null;}d=d.shape||d.node;bg=bg[0]||al("fill");if(R[n]){bg.on=true;bg.method="none";bg.type=(S=="radial")?"gradientradial":"gradient";bg.color=R[0].color;bg.color2=R[R[n]-1].color;var bh=[];for(var E=0,bf=R[n];E<bf;E++){R[E].offset&&bh[f](R[E].offset+at+R[E].color);}bg.colors&&(bg.colors.value=bh[n]?bh[aH](","):"0% "+bg.color);if(S=="radial"){bg.focus="100%";bg.focussize=bc;bg.focusposition=bc;}else{bg.angle=(270-e)%360;}}return 1;};aF=function(R,bc,d){var S=0,i=0,e=0,E=1;this[0]=R;this.id=au._oid++;this.node=R;R.raphael=this;this.X=0;this.Y=0;this.attrs={};this.Group=bc;this.paper=d;this._={tx:0,ty:0,rt:{deg:0},sx:1,sy:1};!d.bottom&&(d.bottom=this);this.prev=d.top;d.top&&(d.top.next=this);d.top=this;this.next=null;};aF[a9].rotate=function(e,d,i){if(this.removed){return this;}if(e==null){if(this._.rt.cx){return[this._.rt.deg,this._.rt.cx,this._.rt.cy][aH](at);}return this._.rt.deg;}e=(e+aA)[C](a);if(e[n]-1){d=aa(e[1]);i=aa(e[2]);}e=aa(e[0]);if(d!=null){this._.rt.deg=e;}else{this._.rt.deg+=e;}i==null&&(d=null);this._.rt.cx=d;this._.rt.cy=i;this.setBox(this.attrs,d,i);this.Group.style.rotation=this._.rt.deg;return this;};aF[a9].setBox=function(bo,e,d){if(this.removed){return this;}var bi=this.Group.style,R=(this.shape&&this.shape.style)||this.node.style;bo=bo||{};for(var bm in bo){if(bo[W](bm)){this.attrs[bm]=bo[bm];}}e=e||this._.rt.cx;d=d||this._.rt.cy;var bk=this.attrs,bd,bc,be,bn;switch(this.type){case"circle":bd=bk.cx-bk.r;bc=bk.cy-bk.r;be=bn=bk.r*2;break;case"ellipse":bd=bk.cx-bk.rx;bc=bk.cy-bk.ry;be=bk.rx*2;bn=bk.ry*2;break;case"rect":case"image":bd=+bk.x;bc=+bk.y;be=bk.width||0;bn=bk.height||0;break;case"text":this.textpath.v=["m",U(bk.x),", ",U(bk.y-2),"l",U(bk.x)+1,", ",U(bk.y-2)][aH](aA);bd=bk.x-U(this.W/2);bc=bk.y-this.H/2;be=this.W;bn=this.H;break;case"path":if(!this.attrs.path){bd=0;bc=0;be=this.paper.width;bn=this.paper.height;}else{var bl=Y(this.attrs.path);bd=bl.x;bc=bl.y;be=bl.width;bn=bl.height;}break;default:bd=0;bc=0;be=this.paper.width;bn=this.paper.height;break;}e=(e==null)?bd+be/2:e;d=(d==null)?bc+bn/2:d;var E=e-this.paper.width/2,bh=d-this.paper.height/2,bg;bi.left!=(bg=E+"px")&&(bi.left=bg);bi.top!=(bg=bh+"px")&&(bi.top=bg);this.X=this.type=="path"?-E:bd;this.Y=this.type=="path"?-bh:bc;this.W=be;this.H=bn;if(this.type=="path"){R.left!=(bg=-E*p+"px")&&(R.left=bg);R.top!=(bg=-bh*p+"px")&&(R.top=bg);}else{if(this.type=="text"){R.left!=(bg=-E+"px")&&(R.left=bg);R.top!=(bg=-bh+"px")&&(R.top=bg);}else{bi.width!=(bg=this.paper.width+"px")&&(bi.width=bg);bi.height!=(bg=this.paper.height+"px")&&(bi.height=bg);R.left!=(bg=bd-E+"px")&&(R.left=bg);R.top!=(bg=bc-bh+"px")&&(R.top=bg);R.width!=(bg=be+"px")&&(R.width=bg);R.height!=(bg=bn+"px")&&(R.height=bg);var S=(+bo.r||0)/aR(be,bn);if(this.type=="rect"&&this.arcsize.toFixed(4)!=S.toFixed(4)&&(S||this.arcsize)){var bj=al("roundrect"),bp={},bf=this.events&&this.events[n];bm=0;bj.arcsize=S;bj.raphael=this;this.Group[aU](bj);this.Group.removeChild(this.node);this[0]=this.node=bj;this.arcsize=S;for(bm in bk){bp[bm]=bk[bm];}delete bp.scale;this.attr(bp);if(this.events){for(;bm<bf;bm++){this.events[bm].unbind=ai(this.node,this.events[bm].name,this.events[bm].f,this);}}}}}};aF[a9].hide=function(){!this.removed&&(this.Group.style.display="none");return this;};aF[a9].show=function(){!this.removed&&(this.Group.style.display="block");return this;};aF[a9].getBBox=function(){if(this.removed){return this;}if(this.type=="path"){return Y(this.attrs.path);}return{x:this.X+(this.bbx||0),y:this.Y,width:this.W,height:this.H};};aF[a9].remove=function(){if(this.removed){return;}ap(this,this.paper);this.node.parentNode.removeChild(this.node);this.Group.parentNode.removeChild(this.Group);this.shape&&this.shape.parentNode.removeChild(this.shape);for(var d in this){delete this[d];}this.removed=true;};aF[a9].attr=function(e,bc){if(this.removed){return this;}if(e==null){var R={};for(var E in this.attrs){if(this.attrs[W](E)){R[E]=this.attrs[E];}}this._.rt.deg&&(R.rotation=this.rotate());(this._.sx!=1||this._.sy!=1)&&(R.scale=this.scale());R.gradient&&R.fill=="none"&&(R.fill=R.gradient)&&delete R.gradient;return R;}if(bc==null&&au.is(e,"string")){if(e=="translation"){return v.call(this);}if(e=="rotation"){return this.rotate();}if(e=="scale"){return this.scale();}if(e=="fill"&&this.attrs.fill=="none"&&this.attrs.gradient){return this.attrs.gradient;}return this.attrs[e];}if(this.attrs&&bc==null&&au.is(e,"array")){var S,d={};for(E=0,S=e[n];E<S;E++){d[e[E]]=this.attr(e[E]);}return d;}var bd;if(bc!=null){bd={};bd[e]=bc;}bc==null&&au.is(e,"object")&&(bd=e);if(bd){if(bd.text&&this.type=="text"){this.node.string=bd.text;}ae(this,bd);if(bd.gradient&&(({circle:1,ellipse:1})[W](this.type)||(bd.gradient+aA).charAt()!="r")){b(this,bd.gradient);}(this.type!="path"||this._.rt.deg)&&this.setBox(this.attrs);}return this;};aF[a9].toFront=function(){!this.removed&&this.Group.parentNode[aU](this.Group);this.paper.top!=this&&ac(this,this.paper);return this;};aF[a9].toBack=function(){if(this.removed){return this;}if(this.Group.parentNode.firstChild!=this.Group){this.Group.parentNode.insertBefore(this.Group,this.Group.parentNode.firstChild);l(this,this.paper);}return this;};aF[a9].insertAfter=function(d){if(this.removed){return this;}if(d.Group.nextSibling){d.Group.parentNode.insertBefore(this.Group,d.Group.nextSibling);}else{d.Group.parentNode[aU](this.Group);}D(this,d,this.paper);return this;};aF[a9].insertBefore=function(d){if(this.removed){return this;}d.Group.parentNode.insertBefore(this.Group,d.Group);ax(this,d,this.paper);return this;};var a3=/ progid:\S+Blur\([^\)]+\)/g;aF[a9].blur=function(d){var e=this.node.style,i=e.filter;i=i.replace(a3,"");if(+d!==0){this.attrs.blur=d;e.filter=i+" progid:DXImageTransform.Microsoft.Blur(pixelradius="+(+d||1.5)+")";e.margin=Raphael.format("-{0}px 0 0 -{0}px",Math.round(+d||1.5));}else{e.filter=i;e.margin=0;delete this.attrs.blur;}};V=function(e,d,bd,S){var R=al("group"),bc=al("oval"),i=bc.style;R.style.cssText="position:absolute;left:0;top:0;width:"+e.width+"px;height:"+e.height+"px";R.coordsize=aI;R.coordorigin=e.coordorigin;R[aU](bc);var E=new aF(bc,R,e);E.type="circle";ae(E,{stroke:"#000",fill:"none"});E.attrs.cx=d;E.attrs.cy=bd;E.attrs.r=S;E.setBox({x:d-S,y:bd-S,width:S*2,height:S*2});e.canvas[aU](R);return E;};aO=function(e,bd,bc,be,E,d){var R=al("group"),i=al("roundrect"),bf=(+d||0)/(aR(be,E));R.style.cssText="position:absolute;left:0;top:0;width:"+e.width+"px;height:"+e.height+"px";R.coordsize=aI;R.coordorigin=e.coordorigin;R[aU](i);i.arcsize=bf;var S=new aF(i,R,e);S.type="rect";ae(S,{stroke:"#000"});S.arcsize=bf;S.setBox({x:bd,y:bc,width:be,height:E,r:d});e.canvas[aU](R);return S;};am=function(d,be,bd,i,e){var R=al("group"),E=al("oval"),bc=E.style;R.style.cssText="position:absolute;left:0;top:0;width:"+d.width+"px;height:"+d.height+"px";R.coordsize=aI;R.coordorigin=d.coordorigin;R[aU](E);var S=new aF(E,R,d);S.type="ellipse";ae(S,{stroke:"#000"});S.attrs.cx=be;S.attrs.cy=bd;S.attrs.rx=i;S.attrs.ry=e;S.setBox({x:be-i,y:bd-e,width:i*2,height:e*2});d.canvas[aU](R);return S;};q=function(e,d,be,bd,bf,E){var R=al("group"),i=al("image"),bc=i.style;R.style.cssText="position:absolute;left:0;top:0;width:"+e.width+"px;height:"+e.height+"px";R.coordsize=aI;R.coordorigin=e.coordorigin;i.src=d;R[aU](i);var S=new aF(i,R,e);S.type="image";S.attrs.src=d;S.attrs.x=be;S.attrs.y=bd;S.attrs.w=bf;S.attrs.h=E;S.setBox({x:be,y:bd,width:bf,height:E});e.canvas[aU](R);return S;};ab=function(e,be,bd,bf){var R=al("group"),E=al("shape"),bc=E.style,bg=al("path"),d=bg.style,i=al("textpath");R.style.cssText="position:absolute;left:0;top:0;width:"+e.width+"px;height:"+e.height+"px";R.coordsize=aI;R.coordorigin=e.coordorigin;bg.v=au.format("m{0},{1}l{2},{1}",U(be*10),U(bd*10),U(be*10)+1);bg.textpathok=true;bc.width=e.width;bc.height=e.height;i.string=bf+aA;i.on=true;E[aU](i);E[aU](bg);R[aU](E);var S=new aF(i,R,e);S.shape=E;S.textpath=bg;S.type="text";S.attrs.text=bf;S.attrs.x=be;S.attrs.y=bd;S.attrs.w=1;S.attrs.h=1;ae(S,{font:k.font,stroke:"none",fill:"#000"});S.setBox();e.canvas[aU](R);return S;};a6=function(i,d){var e=this.canvas.style;i==+i&&(i+="px");d==+d&&(d+="px");e.width=i;e.height=d;e.clip="rect(0 "+i+" "+d+" 0)";return this;};var al;P.createStyleSheet().addRule(".rvml","behavior:url(#default#VML)");try{!P.namespaces.rvml&&P.namespaces.add("rvml","urn:schemas-microsoft-com:vml");al=function(d){return P.createElement("<rvml:"+d+' class="rvml">');};}catch(aj){al=function(d){return P.createElement("<"+d+' xmlns="urn:schemas-microsoft.com:vml" class="rvml">');};}z=function(){var i=av[a7](0,arguments),d=i.container,be=i.height,bf,e=i.width,bd=i.x,bc=i.y;if(!d){throw new Error("VML container not found.");}var R=new a4,S=R.canvas=P.createElement("div"),E=S.style;e=e||512;be=be||342;e==+e&&(e+="px");be==+be&&(be+="px");R.width=1000;R.height=1000;R.coordsize=p*1000+at+p*1000;R.coordorigin="0 0";R.span=P.createElement("span");R.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";S[aU](R.span);E.cssText=au.format("width:{0};height:{1};position:absolute;clip:rect(0 {0} {1} 0);overflow:hidden",e,be);if(d==1){P.body[aU](S);E.left=bd+"px";E.top=bc+"px";}else{d.style.width=e;d.style.height=be;if(d.firstChild){d.insertBefore(S,d.firstChild);}else{d[aU](S);}}aP.call(R,R,au.fn);return R;};a4[a9].clear=function(){this.canvas.innerHTML=aA;this.span=P.createElement("span");this.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";this.canvas[aU](this.span);this.bottom=this.top=null;};a4[a9].remove=function(){this.canvas.parentNode.removeChild(this.canvas);for(var d in this){this[d]=u(d);}return true;};}if((/^Apple|^Google/).test(aB.navigator.vendor)&&!(aB.navigator.userAgent.indexOf("Version/4.0")+1)){a4[a9].safari=function(){var d=this.rect(-99,-99,this.width+99,this.height+99);aB.setTimeout(function(){d.remove();});};}else{a4[a9].safari=function(){};}var ai=(function(){if(P.addEventListener){return function(R,i,e,d){var E=function(S){return e.call(d,S);};R.addEventListener(i,E,false);return function(){R.removeEventListener(i,E,false);return true;};};}else{if(P.attachEvent){return function(S,E,i,e){var R=function(bc){return i.call(e,bc||aB.event);};S.attachEvent("on"+E,R);var d=function(){S.detachEvent("on"+E,R);return true;};return d;};}}})();for(var ag=J[n];ag--;){(function(d){aF[a9][d]=function(e){if(au.is(e,"function")){this.events=this.events||[];this.events.push({name:d,f:e,unbind:ai(this.shape||this.node,d,e,this)});}return this;};aF[a9]["un"+d]=function(E){var i=this.events,e=i[n];while(e--){if(i[e].name==d&&i[e].f==E){i[e].unbind();i.splice(e,1);!i.length&&delete this.events;return this;}}return this;};})(J[ag]);}aF[a9].hover=function(e,d){return this.mouseover(e).mouseout(d);};aF[a9].unhover=function(e,d){return this.unmouseover(e).unmouseout(d);};a4[a9].circle=function(d,i,e){return V(this,d||0,i||0,e||0);};a4[a9].rect=function(d,R,e,i,E){return aO(this,d||0,R||0,e||0,i||0,E||0);};a4[a9].ellipse=function(d,E,i,e){return am(this,d||0,E||0,i||0,e||0);};a4[a9].path=function(d){d&&!au.is(d,"string")&&!au.is(d[0],"array")&&(d+=aA);return s(au.format[a7](au,arguments),this);};a4[a9].image=function(E,d,R,e,i){return q(this,E||"about:blank",d||0,R||0,e||0,i||0);};a4[a9].text=function(d,i,e){return ab(this,d||0,i||0,e||aA);};a4[a9].set=function(d){arguments[n]>1&&(d=Array[a9].splice.call(arguments,0,arguments[n]));return new X(d);};a4[a9].setSize=a6;a4[a9].top=a4[a9].bottom=null;a4[a9].raphael=au;function x(){return this.x+at+this.y;}aF[a9].scale=function(bi,bh,E,e){if(bi==null&&bh==null){return{x:this._.sx,y:this._.sy,toString:x};}bh=bh||bi;!+bh&&(bh=bi);var bm,bk,bl,bj,by=this.attrs;if(bi!=0){var bg=this.getBBox(),bd=bg.x+bg.width/2,R=bg.y+bg.height/2,bx=bi/this._.sx,bw=bh/this._.sy;E=(+E||E==0)?E:bd;e=(+e||e==0)?e:R;var bf=~~(bi/af.abs(bi)),bc=~~(bh/af.abs(bh)),bp=this.node.style,bA=E+(bd-E)*bx,bz=e+(R-e)*bw;switch(this.type){case"rect":case"image":var be=by.width*bf*bx,bo=by.height*bc*bw;this.attr({height:bo,r:by.r*aR(bf*bx,bc*bw),width:be,x:bA-be/2,y:bz-bo/2});break;case"circle":case"ellipse":this.attr({rx:by.rx*bf*bx,ry:by.ry*bc*bw,r:by.r*aR(bf*bx,bc*bw),cx:bA,cy:bz});break;case"path":var br=ah(by.path),bs=true;for(var bu=0,bn=br[n];bu<bn;bu++){var bq=br[bu],S=aX.call(bq[0]);if(S=="M"&&bs){continue;}else{bs=false;}if(S=="A"){bq[br[bu][n]-2]*=bx;bq[br[bu][n]-1]*=bw;bq[1]*=bf*bx;bq[2]*=bc*bw;bq[5]=+!(bf+bc?!+bq[5]:+bq[5]);}else{if(S=="H"){for(var bt=1,bv=bq[n];bt<bv;bt++){bq[bt]*=bx;}}else{if(S=="V"){for(bt=1,bv=bq[n];bt<bv;bt++){bq[bt]*=bw;}}else{for(bt=1,bv=bq[n];bt<bv;bt++){bq[bt]*=(bt%2)?bx:bw;}}}}}var d=Y(br);bm=bA-d.x-d.width/2;bk=bz-d.y-d.height/2;br[0][1]+=bm;br[0][2]+=bk;this.attr({path:br});break;}if(this.type in {text:1,image:1}&&(bf!=1||bc!=1)){if(this.transformations){this.transformations[2]="scale("[a2](bf,",",bc,")");this.node[y]("transform",this.transformations[aH](at));bm=(bf==-1)?-by.x-(be||0):by.x;bk=(bc==-1)?-by.y-(bo||0):by.y;this.attr({x:bm,y:bk});by.fx=bf-1;by.fy=bc-1;}else{this.node.filterMatrix=" progid:DXImageTransform.Microsoft.Matrix(M11="[a2](bf,", M12=0, M21=0, M22=",bc,", Dx=0, Dy=0, sizingmethod='auto expand', filtertype='bilinear')");bp.filter=(this.node.filterMatrix||aA)+(this.node.filterOpacity||aA);}}else{if(this.transformations){this.transformations[2]=aA;this.node[y]("transform",this.transformations[aH](at));by.fx=0;by.fy=0;}else{this.node.filterMatrix=aA;bp.filter=(this.node.filterMatrix||aA)+(this.node.filterOpacity||aA);}}by.scale=[bi,bh,E,e][aH](at);this._.sx=bi;this._.sy=bh;}return this;};aF[a9].clone=function(){var d=this.attr();delete d.scale;delete d.translation;return this.paper[this.type]().attr(d);};var g=an(function(E,d,bd,bc,bj,bi,bh,bg,R){var bf=0,S;for(var be=0;be<1.001;be+=0.001){var e=au.findDotsAtSegment(E,d,bd,bc,bj,bi,bh,bg,be);be&&(bf+=aV(aV(S.x-e.x,2)+aV(S.y-e.y,2),0.5));if(bf>=R){return e;}S=e;}}),aK=function(d,e){return function(bl,S,bc){bl=L(bl);var bh,bg,E,bd,R="",bk={},bi,bf=0;for(var be=0,bj=bl.length;be<bj;be++){E=bl[be];if(E[0]=="M"){bh=+E[1];bg=+E[2];}else{bd=o(bh,bg,E[1],E[2],E[3],E[4],E[5],E[6]);if(bf+bd>S){if(e&&!bk.start){bi=g(bh,bg,E[1],E[2],E[3],E[4],E[5],E[6],S-bf);R+=["C",bi.start.x,bi.start.y,bi.m.x,bi.m.y,bi.x,bi.y];if(bc){return R;}bk.start=R;R=["M",bi.x,bi.y+"C",bi.n.x,bi.n.y,bi.end.x,bi.end.y,E[5],E[6]][aH]();bf+=bd;bh=+E[5];bg=+E[6];continue;}if(!d&&!e){bi=g(bh,bg,E[1],E[2],E[3],E[4],E[5],E[6],S-bf);return{x:bi.x,y:bi.y,alpha:bi.alpha};}}bf+=bd;bh=+E[5];bg=+E[6];}R+=E;}bk.end=R;bi=d?bf:e?bk:au.findDotsAtSegment(bh,bg,E[1],E[2],E[3],E[4],E[5],E[6],1);bi.alpha&&(bi={x:bi.x,y:bi.y,alpha:bi.alpha});return bi;};},o=an(function(E,d,bc,S,bi,bh,bg,bf){var R={x:0,y:0},be=0;for(var bd=0;bd<1.01;bd+=0.01){var e=T(E,d,bc,S,bi,bh,bg,bf,bd);bd&&(be+=aV(aV(R.x-e.x,2)+aV(R.y-e.y,2),0.5));R=e;}return be;});var aw=aK(1),G=aK(),N=aK(0,1);aF[a9].getTotalLength=function(){if(this.type!="path"){return;}return aw(this.attrs.path);};aF[a9].getPointAtLength=function(d){if(this.type!="path"){return;}return G(this.attrs.path,d);};aF[a9].getSubpath=function(i,e){if(this.type!="path"){return;}if(af.abs(this.getTotalLength()-e)<0.000001){return N(this.attrs.path,i).end;}var d=N(this.attrs.path,e,1);return i?N(d,i).end:d;};au.easing_formulas={linear:function(d){return d;},"<":function(d){return aV(d,3);},">":function(d){return aV(d-1,3)+1;},"<>":function(d){d=d*2;if(d<1){return aV(d,3)/2;}d-=2;return(aV(d,3)+2)/2;},backIn:function(e){var d=1.70158;return e*e*((d+1)*e-d);},backOut:function(e){e=e-1;var d=1.70158;return e*e*((d+1)*e+d)+1;},elastic:function(i){if(i==0||i==1){return i;}var e=0.3,d=e/4;return aV(2,-10*i)*af.sin((i-d)*(2*af.PI)/e)+1;},bounce:function(E){var e=7.5625,i=2.75,d;if(E<(1/i)){d=e*E*E;}else{if(E<(2/i)){E-=(1.5/i);d=e*E*E+0.75;}else{if(E<(2.5/i)){E-=(2.25/i);d=e*E*E+0.9375;}else{E-=(2.625/i);d=e*E*E+0.984375;}}}return d;}};var M={length:0},a1=function(){var be=+new Date;for(var bq in M){if(bq!="length"&&M[W](bq)){var bv=M[bq];if(bv.stop||bv.el.removed){delete M[bq];M[n]--;continue;}var bc=be-bv.start,bn=bv.ms,bm=bv.easing,br=bv.from,bj=bv.diff,E=bv.to,bi=bv.t,bl=bv.prev||0,bd=bv.el,R=bv.callback,bk={},d;if(bc<bn){var S=au.easing_formulas[bm]?au.easing_formulas[bm](bc/bn):bc/bn;for(var bo in br){if(br[W](bo)){switch(ad[bo]){case"along":d=S*bn*bj[bo];E.back&&(d=E.len-d);var bp=G(E[bo],d);bd.translate(bj.sx-bj.x||0,bj.sy-bj.y||0);bj.x=bp.x;bj.y=bp.y;bd.translate(bp.x-bj.sx,bp.y-bj.sy);E.rot&&bd.rotate(bj.r+bp.alpha,bp.x,bp.y);break;case"number":d=+br[bo]+S*bn*bj[bo];break;case"colour":d="rgb("+[F(U(br[bo].r+S*bn*bj[bo].r)),F(U(br[bo].g+S*bn*bj[bo].g)),F(U(br[bo].b+S*bn*bj[bo].b))][aH](",")+")";break;case"path":d=[];for(var bt=0,bh=br[bo][n];bt<bh;bt++){d[bt]=[br[bo][bt][0]];for(var bs=1,bu=br[bo][bt][n];bs<bu;bs++){d[bt][bs]=+br[bo][bt][bs]+S*bn*bj[bo][bt][bs];}d[bt]=d[bt][aH](at);}d=d[aH](at);break;case"csv":switch(bo){case"translation":var bg=bj[bo][0]*(bc-bl),bf=bj[bo][1]*(bc-bl);bi.x+=bg;bi.y+=bf;d=bg+at+bf;break;case"rotation":d=+br[bo][0]+S*bn*bj[bo][0];br[bo][1]&&(d+=","+br[bo][1]+","+br[bo][2]);break;case"scale":d=[+br[bo][0]+S*bn*bj[bo][0],+br[bo][1]+S*bn*bj[bo][1],(2 in E[bo]?E[bo][2]:aA),(3 in E[bo]?E[bo][3]:aA)][aH](at);break;case"clip-rect":d=[];bt=4;while(bt--){d[bt]=+br[bo][bt]+S*bn*bj[bo][bt];}break;}break;}bk[bo]=d;}}bd.attr(bk);bd._run&&bd._run.call(bd);}else{if(E.along){bp=G(E.along,E.len*!E.back);bd.translate(bj.sx-(bj.x||0)+bp.x-bj.sx,bj.sy-(bj.y||0)+bp.y-bj.sy);E.rot&&bd.rotate(bj.r+bp.alpha,bp.x,bp.y);}(bi.x||bi.y)&&bd.translate(-bi.x,-bi.y);E.scale&&(E.scale=E.scale+aA);bd.attr(E);delete M[bq];M[n]--;bd.in_animation=null;au.is(R,"function")&&R.call(bd);}bv.prev=bc;}}au.svg&&bd&&bd.paper.safari();M[n]&&aB.setTimeout(a1);},F=function(d){return d>255?255:(d<0?0:d);},v=function(d,i){if(d==null){return{x:this._.tx,y:this._.ty,toString:x};}this._.tx+=+d;this._.ty+=+i;switch(this.type){case"circle":case"ellipse":this.attr({cx:+d+this.attrs.cx,cy:+i+this.attrs.cy});break;case"rect":case"image":case"text":this.attr({x:+d+this.attrs.x,y:+i+this.attrs.y});break;case"path":var e=ah(this.attrs.path);e[0][1]+=+d;e[0][2]+=+i;this.attr({path:e});break;}return this;};aF[a9].animateWith=function(e,i,d,R,E){M[e.id]&&(i.start=M[e.id].start);return this.animate(i,d,R,E);};aF[a9].animateAlong=aG();aF[a9].animateAlongBack=aG(1);function aG(d){return function(E,i,e,S){var R={back:d};au.is(e,"function")?(S=e):(R.rot=e);E&&E.constructor==aF&&(E=E.attrs.path);E&&(R.along=E);return this.animate(R,i,S);};}aF[a9].onAnimation=function(d){this._run=d||0;return this;};aF[a9].animate=function(bq,bh,bg,E){if(au.is(bg,"function")||!bg){E=bg||null;}var bl={},e={},be={};for(var bi in bq){if(bq[W](bi)){if(ad[W](bi)){bl[bi]=this.attr(bi);(bl[bi]==null)&&(bl[bi]=k[bi]);e[bi]=bq[bi];switch(ad[bi]){case"along":var bo=aw(bq[bi]),bj=G(bq[bi],bo*!!bq.back),R=this.getBBox();be[bi]=bo/bh;be.tx=R.x;be.ty=R.y;be.sx=bj.x;be.sy=bj.y;e.rot=bq.rot;e.back=bq.back;e.len=bo;bq.rot&&(be.r=aa(this.rotate())||0);break;case"number":be[bi]=(e[bi]-bl[bi])/bh;break;case"colour":bl[bi]=au.getRGB(bl[bi]);var bk=au.getRGB(e[bi]);be[bi]={r:(bk.r-bl[bi].r)/bh,g:(bk.g-bl[bi].g)/bh,b:(bk.b-bl[bi].b)/bh};break;case"path":var S=L(bl[bi],e[bi]);bl[bi]=S[0];var bf=S[1];be[bi]=[];for(var bn=0,bd=bl[bi][n];bn<bd;bn++){be[bi][bn]=[0];for(var bm=1,bp=bl[bi][bn][n];bm<bp;bm++){be[bi][bn][bm]=(bf[bn][bm]-bl[bi][bn][bm])/bh;}}break;case"csv":var d=(bq[bi]+aA)[C](a),bc=(bl[bi]+aA)[C](a);switch(bi){case"translation":bl[bi]=[0,0];be[bi]=[d[0]/bh,d[1]/bh];break;case"rotation":bl[bi]=(bc[1]==d[1]&&bc[2]==d[2])?bc:[0,d[1],d[2]];be[bi]=[(d[0]-bl[bi][0])/bh,0,0];break;case"scale":bq[bi]=d;bl[bi]=(bl[bi]+aA)[C](a);be[bi]=[(d[0]-bl[bi][0])/bh,(d[1]-bl[bi][1])/bh,0,0];break;case"clip-rect":bl[bi]=(bl[bi]+aA)[C](a);be[bi]=[];bn=4;while(bn--){be[bi][bn]=(d[bn]-bl[bi][bn])/bh;}break;}e[bi]=d;}}}}this.stop();this.in_animation=1;M[this.id]={start:bq.start||+new Date,ms:bh,easing:bg,from:bl,diff:be,to:e,el:this,callback:E,t:{x:0,y:0}};++M[n]==1&&a1();return this;};aF[a9].stop=function(){M[this.id]&&M[n]--;delete M[this.id];return this;};aF[a9].translate=function(d,e){return this.attr({translation:d+" "+e});};aF[a9][aJ]=function(){return"Rapha\xebl\u2019s object";};au.ae=M;var X=function(d){this.items=[];this[n]=0;if(d){for(var e=0,E=d[n];e<E;e++){if(d[e]&&(d[e].constructor==aF||d[e].constructor==X)){this[this.items[n]]=this.items[this.items[n]]=d[e];this[n]++;}}}};X[a9][f]=function(){var R,d;for(var e=0,E=arguments[n];e<E;e++){R=arguments[e];if(R&&(R.constructor==aF||R.constructor==X)){d=this.items[n];this[d]=this.items[d]=R;this[n]++;}}return this;};X[a9].pop=function(){delete this[this[n]--];return this.items.pop();};for(var B in aF[a9]){if(aF[a9][W](B)){X[a9][B]=(function(d){return function(){for(var e=0,E=this.items[n];e<E;e++){this.items[e][d][a7](this.items[e],arguments);}return this;};})(B);}}X[a9].attr=function(e,bc){if(e&&au.is(e,"array")&&au.is(e[0],"object")){for(var d=0,S=e[n];d<S;d++){this.items[d].attr(e[d]);}}else{for(var E=0,R=this.items[n];E<R;E++){this.items[E].attr(e,bc);}}return this;};X[a9].animate=function(S,e,be,bd){(au.is(be,"function")||!be)&&(bd=be||null);var d=this.items[n],E=d,bc=this,R;bd&&(R=function(){!--d&&bd.call(bc);});this.items[--E].animate(S,e,be||R,R);while(E--){this.items[E].animateWith(this.items[d-1],S,e,be||R,R);}return this;};X[a9].insertAfter=function(e){var d=this.items[n];while(d--){this.items[d].insertAfter(e);}return this;};X[a9].getBBox=function(){var d=[],bc=[],e=[],R=[];for(var E=this.items[n];E--;){var S=this.items[E].getBBox();d[f](S.x);bc[f](S.y);e[f](S.x+S.width);R[f](S.y+S.height);}d=aR[a7](0,d);bc=aR[a7](0,bc);return{x:d,y:bc,width:h[a7](0,e)-d,height:h[a7](0,R)-bc};};X[a9].clone=function(E){E=new X;for(var d=0,e=this.items[n];d<e;d++){E[f](this.items[d].clone());}return E;};au.registerFont=function(e){if(!e.face){return e;}this.fonts=this.fonts||{};var E={w:e.w,face:{},glyphs:{}},i=e.face["font-family"];for(var bc in e.face){if(e.face[W](bc)){E.face[bc]=e.face[bc];}}if(this.fonts[i]){this.fonts[i][f](E);}else{this.fonts[i]=[E];}if(!e.svg){E.face["units-per-em"]=K(e.face["units-per-em"],10);for(var R in e.glyphs){if(e.glyphs[W](R)){var S=e.glyphs[R];E.glyphs[R]={w:S.w,k:{},d:S.d&&"M"+S.d[aZ](/[mlcxtrv]/g,function(bd){return{l:"L",c:"C",x:"z",t:"m",r:"l",v:"c"}[bd]||"M";})+"z"};if(S.k){for(var d in S.k){if(S[W](d)){E.glyphs[R].k[d]=S.k[d];}}}}}}return e;};a4[a9].getFont=function(be,bf,e,R){R=R||"normal";e=e||"normal";bf=+bf||{normal:400,bold:700,lighter:300,bolder:800}[bf]||400;var S=au.fonts[be];if(!S){var E=new RegExp("(^|\\s)"+be[aZ](/[^\w\d\s+!~.:_-]/g,aA)+"(\\s|$)","i");for(var d in au.fonts){if(au.fonts[W](d)){if(E.test(d)){S=au.fonts[d];break;}}}}var bc;if(S){for(var bd=0,bg=S[n];bd<bg;bd++){bc=S[bd];if(bc.face["font-weight"]==bf&&(bc.face["font-style"]==e||!bc.face["font-style"])&&bc.face["font-stretch"]==R){break;}}}return bc;};a4[a9].print=function(R,E,d,bd,be,bn){bn=bn||"middle";var bj=this.set(),bm=(d+aA)[C](aA),bk=0,bg=aA,bo;au.is(bd,"string")&&(bd=this.getFont(bd));if(bd){bo=(be||16)/bd.face["units-per-em"];var e=bd.face.bbox.split(a),bc=+e[0],bf=+e[1]+(bn=="baseline"?e[3]-e[1]+(+bd.face.descent):(e[3]-e[1])/2);for(var bi=0,S=bm[n];bi<S;bi++){var bh=bi&&bd.glyphs[bm[bi-1]]||{},bl=bd.glyphs[bm[bi]];bk+=bi?(bh.w||bd.w)+(bh.k&&bh.k[bm[bi]]||0):0;bl&&bl.d&&bj[f](this.path(bl.d).attr({fill:"#000",stroke:"none",translation:[bk,0]}));}bj.scale(bo,bo,bc,bf).translate(R-bc,E-bf);}return bj;};var aW=/\{(\d+)\}/g;au.format=function(e,i){var d=au.is(i,"array")?[0][a2](i):arguments;e&&au.is(e,"string")&&d[n]-1&&(e=e[aZ](aW,function(R,E){return d[++E]==null?aA:d[E];}));return e||aA;};au.ninja=function(){m.was?(Raphael=m.is):delete Raphael;return au;};au.el=aF[a9];return au;})();

/*
    http://www.JSON.org/json2.js
    2011-02-23

    Public Domain.

    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.

    See http://www.JSON.org/js.html


    This code should be minified before deployment.
    See http://javascript.crockford.com/jsmin.html

    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
    NOT CONTROL.


    This file creates a global JSON object containing two methods: stringify
    and parse.

        JSON.stringify(value, replacer, space)
            value       any JavaScript value, usually an object or array.

            replacer    an optional parameter that determines how object
                        values are stringified for objects. It can be a
                        function or an array of strings.

            space       an optional parameter that specifies the indentation
                        of nested structures. If it is omitted, the text will
                        be packed without extra whitespace. If it is a number,
                        it will specify the number of spaces to indent at each
                        level. If it is a string (such as '\t' or '&nbsp;'),
                        it contains the characters used to indent at each level.

            This method produces a JSON text from a JavaScript value.

            When an object value is found, if the object contains a toJSON
            method, its toJSON method will be called and the result will be
            stringified. A toJSON method does not serialize: it returns the
            value represented by the name/value pair that should be serialized,
            or undefined if nothing should be serialized. The toJSON method
            will be passed the key associated with the value, and this will be
            bound to the value

            For example, this would serialize Dates as ISO strings.

                Date.prototype.toJSON = function (key) {
                    function f(n) {
                        // Format integers to have at least two digits.
                        return n < 10 ? '0' + n : n;
                    }

                    return this.getUTCFullYear()   + '-' +
                         f(this.getUTCMonth() + 1) + '-' +
                         f(this.getUTCDate())      + 'T' +
                         f(this.getUTCHours())     + ':' +
                         f(this.getUTCMinutes())   + ':' +
                         f(this.getUTCSeconds())   + 'Z';
                };

            You can provide an optional replacer method. It will be passed the
            key and value of each member, with this bound to the containing
            object. The value that is returned from your method will be
            serialized. If your method returns undefined, then the member will
            be excluded from the serialization.

            If the replacer parameter is an array of strings, then it will be
            used to select the members to be serialized. It filters the results
            such that only members with keys listed in the replacer array are
            stringified.

            Values that do not have JSON representations, such as undefined or
            functions, will not be serialized. Such values in objects will be
            dropped; in arrays they will be replaced with null. You can use
            a replacer function to replace those with JSON values.
            JSON.stringify(undefined) returns undefined.

            The optional space parameter produces a stringification of the
            value that is filled with line breaks and indentation to make it
            easier to read.

            If the space parameter is a non-empty string, then that string will
            be used for indentation. If the space parameter is a number, then
            the indentation will be that many spaces.

            Example:

            text = JSON.stringify(['e', {pluribus: 'unum'}]);
            // text is '["e",{"pluribus":"unum"}]'


            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\t');
            // text is '[\n\t"e",\n\t{\n\t\t"pluribus": "unum"\n\t}\n]'

            text = JSON.stringify([new Date()], function (key, value) {
                return this[key] instanceof Date ?
                    'Date(' + this[key] + ')' : value;
            });
            // text is '["Date(---current time---)"]'


        JSON.parse(text, reviver)
            This method parses a JSON text to produce an object or array.
            It can throw a SyntaxError exception.

            The optional reviver parameter is a function that can filter and
            transform the results. It receives each of the keys and values,
            and its return value is used instead of the original value.
            If it returns what it received, then the structure is not modified.
            If it returns undefined then the member is deleted.

            Example:

            // Parse the text. Values that look like ISO date strings will
            // be converted to Date objects.

            myData = JSON.parse(text, function (key, value) {
                var a;
                if (typeof value === 'string') {
                    a =
/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
                    if (a) {
                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],
                            +a[5], +a[6]));
                    }
                }
                return value;
            });

            myData = JSON.parse('["Date(09/09/2001)"]', function (key, value) {
                var d;
                if (typeof value === 'string' &&
                        value.slice(0, 5) === 'Date(' &&
                        value.slice(-1) === ')') {
                    d = new Date(value.slice(5, -1));
                    if (d) {
                        return d;
                    }
                }
                return value;
            });


    This is a reference implementation. You are free to copy, modify, or
    redistribute.
*/

/*jslint evil: true, strict: false, regexp: false */

/*members "", "\b", "\t", "\n", "\f", "\r", "\"", JSON, "\\", apply,
    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,
    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,
    lastIndex, length, parse, prototype, push, replace, slice, stringify,
    test, toJSON, toString, valueOf
*/


// Create a JSON object only if one does not already exist. We create the
// methods in a closure to avoid creating global variables.

var JSON;
if (!JSON) {
    JSON = {};
}

(function () {
    "use strict";

    function f(n) {
        // Format integers to have at least two digits.
        return n < 10 ? '0' + n : n;
    }

    if (typeof Date.prototype.toJSON !== 'function') {

        Date.prototype.toJSON = function (key) {

            return isFinite(this.valueOf()) ?
                this.getUTCFullYear()     + '-' +
                f(this.getUTCMonth() + 1) + '-' +
                f(this.getUTCDate())      + 'T' +
                f(this.getUTCHours())     + ':' +
                f(this.getUTCMinutes())   + ':' +
                f(this.getUTCSeconds())   + 'Z' : null;
        };

        String.prototype.toJSON      =
            Number.prototype.toJSON  =
            Boolean.prototype.toJSON = function (key) {
                return this.valueOf();
            };
    }

    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap,
        indent,
        meta = {    // table of character substitutions
            '\b': '\\b',
            '\t': '\\t',
            '\n': '\\n',
            '\f': '\\f',
            '\r': '\\r',
            '"' : '\\"',
            '\\': '\\\\'
        },
        rep;


    function quote(string) {

// If the string contains no control characters, no quote characters, and no
// backslash characters, then we can safely slap some quotes around it.
// Otherwise we must also replace the offending characters with safe escape
// sequences.

        escapable.lastIndex = 0;
        return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
            var c = meta[a];
            return typeof c === 'string' ? c :
                '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
        }) + '"' : '"' + string + '"';
    }


    function str(key, holder) {

// Produce a string from holder[key].

        var i,          // The loop counter.
            k,          // The member key.
            v,          // The member value.
            length,
            mind = gap,
            partial,
            value = holder[key];

// If the value has a toJSON method, call it to obtain a replacement value.

        if (value && typeof value === 'object' &&
                typeof value.toJSON === 'function') {
            value = value.toJSON(key);
        }

// If we were called with a replacer function, then call the replacer to
// obtain a replacement value.

        if (typeof rep === 'function') {
            value = rep.call(holder, key, value);
        }

// What happens next depends on the value's type.

        switch (typeof value) {
        case 'string':
            return quote(value);

        case 'number':

// JSON numbers must be finite. Encode non-finite numbers as null.

            return isFinite(value) ? String(value) : 'null';

        case 'boolean':
        case 'null':

// If the value is a boolean or null, convert it to a string. Note:
// typeof null does not produce 'null'. The case is included here in
// the remote chance that this gets fixed someday.

            return String(value);

// If the type is 'object', we might be dealing with an object or an array or
// null.

        case 'object':

// Due to a specification blunder in ECMAScript, typeof null is 'object',
// so watch out for that case.

            if (!value) {
                return 'null';
            }

// Make an array to hold the partial results of stringifying this object value.

            gap += indent;
            partial = [];

// Is the value an array?

            if (Object.prototype.toString.apply(value) === '[object Array]') {

// The value is an array. Stringify every element. Use null as a placeholder
// for non-JSON values.

                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || 'null';
                }

// Join all of the elements together, separated with commas, and wrap them in
// brackets.

                v = partial.length === 0 ? '[]' : gap ?
                    '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' :
                    '[' + partial.join(',') + ']';
                gap = mind;
                return v;
            }

// If the replacer is an array, use it to select the members to be stringified.

            if (rep && typeof rep === 'object') {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    if (typeof rep[i] === 'string') {
                        k = rep[i];
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            } else {

// Otherwise, iterate through all of the keys in the object.

                for (k in value) {
                    if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }

// Join all of the member texts together, separated with commas,
// and wrap them in braces.

            v = partial.length === 0 ? '{}' : gap ?
                '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' :
                '{' + partial.join(',') + '}';
            gap = mind;
            return v;
        }
    }

// If the JSON object does not yet have a stringify method, give it one.

    if (typeof JSON.stringify !== 'function') {
        JSON.stringify = function (value, replacer, space) {

// The stringify method takes a value and an optional replacer, and an optional
// space parameter, and returns a JSON text. The replacer can be a function
// that can replace values, or an array of strings that will select the keys.
// A default replacer method can be provided. Use of the space parameter can
// produce text that is more easily readable.

            var i;
            gap = '';
            indent = '';

// If the space parameter is a number, make an indent string containing that
// many spaces.

            if (typeof space === 'number') {
                for (i = 0; i < space; i += 1) {
                    indent += ' ';
                }

// If the space parameter is a string, it will be used as the indent string.

            } else if (typeof space === 'string') {
                indent = space;
            }

// If there is a replacer, it must be a function or an array.
// Otherwise, throw an error.

            rep = replacer;
            if (replacer && typeof replacer !== 'function' &&
                    (typeof replacer !== 'object' ||
                    typeof replacer.length !== 'number')) {
                throw new Error('JSON.stringify');
            }

// Make a fake root object containing our value under the key of ''.
// Return the result of stringifying the value.

            return str('', {'': value});
        };
    }


// If the JSON object does not yet have a parse method, give it one.

    if (typeof JSON.parse !== 'function') {
        JSON.parse = function (text, reviver) {

// The parse method takes a text and an optional reviver function, and returns
// a JavaScript value if the text is a valid JSON text.

            var j;

            function walk(holder, key) {

// The walk method is used to recursively walk the resulting structure so
// that modifications can be made.

                var k, v, value = holder[key];
                if (value && typeof value === 'object') {
                    for (k in value) {
                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                            v = walk(value, k);
                            if (v !== undefined) {
                                value[k] = v;
                            } else {
                                delete value[k];
                            }
                        }
                    }
                }
                return reviver.call(holder, key, value);
            }


// Parsing happens in four stages. In the first stage, we replace certain
// Unicode characters with escape sequences. JavaScript handles many characters
// incorrectly, either silently deleting them, or treating them as line endings.

            text = String(text);
            cx.lastIndex = 0;
            if (cx.test(text)) {
                text = text.replace(cx, function (a) {
                    return '\\u' +
                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                });
            }

// In the second stage, we run the text against regular expressions that look
// for non-JSON patterns. We are especially concerned with '()' and 'new'
// because they can cause invocation, and '=' because it can cause mutation.
// But just to be safe, we want to reject all unexpected forms.

// We split the second stage into 4 regexp operations in order to work around
// crippling inefficiencies in IE's and Safari's regexp engines. First we
// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we
// replace all simple value tokens with ']' characters. Third, we delete all
// open brackets that follow a colon or comma or that begin the text. Finally,
// we look to see that the remaining characters are only whitespace or ']' or
// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.

            if (/^[\],:{}\s]*$/
                    .test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')
                        .replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']')
                        .replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {

// In the third stage we use the eval function to compile the text into a
// JavaScript structure. The '{' operator is subject to a syntactic ambiguity
// in JavaScript: it can begin a block or an object literal. We wrap the text
// in parens to eliminate the ambiguity.

                j = eval('(' + text + ')');

// In the optional fourth stage, we recursively walk the new structure, passing
// each name/value pair to a reviver function for possible transformation.

                return typeof reviver === 'function' ?
                    walk({'': j}, '') : j;
            }

// If the text is not JSON parseable, then a SyntaxError is thrown.

            throw new SyntaxError('JSON.parse');
        };
    }
}());


/*!
 * jQuery UI 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI
 */
(function(c,j){function k(a){return!c(a).parents().andSelf().filter(function(){return c.curCSS(this,"visibility")==="hidden"||c.expr.filters.hidden(this)}).length}c.ui=c.ui||{};if(!c.ui.version){c.extend(c.ui,{version:"1.8.9",keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,
NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}});c.fn.extend({_focus:c.fn.focus,focus:function(a,b){return typeof a==="number"?this.each(function(){var d=this;setTimeout(function(){c(d).focus();b&&b.call(d)},a)}):this._focus.apply(this,arguments)},scrollParent:function(){var a;a=c.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(c.curCSS(this,
"position",1))&&/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0);return/fixed/.test(this.css("position"))||!a.length?c(document):a},zIndex:function(a){if(a!==j)return this.css("zIndex",a);if(this.length){a=c(this[0]);for(var b;a.length&&a[0]!==document;){b=a.css("position");
if(b==="absolute"||b==="relative"||b==="fixed"){b=parseInt(a.css("zIndex"),10);if(!isNaN(b)&&b!==0)return b}a=a.parent()}}return 0},disableSelection:function(){return this.bind((c.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});c.each(["Width","Height"],function(a,b){function d(f,g,l,m){c.each(e,function(){g-=parseFloat(c.curCSS(f,"padding"+this,true))||0;if(l)g-=parseFloat(c.curCSS(f,
"border"+this+"Width",true))||0;if(m)g-=parseFloat(c.curCSS(f,"margin"+this,true))||0});return g}var e=b==="Width"?["Left","Right"]:["Top","Bottom"],h=b.toLowerCase(),i={innerWidth:c.fn.innerWidth,innerHeight:c.fn.innerHeight,outerWidth:c.fn.outerWidth,outerHeight:c.fn.outerHeight};c.fn["inner"+b]=function(f){if(f===j)return i["inner"+b].call(this);return this.each(function(){c(this).css(h,d(this,f)+"px")})};c.fn["outer"+b]=function(f,g){if(typeof f!=="number")return i["outer"+b].call(this,f);return this.each(function(){c(this).css(h,
d(this,f,true,g)+"px")})}});c.extend(c.expr[":"],{data:function(a,b,d){return!!c.data(a,d[3])},focusable:function(a){var b=a.nodeName.toLowerCase(),d=c.attr(a,"tabindex");if("area"===b){b=a.parentNode;d=b.name;if(!a.href||!d||b.nodeName.toLowerCase()!=="map")return false;a=c("img[usemap=#"+d+"]")[0];return!!a&&k(a)}return(/input|select|textarea|button|object/.test(b)?!a.disabled:"a"==b?a.href||!isNaN(d):!isNaN(d))&&k(a)},tabbable:function(a){var b=c.attr(a,"tabindex");return(isNaN(b)||b>=0)&&c(a).is(":focusable")}});
c(function(){var a=document.body,b=a.appendChild(b=document.createElement("div"));c.extend(b.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0});c.support.minHeight=b.offsetHeight===100;c.support.selectstart="onselectstart"in b;a.removeChild(b).style.display="none"});c.extend(c.ui,{plugin:{add:function(a,b,d){a=c.ui[a].prototype;for(var e in d){a.plugins[e]=a.plugins[e]||[];a.plugins[e].push([b,d[e]])}},call:function(a,b,d){if((b=a.plugins[b])&&a.element[0].parentNode)for(var e=0;e<b.length;e++)a.options[b[e][0]]&&
b[e][1].apply(a.element,d)}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b)},hasScroll:function(a,b){if(c(a).css("overflow")==="hidden")return false;b=b&&b==="left"?"scrollLeft":"scrollTop";var d=false;if(a[b]>0)return true;a[b]=1;d=a[b]>0;a[b]=0;return d},isOverAxis:function(a,b,d){return a>b&&a<b+d},isOver:function(a,b,d,e,h,i){return c.ui.isOverAxis(a,d,h)&&c.ui.isOverAxis(b,e,i)}})}})(jQuery);
;/*!
 * jQuery UI Widget 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Widget
 */
(function(b,j){if(b.cleanData){var k=b.cleanData;b.cleanData=function(a){for(var c=0,d;(d=a[c])!=null;c++)b(d).triggerHandler("remove");k(a)}}else{var l=b.fn.remove;b.fn.remove=function(a,c){return this.each(function(){if(!c)if(!a||b.filter(a,[this]).length)b("*",this).add([this]).each(function(){b(this).triggerHandler("remove")});return l.call(b(this),a,c)})}}b.widget=function(a,c,d){var e=a.split(".")[0],f;a=a.split(".")[1];f=e+"-"+a;if(!d){d=c;c=b.Widget}b.expr[":"][f]=function(h){return!!b.data(h,
a)};b[e]=b[e]||{};b[e][a]=function(h,g){arguments.length&&this._createWidget(h,g)};c=new c;c.options=b.extend(true,{},c.options);b[e][a].prototype=b.extend(true,c,{namespace:e,widgetName:a,widgetEventPrefix:b[e][a].prototype.widgetEventPrefix||a,widgetBaseClass:f},d);b.widget.bridge(a,b[e][a])};b.widget.bridge=function(a,c){b.fn[a]=function(d){var e=typeof d==="string",f=Array.prototype.slice.call(arguments,1),h=this;d=!e&&f.length?b.extend.apply(null,[true,d].concat(f)):d;if(e&&d.charAt(0)==="_")return h;
e?this.each(function(){var g=b.data(this,a),i=g&&b.isFunction(g[d])?g[d].apply(g,f):g;if(i!==g&&i!==j){h=i;return false}}):this.each(function(){var g=b.data(this,a);g?g.option(d||{})._init():b.data(this,a,new c(d,this))});return h}};b.Widget=function(a,c){arguments.length&&this._createWidget(a,c)};b.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:false},_createWidget:function(a,c){b.data(c,this.widgetName,this);this.element=b(c);this.options=b.extend(true,{},this.options,
this._getCreateOptions(),a);var d=this;this.element.bind("remove."+this.widgetName,function(){d.destroy()});this._create();this._trigger("create");this._init()},_getCreateOptions:function(){return b.metadata&&b.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName);this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled ui-state-disabled")},
widget:function(){return this.element},option:function(a,c){var d=a;if(arguments.length===0)return b.extend({},this.options);if(typeof a==="string"){if(c===j)return this.options[a];d={};d[a]=c}this._setOptions(d);return this},_setOptions:function(a){var c=this;b.each(a,function(d,e){c._setOption(d,e)});return this},_setOption:function(a,c){this.options[a]=c;if(a==="disabled")this.widget()[c?"addClass":"removeClass"](this.widgetBaseClass+"-disabled ui-state-disabled").attr("aria-disabled",c);return this},
enable:function(){return this._setOption("disabled",false)},disable:function(){return this._setOption("disabled",true)},_trigger:function(a,c,d){var e=this.options[a];c=b.Event(c);c.type=(a===this.widgetEventPrefix?a:this.widgetEventPrefix+a).toLowerCase();d=d||{};if(c.originalEvent){a=b.event.props.length;for(var f;a;){f=b.event.props[--a];c[f]=c.originalEvent[f]}}this.element.trigger(c,d);return!(b.isFunction(e)&&e.call(this.element[0],c,d)===false||c.isDefaultPrevented())}}})(jQuery);
;/*!
 * jQuery UI Mouse 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Mouse
 *
 * Depends:
 *	jquery.ui.widget.js
 */
(function(c){c.widget("ui.mouse",{options:{cancel:":input,option",distance:1,delay:0},_mouseInit:function(){var a=this;this.element.bind("mousedown."+this.widgetName,function(b){return a._mouseDown(b)}).bind("click."+this.widgetName,function(b){if(true===c.data(b.target,a.widgetName+".preventClickEvent")){c.removeData(b.target,a.widgetName+".preventClickEvent");b.stopImmediatePropagation();return false}});this.started=false},_mouseDestroy:function(){this.element.unbind("."+this.widgetName)},_mouseDown:function(a){a.originalEvent=
a.originalEvent||{};if(!a.originalEvent.mouseHandled){this._mouseStarted&&this._mouseUp(a);this._mouseDownEvent=a;var b=this,e=a.which==1,f=typeof this.options.cancel=="string"?c(a.target).parents().add(a.target).filter(this.options.cancel).length:false;if(!e||f||!this._mouseCapture(a))return true;this.mouseDelayMet=!this.options.delay;if(!this.mouseDelayMet)this._mouseDelayTimer=setTimeout(function(){b.mouseDelayMet=true},this.options.delay);if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a)){this._mouseStarted=
this._mouseStart(a)!==false;if(!this._mouseStarted){a.preventDefault();return true}}this._mouseMoveDelegate=function(d){return b._mouseMove(d)};this._mouseUpDelegate=function(d){return b._mouseUp(d)};c(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate);a.preventDefault();return a.originalEvent.mouseHandled=true}},_mouseMove:function(a){if(c.browser.msie&&!(document.documentMode>=9)&&!a.button)return this._mouseUp(a);if(this._mouseStarted){this._mouseDrag(a);
return a.preventDefault()}if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a))(this._mouseStarted=this._mouseStart(this._mouseDownEvent,a)!==false)?this._mouseDrag(a):this._mouseUp(a);return!this._mouseStarted},_mouseUp:function(a){c(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate);if(this._mouseStarted){this._mouseStarted=false;a.target==this._mouseDownEvent.target&&c.data(a.target,this.widgetName+".preventClickEvent",
true);this._mouseStop(a)}return false},_mouseDistanceMet:function(a){return Math.max(Math.abs(this._mouseDownEvent.pageX-a.pageX),Math.abs(this._mouseDownEvent.pageY-a.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return true}})})(jQuery);
;/*
 * jQuery UI Position 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Position
 */
(function(c){c.ui=c.ui||{};var n=/left|center|right/,o=/top|center|bottom/,t=c.fn.position,u=c.fn.offset;c.fn.position=function(b){if(!b||!b.of)return t.apply(this,arguments);b=c.extend({},b);var a=c(b.of),d=a[0],g=(b.collision||"flip").split(" "),e=b.offset?b.offset.split(" "):[0,0],h,k,j;if(d.nodeType===9){h=a.width();k=a.height();j={top:0,left:0}}else if(d.setTimeout){h=a.width();k=a.height();j={top:a.scrollTop(),left:a.scrollLeft()}}else if(d.preventDefault){b.at="left top";h=k=0;j={top:b.of.pageY,
left:b.of.pageX}}else{h=a.outerWidth();k=a.outerHeight();j=a.offset()}c.each(["my","at"],function(){var f=(b[this]||"").split(" ");if(f.length===1)f=n.test(f[0])?f.concat(["center"]):o.test(f[0])?["center"].concat(f):["center","center"];f[0]=n.test(f[0])?f[0]:"center";f[1]=o.test(f[1])?f[1]:"center";b[this]=f});if(g.length===1)g[1]=g[0];e[0]=parseInt(e[0],10)||0;if(e.length===1)e[1]=e[0];e[1]=parseInt(e[1],10)||0;if(b.at[0]==="right")j.left+=h;else if(b.at[0]==="center")j.left+=h/2;if(b.at[1]==="bottom")j.top+=
k;else if(b.at[1]==="center")j.top+=k/2;j.left+=e[0];j.top+=e[1];return this.each(function(){var f=c(this),l=f.outerWidth(),m=f.outerHeight(),p=parseInt(c.curCSS(this,"marginLeft",true))||0,q=parseInt(c.curCSS(this,"marginTop",true))||0,v=l+p+(parseInt(c.curCSS(this,"marginRight",true))||0),w=m+q+(parseInt(c.curCSS(this,"marginBottom",true))||0),i=c.extend({},j),r;if(b.my[0]==="right")i.left-=l;else if(b.my[0]==="center")i.left-=l/2;if(b.my[1]==="bottom")i.top-=m;else if(b.my[1]==="center")i.top-=
m/2;i.left=Math.round(i.left);i.top=Math.round(i.top);r={left:i.left-p,top:i.top-q};c.each(["left","top"],function(s,x){c.ui.position[g[s]]&&c.ui.position[g[s]][x](i,{targetWidth:h,targetHeight:k,elemWidth:l,elemHeight:m,collisionPosition:r,collisionWidth:v,collisionHeight:w,offset:e,my:b.my,at:b.at})});c.fn.bgiframe&&f.bgiframe();f.offset(c.extend(i,{using:b.using}))})};c.ui.position={fit:{left:function(b,a){var d=c(window);d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();b.left=
d>0?b.left-d:Math.max(b.left-a.collisionPosition.left,b.left)},top:function(b,a){var d=c(window);d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();b.top=d>0?b.top-d:Math.max(b.top-a.collisionPosition.top,b.top)}},flip:{left:function(b,a){if(a.at[0]!=="center"){var d=c(window);d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();var g=a.my[0]==="left"?-a.elemWidth:a.my[0]==="right"?a.elemWidth:0,e=a.at[0]==="left"?a.targetWidth:-a.targetWidth,h=-2*a.offset[0];b.left+=
a.collisionPosition.left<0?g+e+h:d>0?g+e+h:0}},top:function(b,a){if(a.at[1]!=="center"){var d=c(window);d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();var g=a.my[1]==="top"?-a.elemHeight:a.my[1]==="bottom"?a.elemHeight:0,e=a.at[1]==="top"?a.targetHeight:-a.targetHeight,h=-2*a.offset[1];b.top+=a.collisionPosition.top<0?g+e+h:d>0?g+e+h:0}}}};if(!c.offset.setOffset){c.offset.setOffset=function(b,a){if(/static/.test(c.curCSS(b,"position")))b.style.position="relative";var d=c(b),
g=d.offset(),e=parseInt(c.curCSS(b,"top",true),10)||0,h=parseInt(c.curCSS(b,"left",true),10)||0;g={top:a.top-g.top+e,left:a.left-g.left+h};"using"in a?a.using.call(b,g):d.css(g)};c.fn.offset=function(b){var a=this[0];if(!a||!a.ownerDocument)return null;if(b)return this.each(function(){c.offset.setOffset(this,b)});return u.call(this)}}})(jQuery);
;/*
 * jQuery UI Draggable 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Draggables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.draggable",d.ui.mouse,{widgetEventPrefix:"drag",options:{addClasses:true,appendTo:"parent",axis:false,connectToSortable:false,containment:false,cursor:"auto",cursorAt:false,grid:false,handle:false,helper:"original",iframeFix:false,opacity:false,refreshPositions:false,revert:false,revertDuration:500,scope:"default",scroll:true,scrollSensitivity:20,scrollSpeed:20,snap:false,snapMode:"both",snapTolerance:20,stack:false,zIndex:false},_create:function(){if(this.options.helper==
"original"&&!/^(?:r|a|f)/.test(this.element.css("position")))this.element[0].style.position="relative";this.options.addClasses&&this.element.addClass("ui-draggable");this.options.disabled&&this.element.addClass("ui-draggable-disabled");this._mouseInit()},destroy:function(){if(this.element.data("draggable")){this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");this._mouseDestroy();return this}},_mouseCapture:function(a){var b=
this.options;if(this.helper||b.disabled||d(a.target).is(".ui-resizable-handle"))return false;this.handle=this._getHandle(a);if(!this.handle)return false;return true},_mouseStart:function(a){var b=this.options;this.helper=this._createHelper(a);this._cacheHelperProportions();if(d.ui.ddmanager)d.ui.ddmanager.current=this;this._cacheMargins();this.cssPosition=this.helper.css("position");this.scrollParent=this.helper.scrollParent();this.offset=this.positionAbs=this.element.offset();this.offset={top:this.offset.top-
this.margins.top,left:this.offset.left-this.margins.left};d.extend(this.offset,{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.originalPosition=this.position=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);b.containment&&this._setContainment();if(this._trigger("start",a)===false){this._clear();return false}this._cacheHelperProportions();
d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.helper.addClass("ui-draggable-dragging");this._mouseDrag(a,true);return true},_mouseDrag:function(a,b){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");if(!b){b=this._uiHash();if(this._trigger("drag",a,b)===false){this._mouseUp({});return false}this.position=b.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||
this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);return false},_mouseStop:function(a){var b=false;if(d.ui.ddmanager&&!this.options.dropBehaviour)b=d.ui.ddmanager.drop(this,a);if(this.dropped){b=this.dropped;this.dropped=false}if((!this.element[0]||!this.element[0].parentNode)&&this.options.helper=="original")return false;if(this.options.revert=="invalid"&&!b||this.options.revert=="valid"&&b||this.options.revert===true||d.isFunction(this.options.revert)&&
this.options.revert.call(this.element,b)){var c=this;d(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){c._trigger("stop",a)!==false&&c._clear()})}else this._trigger("stop",a)!==false&&this._clear();return false},cancel:function(){this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear();return this},_getHandle:function(a){var b=!this.options.handle||!d(this.options.handle,this.element).length?true:false;d(this.options.handle,this.element).find("*").andSelf().each(function(){if(this==
a.target)b=true});return b},_createHelper:function(a){var b=this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a])):b.helper=="clone"?this.element.clone():this.element;a.parents("body").length||a.appendTo(b.appendTo=="parent"?this.element[0].parentNode:b.appendTo);a[0]!=this.element[0]&&!/(fixed|absolute)/.test(a.css("position"))&&a.css("position","absolute");return a},_adjustOffsetFromHelper:function(a){if(typeof a=="string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||
0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],
this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a={top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.element.position();return{top:a.top-
(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var a=this.options;if(a.containment==
"parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[(a.containment=="document"?0:d(window).scrollLeft())-this.offset.relative.left-this.offset.parent.left,(a.containment=="document"?0:d(window).scrollTop())-this.offset.relative.top-this.offset.parent.top,(a.containment=="document"?0:d(window).scrollLeft())+d(a.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(a.containment=="document"?
0:d(window).scrollTop())+(d(a.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)&&a.containment.constructor!=Array){var b=d(a.containment)[0];if(b){a=d(a.containment).offset();var c=d(b).css("overflow")!="hidden";this.containment=[a.left+(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0)-this.margins.left,a.top+(parseInt(d(b).css("borderTopWidth"),
10)||0)+(parseInt(d(b).css("paddingTop"),10)||0)-this.margins.top,a.left+(c?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,a.top+(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}}else if(a.containment.constructor==
Array)this.containment=a.containment},_convertPositionTo:function(a,b){if(!b)b=this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName);return{top:b.top+this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():
f?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=this.options,c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName),e=a.pageX,g=a.pageY;
if(this.originalPosition){if(this.containment){if(a.pageX-this.offset.click.left<this.containment[0])e=this.containment[0]+this.offset.click.left;if(a.pageY-this.offset.click.top<this.containment[1])g=this.containment[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>this.containment[2])e=this.containment[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>this.containment[3])g=this.containment[3]+this.offset.click.top}if(b.grid){g=this.originalPageY+Math.round((g-this.originalPageY)/
b.grid[1])*b.grid[1];g=this.containment?!(g-this.offset.click.top<this.containment[1]||g-this.offset.click.top>this.containment[3])?g:!(g-this.offset.click.top<this.containment[1])?g-b.grid[1]:g+b.grid[1]:g;e=this.originalPageX+Math.round((e-this.originalPageX)/b.grid[0])*b.grid[0];e=this.containment?!(e-this.offset.click.left<this.containment[0]||e-this.offset.click.left>this.containment[2])?e:!(e-this.offset.click.left<this.containment[0])?e-b.grid[0]:e+b.grid[0]:e}}return{top:g-this.offset.click.top-
this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():f?0:c.scrollTop()),left:e-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging");this.helper[0]!=
this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove();this.helper=null;this.cancelHelperRemoval=false},_trigger:function(a,b,c){c=c||this._uiHash();d.ui.plugin.call(this,a,[b,c]);if(a=="drag")this.positionAbs=this._convertPositionTo("absolute");return d.Widget.prototype._trigger.call(this,a,b,c)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}});d.extend(d.ui.draggable,{version:"1.8.9"});
d.ui.plugin.add("draggable","connectToSortable",{start:function(a,b){var c=d(this).data("draggable"),f=c.options,e=d.extend({},b,{item:c.element});c.sortables=[];d(f.connectToSortable).each(function(){var g=d.data(this,"sortable");if(g&&!g.options.disabled){c.sortables.push({instance:g,shouldRevert:g.options.revert});g._refreshItems();g._trigger("activate",a,e)}})},stop:function(a,b){var c=d(this).data("draggable"),f=d.extend({},b,{item:c.element});d.each(c.sortables,function(){if(this.instance.isOver){this.instance.isOver=
0;c.cancelHelperRemoval=true;this.instance.cancelHelperRemoval=false;if(this.shouldRevert)this.instance.options.revert=true;this.instance._mouseStop(a);this.instance.options.helper=this.instance.options._helper;c.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})}else{this.instance.cancelHelperRemoval=false;this.instance._trigger("deactivate",a,f)}})},drag:function(a,b){var c=d(this).data("draggable"),f=this;d.each(c.sortables,function(){this.instance.positionAbs=
c.positionAbs;this.instance.helperProportions=c.helperProportions;this.instance.offset.click=c.offset.click;if(this.instance._intersectsWith(this.instance.containerCache)){if(!this.instance.isOver){this.instance.isOver=1;this.instance.currentItem=d(f).clone().appendTo(this.instance.element).data("sortable-item",true);this.instance.options._helper=this.instance.options.helper;this.instance.options.helper=function(){return b.helper[0]};a.target=this.instance.currentItem[0];this.instance._mouseCapture(a,
true);this.instance._mouseStart(a,true,true);this.instance.offset.click.top=c.offset.click.top;this.instance.offset.click.left=c.offset.click.left;this.instance.offset.parent.left-=c.offset.parent.left-this.instance.offset.parent.left;this.instance.offset.parent.top-=c.offset.parent.top-this.instance.offset.parent.top;c._trigger("toSortable",a);c.dropped=this.instance.element;c.currentItem=c.element;this.instance.fromOutside=c}this.instance.currentItem&&this.instance._mouseDrag(a)}else if(this.instance.isOver){this.instance.isOver=
0;this.instance.cancelHelperRemoval=true;this.instance.options.revert=false;this.instance._trigger("out",a,this.instance._uiHash(this.instance));this.instance._mouseStop(a,true);this.instance.options.helper=this.instance.options._helper;this.instance.currentItem.remove();this.instance.placeholder&&this.instance.placeholder.remove();c._trigger("fromSortable",a);c.dropped=false}})}});d.ui.plugin.add("draggable","cursor",{start:function(){var a=d("body"),b=d(this).data("draggable").options;if(a.css("cursor"))b._cursor=
a.css("cursor");a.css("cursor",b.cursor)},stop:function(){var a=d(this).data("draggable").options;a._cursor&&d("body").css("cursor",a._cursor)}});d.ui.plugin.add("draggable","iframeFix",{start:function(){var a=d(this).data("draggable").options;d(a.iframeFix===true?"iframe":a.iframeFix).each(function(){d('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1E3}).css(d(this).offset()).appendTo("body")})},
stop:function(){d("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)})}});d.ui.plugin.add("draggable","opacity",{start:function(a,b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("opacity"))b._opacity=a.css("opacity");a.css("opacity",b.opacity)},stop:function(a,b){a=d(this).data("draggable").options;a._opacity&&d(b.helper).css("opacity",a._opacity)}});d.ui.plugin.add("draggable","scroll",{start:function(){var a=d(this).data("draggable");if(a.scrollParent[0]!=
document&&a.scrollParent[0].tagName!="HTML")a.overflowOffset=a.scrollParent.offset()},drag:function(a){var b=d(this).data("draggable"),c=b.options,f=false;if(b.scrollParent[0]!=document&&b.scrollParent[0].tagName!="HTML"){if(!c.axis||c.axis!="x")if(b.overflowOffset.top+b.scrollParent[0].offsetHeight-a.pageY<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop+c.scrollSpeed;else if(a.pageY-b.overflowOffset.top<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop-
c.scrollSpeed;if(!c.axis||c.axis!="y")if(b.overflowOffset.left+b.scrollParent[0].offsetWidth-a.pageX<c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft+c.scrollSpeed;else if(a.pageX-b.overflowOffset.left<c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft-c.scrollSpeed}else{if(!c.axis||c.axis!="x")if(a.pageY-d(document).scrollTop()<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()-c.scrollSpeed);else if(d(window).height()-
(a.pageY-d(document).scrollTop())<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()+c.scrollSpeed);if(!c.axis||c.axis!="y")if(a.pageX-d(document).scrollLeft()<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()-c.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()+c.scrollSpeed)}f!==false&&d.ui.ddmanager&&!c.dropBehaviour&&d.ui.ddmanager.prepareOffsets(b,a)}});d.ui.plugin.add("draggable",
"snap",{start:function(){var a=d(this).data("draggable"),b=a.options;a.snapElements=[];d(b.snap.constructor!=String?b.snap.items||":data(draggable)":b.snap).each(function(){var c=d(this),f=c.offset();this!=a.element[0]&&a.snapElements.push({item:this,width:c.outerWidth(),height:c.outerHeight(),top:f.top,left:f.left})})},drag:function(a,b){for(var c=d(this).data("draggable"),f=c.options,e=f.snapTolerance,g=b.offset.left,n=g+c.helperProportions.width,m=b.offset.top,o=m+c.helperProportions.height,h=
c.snapElements.length-1;h>=0;h--){var i=c.snapElements[h].left,k=i+c.snapElements[h].width,j=c.snapElements[h].top,l=j+c.snapElements[h].height;if(i-e<g&&g<k+e&&j-e<m&&m<l+e||i-e<g&&g<k+e&&j-e<o&&o<l+e||i-e<n&&n<k+e&&j-e<m&&m<l+e||i-e<n&&n<k+e&&j-e<o&&o<l+e){if(f.snapMode!="inner"){var p=Math.abs(j-o)<=e,q=Math.abs(l-m)<=e,r=Math.abs(i-n)<=e,s=Math.abs(k-g)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:j-c.helperProportions.height,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",
{top:l,left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:i-c.helperProportions.width}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:k}).left-c.margins.left}var t=p||q||r||s;if(f.snapMode!="outer"){p=Math.abs(j-m)<=e;q=Math.abs(l-o)<=e;r=Math.abs(i-g)<=e;s=Math.abs(k-n)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:j,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",{top:l-c.helperProportions.height,
left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:i}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:k-c.helperProportions.width}).left-c.margins.left}if(!c.snapElements[h].snapping&&(p||q||r||s||t))c.options.snap.snap&&c.options.snap.snap.call(c.element,a,d.extend(c._uiHash(),{snapItem:c.snapElements[h].item}));c.snapElements[h].snapping=p||q||r||s||t}else{c.snapElements[h].snapping&&c.options.snap.release&&c.options.snap.release.call(c.element,
a,d.extend(c._uiHash(),{snapItem:c.snapElements[h].item}));c.snapElements[h].snapping=false}}}});d.ui.plugin.add("draggable","stack",{start:function(){var a=d(this).data("draggable").options;a=d.makeArray(d(a.stack)).sort(function(c,f){return(parseInt(d(c).css("zIndex"),10)||0)-(parseInt(d(f).css("zIndex"),10)||0)});if(a.length){var b=parseInt(a[0].style.zIndex)||0;d(a).each(function(c){this.style.zIndex=b+c});this[0].style.zIndex=b+a.length}}});d.ui.plugin.add("draggable","zIndex",{start:function(a,
b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("zIndex"))b._zIndex=a.css("zIndex");a.css("zIndex",b.zIndex)},stop:function(a,b){a=d(this).data("draggable").options;a._zIndex&&d(b.helper).css("zIndex",a._zIndex)}})})(jQuery);
;/*
 * jQuery UI Droppable 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Droppables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *	jquery.ui.mouse.js
 *	jquery.ui.draggable.js
 */
(function(d){d.widget("ui.droppable",{widgetEventPrefix:"drop",options:{accept:"*",activeClass:false,addClasses:true,greedy:false,hoverClass:false,scope:"default",tolerance:"intersect"},_create:function(){var a=this.options,b=a.accept;this.isover=0;this.isout=1;this.accept=d.isFunction(b)?b:function(c){return c.is(b)};this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight};d.ui.ddmanager.droppables[a.scope]=d.ui.ddmanager.droppables[a.scope]||[];d.ui.ddmanager.droppables[a.scope].push(this);
a.addClasses&&this.element.addClass("ui-droppable")},destroy:function(){for(var a=d.ui.ddmanager.droppables[this.options.scope],b=0;b<a.length;b++)a[b]==this&&a.splice(b,1);this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");return this},_setOption:function(a,b){if(a=="accept")this.accept=d.isFunction(b)?b:function(c){return c.is(b)};d.Widget.prototype._setOption.apply(this,arguments)},_activate:function(a){var b=d.ui.ddmanager.current;this.options.activeClass&&
this.element.addClass(this.options.activeClass);b&&this._trigger("activate",a,this.ui(b))},_deactivate:function(a){var b=d.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass);b&&this._trigger("deactivate",a,this.ui(b))},_over:function(a){var b=d.ui.ddmanager.current;if(!(!b||(b.currentItem||b.element)[0]==this.element[0]))if(this.accept.call(this.element[0],b.currentItem||b.element)){this.options.hoverClass&&this.element.addClass(this.options.hoverClass);
this._trigger("over",a,this.ui(b))}},_out:function(a){var b=d.ui.ddmanager.current;if(!(!b||(b.currentItem||b.element)[0]==this.element[0]))if(this.accept.call(this.element[0],b.currentItem||b.element)){this.options.hoverClass&&this.element.removeClass(this.options.hoverClass);this._trigger("out",a,this.ui(b))}},_drop:function(a,b){var c=b||d.ui.ddmanager.current;if(!c||(c.currentItem||c.element)[0]==this.element[0])return false;var e=false;this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var g=
d.data(this,"droppable");if(g.options.greedy&&!g.options.disabled&&g.options.scope==c.options.scope&&g.accept.call(g.element[0],c.currentItem||c.element)&&d.ui.intersect(c,d.extend(g,{offset:g.element.offset()}),g.options.tolerance)){e=true;return false}});if(e)return false;if(this.accept.call(this.element[0],c.currentItem||c.element)){this.options.activeClass&&this.element.removeClass(this.options.activeClass);this.options.hoverClass&&this.element.removeClass(this.options.hoverClass);this._trigger("drop",
a,this.ui(c));return this.element}return false},ui:function(a){return{draggable:a.currentItem||a.element,helper:a.helper,position:a.position,offset:a.positionAbs}}});d.extend(d.ui.droppable,{version:"1.8.9"});d.ui.intersect=function(a,b,c){if(!b.offset)return false;var e=(a.positionAbs||a.position.absolute).left,g=e+a.helperProportions.width,f=(a.positionAbs||a.position.absolute).top,h=f+a.helperProportions.height,i=b.offset.left,k=i+b.proportions.width,j=b.offset.top,l=j+b.proportions.height;
switch(c){case "fit":return i<=e&&g<=k&&j<=f&&h<=l;case "intersect":return i<e+a.helperProportions.width/2&&g-a.helperProportions.width/2<k&&j<f+a.helperProportions.height/2&&h-a.helperProportions.height/2<l;case "pointer":return d.ui.isOver((a.positionAbs||a.position.absolute).top+(a.clickOffset||a.offset.click).top,(a.positionAbs||a.position.absolute).left+(a.clickOffset||a.offset.click).left,j,i,b.proportions.height,b.proportions.width);case "touch":return(f>=j&&f<=l||h>=j&&h<=l||f<j&&h>l)&&(e>=
i&&e<=k||g>=i&&g<=k||e<i&&g>k);default:return false}};d.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(a,b){var c=d.ui.ddmanager.droppables[a.options.scope]||[],e=b?b.type:null,g=(a.currentItem||a.element).find(":data(droppable)").andSelf(),f=0;a:for(;f<c.length;f++)if(!(c[f].options.disabled||a&&!c[f].accept.call(c[f].element[0],a.currentItem||a.element))){for(var h=0;h<g.length;h++)if(g[h]==c[f].element[0]){c[f].proportions.height=0;continue a}c[f].visible=c[f].element.css("display")!=
"none";if(c[f].visible){c[f].offset=c[f].element.offset();c[f].proportions={width:c[f].element[0].offsetWidth,height:c[f].element[0].offsetHeight};e=="mousedown"&&c[f]._activate.call(c[f],b)}}},drop:function(a,b){var c=false;d.each(d.ui.ddmanager.droppables[a.options.scope]||[],function(){if(this.options){if(!this.options.disabled&&this.visible&&d.ui.intersect(a,this,this.options.tolerance))c=c||this._drop.call(this,b);if(!this.options.disabled&&this.visible&&this.accept.call(this.element[0],a.currentItem||
a.element)){this.isout=1;this.isover=0;this._deactivate.call(this,b)}}});return c},drag:function(a,b){a.options.refreshPositions&&d.ui.ddmanager.prepareOffsets(a,b);d.each(d.ui.ddmanager.droppables[a.options.scope]||[],function(){if(!(this.options.disabled||this.greedyChild||!this.visible)){var c=d.ui.intersect(a,this,this.options.tolerance);if(c=!c&&this.isover==1?"isout":c&&this.isover==0?"isover":null){var e;if(this.options.greedy){var g=this.element.parents(":data(droppable):eq(0)");if(g.length){e=
d.data(g[0],"droppable");e.greedyChild=c=="isover"?1:0}}if(e&&c=="isover"){e.isover=0;e.isout=1;e._out.call(e,b)}this[c]=1;this[c=="isout"?"isover":"isout"]=0;this[c=="isover"?"_over":"_out"].call(this,b);if(e&&c=="isout"){e.isout=0;e.isover=1;e._over.call(e,b)}}}})}}})(jQuery);
;/*
 * jQuery UI Resizable 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Resizables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(e){e.widget("ui.resizable",e.ui.mouse,{widgetEventPrefix:"resize",options:{alsoResize:false,animate:false,animateDuration:"slow",animateEasing:"swing",aspectRatio:false,autoHide:false,containment:false,ghost:false,grid:false,handles:"e,s,se",helper:false,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1E3},_create:function(){var b=this,a=this.options;this.element.addClass("ui-resizable");e.extend(this,{_aspectRatio:!!a.aspectRatio,aspectRatio:a.aspectRatio,originalElement:this.element,
_proportionallyResizeElements:[],_helper:a.helper||a.ghost||a.animate?a.helper||"ui-resizable-helper":null});if(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)){/relative/.test(this.element.css("position"))&&e.browser.opera&&this.element.css({position:"relative",top:"auto",left:"auto"});this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),
top:this.element.css("top"),left:this.element.css("left")}));this.element=this.element.parent().data("resizable",this.element.data("resizable"));this.elementIsWrapper=true;this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")});this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0});this.originalResizeStyle=
this.originalElement.css("resize");this.originalElement.css("resize","none");this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"}));this.originalElement.css({margin:this.originalElement.css("margin")});this._proportionallyResize()}this.handles=a.handles||(!e(".ui-resizable-handle",this.element).length?"e,s,se":{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",
nw:".ui-resizable-nw"});if(this.handles.constructor==String){if(this.handles=="all")this.handles="n,e,s,w,se,sw,ne,nw";var c=this.handles.split(",");this.handles={};for(var d=0;d<c.length;d++){var f=e.trim(c[d]),g=e('<div class="ui-resizable-handle '+("ui-resizable-"+f)+'"></div>');/sw|se|ne|nw/.test(f)&&g.css({zIndex:++a.zIndex});"se"==f&&g.addClass("ui-icon ui-icon-gripsmall-diagonal-se");this.handles[f]=".ui-resizable-"+f;this.element.append(g)}}this._renderAxis=function(h){h=h||this.element;for(var i in this.handles){if(this.handles[i].constructor==
String)this.handles[i]=e(this.handles[i],this.element).show();if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var j=e(this.handles[i],this.element),k=0;k=/sw|ne|nw|se|n|s/.test(i)?j.outerHeight():j.outerWidth();j=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join("");h.css(j,k);this._proportionallyResize()}e(this.handles[i])}};this._renderAxis(this.element);this._handles=e(".ui-resizable-handle",this.element).disableSelection();
this._handles.mouseover(function(){if(!b.resizing){if(this.className)var h=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);b.axis=h&&h[1]?h[1]:"se"}});if(a.autoHide){this._handles.hide();e(this.element).addClass("ui-resizable-autohide").hover(function(){e(this).removeClass("ui-resizable-autohide");b._handles.show()},function(){if(!b.resizing){e(this).addClass("ui-resizable-autohide");b._handles.hide()}})}this._mouseInit()},destroy:function(){this._mouseDestroy();var b=function(c){e(c).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};
if(this.elementIsWrapper){b(this.element);var a=this.element;a.after(this.originalElement.css({position:a.css("position"),width:a.outerWidth(),height:a.outerHeight(),top:a.css("top"),left:a.css("left")})).remove()}this.originalElement.css("resize",this.originalResizeStyle);b(this.originalElement);return this},_mouseCapture:function(b){var a=false;for(var c in this.handles)if(e(this.handles[c])[0]==b.target)a=true;return!this.options.disabled&&a},_mouseStart:function(b){var a=this.options,c=this.element.position(),
d=this.element;this.resizing=true;this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()};if(d.is(".ui-draggable")||/absolute/.test(d.css("position")))d.css({position:"absolute",top:c.top,left:c.left});e.browser.opera&&/relative/.test(d.css("position"))&&d.css({position:"relative",top:"auto",left:"auto"});this._renderProxy();c=m(this.helper.css("left"));var f=m(this.helper.css("top"));if(a.containment){c+=e(a.containment).scrollLeft()||0;f+=e(a.containment).scrollTop()||0}this.offset=
this.helper.offset();this.position={left:c,top:f};this.size=this._helper?{width:d.outerWidth(),height:d.outerHeight()}:{width:d.width(),height:d.height()};this.originalSize=this._helper?{width:d.outerWidth(),height:d.outerHeight()}:{width:d.width(),height:d.height()};this.originalPosition={left:c,top:f};this.sizeDiff={width:d.outerWidth()-d.width(),height:d.outerHeight()-d.height()};this.originalMousePosition={left:b.pageX,top:b.pageY};this.aspectRatio=typeof a.aspectRatio=="number"?a.aspectRatio:
this.originalSize.width/this.originalSize.height||1;a=e(".ui-resizable-"+this.axis).css("cursor");e("body").css("cursor",a=="auto"?this.axis+"-resize":a);d.addClass("ui-resizable-resizing");this._propagate("start",b);return true},_mouseDrag:function(b){var a=this.helper,c=this.originalMousePosition,d=this._change[this.axis];if(!d)return false;c=d.apply(this,[b,b.pageX-c.left||0,b.pageY-c.top||0]);if(this._aspectRatio||b.shiftKey)c=this._updateRatio(c,b);c=this._respectSize(c,b);this._propagate("resize",
b);a.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"});!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize();this._updateCache(c);this._trigger("resize",b,this.ui());return false},_mouseStop:function(b){this.resizing=false;var a=this.options,c=this;if(this._helper){var d=this._proportionallyResizeElements,f=d.length&&/textarea/i.test(d[0].nodeName);d=f&&e.ui.hasScroll(d[0],"left")?0:c.sizeDiff.height;
f={width:c.size.width-(f?0:c.sizeDiff.width),height:c.size.height-d};d=parseInt(c.element.css("left"),10)+(c.position.left-c.originalPosition.left)||null;var g=parseInt(c.element.css("top"),10)+(c.position.top-c.originalPosition.top)||null;a.animate||this.element.css(e.extend(f,{top:g,left:d}));c.helper.height(c.size.height);c.helper.width(c.size.width);this._helper&&!a.animate&&this._proportionallyResize()}e("body").css("cursor","auto");this.element.removeClass("ui-resizable-resizing");this._propagate("stop",
b);this._helper&&this.helper.remove();return false},_updateCache:function(b){this.offset=this.helper.offset();if(l(b.left))this.position.left=b.left;if(l(b.top))this.position.top=b.top;if(l(b.height))this.size.height=b.height;if(l(b.width))this.size.width=b.width},_updateRatio:function(b){var a=this.position,c=this.size,d=this.axis;if(b.height)b.width=c.height*this.aspectRatio;else if(b.width)b.height=c.width/this.aspectRatio;if(d=="sw"){b.left=a.left+(c.width-b.width);b.top=null}if(d=="nw"){b.top=
a.top+(c.height-b.height);b.left=a.left+(c.width-b.width)}return b},_respectSize:function(b){var a=this.options,c=this.axis,d=l(b.width)&&a.maxWidth&&a.maxWidth<b.width,f=l(b.height)&&a.maxHeight&&a.maxHeight<b.height,g=l(b.width)&&a.minWidth&&a.minWidth>b.width,h=l(b.height)&&a.minHeight&&a.minHeight>b.height;if(g)b.width=a.minWidth;if(h)b.height=a.minHeight;if(d)b.width=a.maxWidth;if(f)b.height=a.maxHeight;var i=this.originalPosition.left+this.originalSize.width,j=this.position.top+this.size.height,
k=/sw|nw|w/.test(c);c=/nw|ne|n/.test(c);if(g&&k)b.left=i-a.minWidth;if(d&&k)b.left=i-a.maxWidth;if(h&&c)b.top=j-a.minHeight;if(f&&c)b.top=j-a.maxHeight;if((a=!b.width&&!b.height)&&!b.left&&b.top)b.top=null;else if(a&&!b.top&&b.left)b.left=null;return b},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var b=this.helper||this.element,a=0;a<this._proportionallyResizeElements.length;a++){var c=this._proportionallyResizeElements[a];if(!this.borderDif){var d=[c.css("borderTopWidth"),
c.css("borderRightWidth"),c.css("borderBottomWidth"),c.css("borderLeftWidth")],f=[c.css("paddingTop"),c.css("paddingRight"),c.css("paddingBottom"),c.css("paddingLeft")];this.borderDif=e.map(d,function(g,h){g=parseInt(g,10)||0;h=parseInt(f[h],10)||0;return g+h})}e.browser.msie&&(e(b).is(":hidden")||e(b).parents(":hidden").length)||c.css({height:b.height()-this.borderDif[0]-this.borderDif[2]||0,width:b.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var b=this.options;this.elementOffset=
this.element.offset();if(this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var a=e.browser.msie&&e.browser.version<7,c=a?1:0;a=a?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+a,height:this.element.outerHeight()+a,position:"absolute",left:this.elementOffset.left-c+"px",top:this.elementOffset.top-c+"px",zIndex:++b.zIndex});this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(b,a){return{width:this.originalSize.width+
a}},w:function(b,a){return{left:this.originalPosition.left+a,width:this.originalSize.width-a}},n:function(b,a,c){return{top:this.originalPosition.top+c,height:this.originalSize.height-c}},s:function(b,a,c){return{height:this.originalSize.height+c}},se:function(b,a,c){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[b,a,c]))},sw:function(b,a,c){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[b,a,c]))},ne:function(b,a,c){return e.extend(this._change.n.apply(this,
arguments),this._change.e.apply(this,[b,a,c]))},nw:function(b,a,c){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[b,a,c]))}},_propagate:function(b,a){e.ui.plugin.call(this,b,[a,this.ui()]);b!="resize"&&this._trigger(b,a,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}});e.extend(e.ui.resizable,
{version:"1.8.9"});e.ui.plugin.add("resizable","alsoResize",{start:function(){var b=e(this).data("resizable").options,a=function(c){e(c).each(function(){var d=e(this);d.data("resizable-alsoresize",{width:parseInt(d.width(),10),height:parseInt(d.height(),10),left:parseInt(d.css("left"),10),top:parseInt(d.css("top"),10),position:d.css("position")})})};if(typeof b.alsoResize=="object"&&!b.alsoResize.parentNode)if(b.alsoResize.length){b.alsoResize=b.alsoResize[0];a(b.alsoResize)}else e.each(b.alsoResize,
function(c){a(c)});else a(b.alsoResize)},resize:function(b,a){var c=e(this).data("resizable");b=c.options;var d=c.originalSize,f=c.originalPosition,g={height:c.size.height-d.height||0,width:c.size.width-d.width||0,top:c.position.top-f.top||0,left:c.position.left-f.left||0},h=function(i,j){e(i).each(function(){var k=e(this),q=e(this).data("resizable-alsoresize"),p={},r=j&&j.length?j:k.parents(a.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(r,function(n,o){if((n=
(q[o]||0)+(g[o]||0))&&n>=0)p[o]=n||null});if(e.browser.opera&&/relative/.test(k.css("position"))){c._revertToRelativePosition=true;k.css({position:"absolute",top:"auto",left:"auto"})}k.css(p)})};typeof b.alsoResize=="object"&&!b.alsoResize.nodeType?e.each(b.alsoResize,function(i,j){h(i,j)}):h(b.alsoResize)},stop:function(){var b=e(this).data("resizable"),a=b.options,c=function(d){e(d).each(function(){var f=e(this);f.css({position:f.data("resizable-alsoresize").position})})};if(b._revertToRelativePosition){b._revertToRelativePosition=
false;typeof a.alsoResize=="object"&&!a.alsoResize.nodeType?e.each(a.alsoResize,function(d){c(d)}):c(a.alsoResize)}e(this).removeData("resizable-alsoresize")}});e.ui.plugin.add("resizable","animate",{stop:function(b){var a=e(this).data("resizable"),c=a.options,d=a._proportionallyResizeElements,f=d.length&&/textarea/i.test(d[0].nodeName),g=f&&e.ui.hasScroll(d[0],"left")?0:a.sizeDiff.height;f={width:a.size.width-(f?0:a.sizeDiff.width),height:a.size.height-g};g=parseInt(a.element.css("left"),10)+(a.position.left-
a.originalPosition.left)||null;var h=parseInt(a.element.css("top"),10)+(a.position.top-a.originalPosition.top)||null;a.element.animate(e.extend(f,h&&g?{top:h,left:g}:{}),{duration:c.animateDuration,easing:c.animateEasing,step:function(){var i={width:parseInt(a.element.css("width"),10),height:parseInt(a.element.css("height"),10),top:parseInt(a.element.css("top"),10),left:parseInt(a.element.css("left"),10)};d&&d.length&&e(d[0]).css({width:i.width,height:i.height});a._updateCache(i);a._propagate("resize",
b)}})}});e.ui.plugin.add("resizable","containment",{start:function(){var b=e(this).data("resizable"),a=b.element,c=b.options.containment;if(a=c instanceof e?c.get(0):/parent/.test(c)?a.parent().get(0):c){b.containerElement=e(a);if(/document/.test(c)||c==document){b.containerOffset={left:0,top:0};b.containerPosition={left:0,top:0};b.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight}}else{var d=e(a),f=[];e(["Top",
"Right","Left","Bottom"]).each(function(i,j){f[i]=m(d.css("padding"+j))});b.containerOffset=d.offset();b.containerPosition=d.position();b.containerSize={height:d.innerHeight()-f[3],width:d.innerWidth()-f[1]};c=b.containerOffset;var g=b.containerSize.height,h=b.containerSize.width;h=e.ui.hasScroll(a,"left")?a.scrollWidth:h;g=e.ui.hasScroll(a)?a.scrollHeight:g;b.parentData={element:a,left:c.left,top:c.top,width:h,height:g}}}},resize:function(b){var a=e(this).data("resizable"),c=a.options,d=a.containerOffset,
f=a.position;b=a._aspectRatio||b.shiftKey;var g={top:0,left:0},h=a.containerElement;if(h[0]!=document&&/static/.test(h.css("position")))g=d;if(f.left<(a._helper?d.left:0)){a.size.width+=a._helper?a.position.left-d.left:a.position.left-g.left;if(b)a.size.height=a.size.width/c.aspectRatio;a.position.left=c.helper?d.left:0}if(f.top<(a._helper?d.top:0)){a.size.height+=a._helper?a.position.top-d.top:a.position.top;if(b)a.size.width=a.size.height*c.aspectRatio;a.position.top=a._helper?d.top:0}a.offset.left=
a.parentData.left+a.position.left;a.offset.top=a.parentData.top+a.position.top;c=Math.abs((a._helper?a.offset.left-g.left:a.offset.left-g.left)+a.sizeDiff.width);d=Math.abs((a._helper?a.offset.top-g.top:a.offset.top-d.top)+a.sizeDiff.height);f=a.containerElement.get(0)==a.element.parent().get(0);g=/relative|absolute/.test(a.containerElement.css("position"));if(f&&g)c-=a.parentData.left;if(c+a.size.width>=a.parentData.width){a.size.width=a.parentData.width-c;if(b)a.size.height=a.size.width/a.aspectRatio}if(d+
a.size.height>=a.parentData.height){a.size.height=a.parentData.height-d;if(b)a.size.width=a.size.height*a.aspectRatio}},stop:function(){var b=e(this).data("resizable"),a=b.options,c=b.containerOffset,d=b.containerPosition,f=b.containerElement,g=e(b.helper),h=g.offset(),i=g.outerWidth()-b.sizeDiff.width;g=g.outerHeight()-b.sizeDiff.height;b._helper&&!a.animate&&/relative/.test(f.css("position"))&&e(this).css({left:h.left-d.left-c.left,width:i,height:g});b._helper&&!a.animate&&/static/.test(f.css("position"))&&
e(this).css({left:h.left-d.left-c.left,width:i,height:g})}});e.ui.plugin.add("resizable","ghost",{start:function(){var b=e(this).data("resizable"),a=b.options,c=b.size;b.ghost=b.originalElement.clone();b.ghost.css({opacity:0.25,display:"block",position:"relative",height:c.height,width:c.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof a.ghost=="string"?a.ghost:"");b.ghost.appendTo(b.helper)},resize:function(){var b=e(this).data("resizable");b.ghost&&b.ghost.css({position:"relative",
height:b.size.height,width:b.size.width})},stop:function(){var b=e(this).data("resizable");b.ghost&&b.helper&&b.helper.get(0).removeChild(b.ghost.get(0))}});e.ui.plugin.add("resizable","grid",{resize:function(){var b=e(this).data("resizable"),a=b.options,c=b.size,d=b.originalSize,f=b.originalPosition,g=b.axis;a.grid=typeof a.grid=="number"?[a.grid,a.grid]:a.grid;var h=Math.round((c.width-d.width)/(a.grid[0]||1))*(a.grid[0]||1);a=Math.round((c.height-d.height)/(a.grid[1]||1))*(a.grid[1]||1);if(/^(se|s|e)$/.test(g)){b.size.width=
d.width+h;b.size.height=d.height+a}else if(/^(ne)$/.test(g)){b.size.width=d.width+h;b.size.height=d.height+a;b.position.top=f.top-a}else{if(/^(sw)$/.test(g)){b.size.width=d.width+h;b.size.height=d.height+a}else{b.size.width=d.width+h;b.size.height=d.height+a;b.position.top=f.top-a}b.position.left=f.left-h}}});var m=function(b){return parseInt(b,10)||0},l=function(b){return!isNaN(parseInt(b,10))}})(jQuery);
;/*
 * jQuery UI Selectable 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Selectables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(e){e.widget("ui.selectable",e.ui.mouse,{options:{appendTo:"body",autoRefresh:true,distance:0,filter:"*",tolerance:"touch"},_create:function(){var c=this;this.element.addClass("ui-selectable");this.dragged=false;var f;this.refresh=function(){f=e(c.options.filter,c.element[0]);f.each(function(){var d=e(this),b=d.offset();e.data(this,"selectable-item",{element:this,$element:d,left:b.left,top:b.top,right:b.left+d.outerWidth(),bottom:b.top+d.outerHeight(),startselected:false,selected:d.hasClass("ui-selected"),
selecting:d.hasClass("ui-selecting"),unselecting:d.hasClass("ui-unselecting")})})};this.refresh();this.selectees=f.addClass("ui-selectee");this._mouseInit();this.helper=e("<div class='ui-selectable-helper'></div>")},destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item");this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable");this._mouseDestroy();return this},_mouseStart:function(c){var f=this;this.opos=[c.pageX,
c.pageY];if(!this.options.disabled){var d=this.options;this.selectees=e(d.filter,this.element[0]);this._trigger("start",c);e(d.appendTo).append(this.helper);this.helper.css({left:c.clientX,top:c.clientY,width:0,height:0});d.autoRefresh&&this.refresh();this.selectees.filter(".ui-selected").each(function(){var b=e.data(this,"selectable-item");b.startselected=true;if(!c.metaKey){b.$element.removeClass("ui-selected");b.selected=false;b.$element.addClass("ui-unselecting");b.unselecting=true;f._trigger("unselecting",
c,{unselecting:b.element})}});e(c.target).parents().andSelf().each(function(){var b=e.data(this,"selectable-item");if(b){var g=!c.metaKey||!b.$element.hasClass("ui-selected");b.$element.removeClass(g?"ui-unselecting":"ui-selected").addClass(g?"ui-selecting":"ui-unselecting");b.unselecting=!g;b.selecting=g;(b.selected=g)?f._trigger("selecting",c,{selecting:b.element}):f._trigger("unselecting",c,{unselecting:b.element});return false}})}},_mouseDrag:function(c){var f=this;this.dragged=true;if(!this.options.disabled){var d=
this.options,b=this.opos[0],g=this.opos[1],h=c.pageX,i=c.pageY;if(b>h){var j=h;h=b;b=j}if(g>i){j=i;i=g;g=j}this.helper.css({left:b,top:g,width:h-b,height:i-g});this.selectees.each(function(){var a=e.data(this,"selectable-item");if(!(!a||a.element==f.element[0])){var k=false;if(d.tolerance=="touch")k=!(a.left>h||a.right<b||a.top>i||a.bottom<g);else if(d.tolerance=="fit")k=a.left>b&&a.right<h&&a.top>g&&a.bottom<i;if(k){if(a.selected){a.$element.removeClass("ui-selected");a.selected=false}if(a.unselecting){a.$element.removeClass("ui-unselecting");
a.unselecting=false}if(!a.selecting){a.$element.addClass("ui-selecting");a.selecting=true;f._trigger("selecting",c,{selecting:a.element})}}else{if(a.selecting)if(c.metaKey&&a.startselected){a.$element.removeClass("ui-selecting");a.selecting=false;a.$element.addClass("ui-selected");a.selected=true}else{a.$element.removeClass("ui-selecting");a.selecting=false;if(a.startselected){a.$element.addClass("ui-unselecting");a.unselecting=true}f._trigger("unselecting",c,{unselecting:a.element})}if(a.selected)if(!c.metaKey&&
!a.startselected){a.$element.removeClass("ui-selected");a.selected=false;a.$element.addClass("ui-unselecting");a.unselecting=true;f._trigger("unselecting",c,{unselecting:a.element})}}}});return false}},_mouseStop:function(c){var f=this;this.dragged=false;e(".ui-unselecting",this.element[0]).each(function(){var d=e.data(this,"selectable-item");d.$element.removeClass("ui-unselecting");d.unselecting=false;d.startselected=false;f._trigger("unselected",c,{unselected:d.element})});e(".ui-selecting",this.element[0]).each(function(){var d=
e.data(this,"selectable-item");d.$element.removeClass("ui-selecting").addClass("ui-selected");d.selecting=false;d.selected=true;d.startselected=true;f._trigger("selected",c,{selected:d.element})});this._trigger("stop",c);this.helper.remove();return false}});e.extend(e.ui.selectable,{version:"1.8.9"})})(jQuery);
;/*
 * jQuery UI Sortable 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Sortables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.sortable",d.ui.mouse,{widgetEventPrefix:"sort",options:{appendTo:"parent",axis:false,connectWith:false,containment:false,cursor:"auto",cursorAt:false,dropOnEmpty:true,forcePlaceholderSize:false,forceHelperSize:false,grid:false,handle:false,helper:"original",items:"> *",opacity:false,placeholder:false,revert:false,scroll:true,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1E3},_create:function(){this.containerCache={};this.element.addClass("ui-sortable");
this.refresh();this.floating=this.items.length?/left|right/.test(this.items[0].item.css("float")):false;this.offset=this.element.offset();this._mouseInit()},destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable");this._mouseDestroy();for(var a=this.items.length-1;a>=0;a--)this.items[a].item.removeData("sortable-item");return this},_setOption:function(a,b){if(a==="disabled"){this.options[a]=b;this.widget()[b?"addClass":"removeClass"]("ui-sortable-disabled")}else d.Widget.prototype._setOption.apply(this,
arguments)},_mouseCapture:function(a,b){if(this.reverting)return false;if(this.options.disabled||this.options.type=="static")return false;this._refreshItems(a);var c=null,e=this;d(a.target).parents().each(function(){if(d.data(this,"sortable-item")==e){c=d(this);return false}});if(d.data(a.target,"sortable-item")==e)c=d(a.target);if(!c)return false;if(this.options.handle&&!b){var f=false;d(this.options.handle,c).find("*").andSelf().each(function(){if(this==a.target)f=true});if(!f)return false}this.currentItem=
c;this._removeCurrentsFromItems();return true},_mouseStart:function(a,b,c){b=this.options;var e=this;this.currentContainer=this;this.refreshPositions();this.helper=this._createHelper(a);this._cacheHelperProportions();this._cacheMargins();this.scrollParent=this.helper.scrollParent();this.offset=this.currentItem.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};this.helper.css("position","absolute");this.cssPosition=this.helper.css("position");d.extend(this.offset,
{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.originalPosition=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]};this.helper[0]!=this.currentItem[0]&&this.currentItem.hide();this._createPlaceholder();b.containment&&this._setContainment();
if(b.cursor){if(d("body").css("cursor"))this._storedCursor=d("body").css("cursor");d("body").css("cursor",b.cursor)}if(b.opacity){if(this.helper.css("opacity"))this._storedOpacity=this.helper.css("opacity");this.helper.css("opacity",b.opacity)}if(b.zIndex){if(this.helper.css("zIndex"))this._storedZIndex=this.helper.css("zIndex");this.helper.css("zIndex",b.zIndex)}if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML")this.overflowOffset=this.scrollParent.offset();this._trigger("start",
a,this._uiHash());this._preserveHelperProportions||this._cacheHelperProportions();if(!c)for(c=this.containers.length-1;c>=0;c--)this.containers[c]._trigger("activate",a,e._uiHash(this));if(d.ui.ddmanager)d.ui.ddmanager.current=this;d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.dragging=true;this.helper.addClass("ui-sortable-helper");this._mouseDrag(a);return true},_mouseDrag:function(a){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");
if(!this.lastPositionAbs)this.lastPositionAbs=this.positionAbs;if(this.options.scroll){var b=this.options,c=false;if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"){if(this.overflowOffset.top+this.scrollParent[0].offsetHeight-a.pageY<b.scrollSensitivity)this.scrollParent[0].scrollTop=c=this.scrollParent[0].scrollTop+b.scrollSpeed;else if(a.pageY-this.overflowOffset.top<b.scrollSensitivity)this.scrollParent[0].scrollTop=c=this.scrollParent[0].scrollTop-b.scrollSpeed;if(this.overflowOffset.left+
this.scrollParent[0].offsetWidth-a.pageX<b.scrollSensitivity)this.scrollParent[0].scrollLeft=c=this.scrollParent[0].scrollLeft+b.scrollSpeed;else if(a.pageX-this.overflowOffset.left<b.scrollSensitivity)this.scrollParent[0].scrollLeft=c=this.scrollParent[0].scrollLeft-b.scrollSpeed}else{if(a.pageY-d(document).scrollTop()<b.scrollSensitivity)c=d(document).scrollTop(d(document).scrollTop()-b.scrollSpeed);else if(d(window).height()-(a.pageY-d(document).scrollTop())<b.scrollSensitivity)c=d(document).scrollTop(d(document).scrollTop()+
b.scrollSpeed);if(a.pageX-d(document).scrollLeft()<b.scrollSensitivity)c=d(document).scrollLeft(d(document).scrollLeft()-b.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<b.scrollSensitivity)c=d(document).scrollLeft(d(document).scrollLeft()+b.scrollSpeed)}c!==false&&d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+
"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(b=this.items.length-1;b>=0;b--){c=this.items[b];var e=c.item[0],f=this._intersectsWithPointer(c);if(f)if(e!=this.currentItem[0]&&this.placeholder[f==1?"next":"prev"]()[0]!=e&&!d.ui.contains(this.placeholder[0],e)&&(this.options.type=="semi-dynamic"?!d.ui.contains(this.element[0],e):true)){this.direction=f==1?"down":"up";if(this.options.tolerance=="pointer"||this._intersectsWithSides(c))this._rearrange(a,
c);else break;this._trigger("change",a,this._uiHash());break}}this._contactContainers(a);d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);this._trigger("sort",a,this._uiHash());this.lastPositionAbs=this.positionAbs;return false},_mouseStop:function(a,b){if(a){d.ui.ddmanager&&!this.options.dropBehaviour&&d.ui.ddmanager.drop(this,a);if(this.options.revert){var c=this;b=c.placeholder.offset();c.reverting=true;d(this.helper).animate({left:b.left-this.offset.parent.left-c.margins.left+(this.offsetParent[0]==
document.body?0:this.offsetParent[0].scrollLeft),top:b.top-this.offset.parent.top-c.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){c._clear(a)})}else this._clear(a,b);return false}},cancel:function(){var a=this;if(this.dragging){this._mouseUp({target:null});this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var b=this.containers.length-
1;b>=0;b--){this.containers[b]._trigger("deactivate",null,a._uiHash(this));if(this.containers[b].containerCache.over){this.containers[b]._trigger("out",null,a._uiHash(this));this.containers[b].containerCache.over=0}}}if(this.placeholder){this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]);this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove();d.extend(this,{helper:null,dragging:false,reverting:false,_noFinalSort:null});
this.domPosition.prev?d(this.domPosition.prev).after(this.currentItem):d(this.domPosition.parent).prepend(this.currentItem)}return this},serialize:function(a){var b=this._getItemsAsjQuery(a&&a.connected),c=[];a=a||{};d(b).each(function(){var e=(d(a.item||this).attr(a.attribute||"id")||"").match(a.expression||/(.+)[-=_](.+)/);if(e)c.push((a.key||e[1]+"[]")+"="+(a.key&&a.expression?e[1]:e[2]))});!c.length&&a.key&&c.push(a.key+"=");return c.join("&")},toArray:function(a){var b=this._getItemsAsjQuery(a&&
a.connected),c=[];a=a||{};b.each(function(){c.push(d(a.item||this).attr(a.attribute||"id")||"")});return c},_intersectsWith:function(a){var b=this.positionAbs.left,c=b+this.helperProportions.width,e=this.positionAbs.top,f=e+this.helperProportions.height,g=a.left,h=g+a.width,i=a.top,k=i+a.height,j=this.offset.click.top,l=this.offset.click.left;j=e+j>i&&e+j<k&&b+l>g&&b+l<h;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||this.options.tolerance!="pointer"&&this.helperProportions[this.floating?
"width":"height"]>a[this.floating?"width":"height"]?j:g<b+this.helperProportions.width/2&&c-this.helperProportions.width/2<h&&i<e+this.helperProportions.height/2&&f-this.helperProportions.height/2<k},_intersectsWithPointer:function(a){var b=d.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,a.top,a.height);a=d.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,a.left,a.width);b=b&&a;a=this._getDragVerticalDirection();var c=this._getDragHorizontalDirection();if(!b)return false;return this.floating?
c&&c=="right"||a=="down"?2:1:a&&(a=="down"?2:1)},_intersectsWithSides:function(a){var b=d.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,a.top+a.height/2,a.height);a=d.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,a.left+a.width/2,a.width);var c=this._getDragVerticalDirection(),e=this._getDragHorizontalDirection();return this.floating&&e?e=="right"&&a||e=="left"&&!a:c&&(c=="down"&&b||c=="up"&&!b)},_getDragVerticalDirection:function(){var a=this.positionAbs.top-this.lastPositionAbs.top;
return a!=0&&(a>0?"down":"up")},_getDragHorizontalDirection:function(){var a=this.positionAbs.left-this.lastPositionAbs.left;return a!=0&&(a>0?"right":"left")},refresh:function(a){this._refreshItems(a);this.refreshPositions();return this},_connectWith:function(){var a=this.options;return a.connectWith.constructor==String?[a.connectWith]:a.connectWith},_getItemsAsjQuery:function(a){var b=[],c=[],e=this._connectWith();if(e&&a)for(a=e.length-1;a>=0;a--)for(var f=d(e[a]),g=f.length-1;g>=0;g--){var h=
d.data(f[g],"sortable");if(h&&h!=this&&!h.options.disabled)c.push([d.isFunction(h.options.items)?h.options.items.call(h.element):d(h.options.items,h.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),h])}c.push([d.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):d(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(a=c.length-1;a>=0;a--)c[a][0].each(function(){b.push(this)});
return d(b)},_removeCurrentsFromItems:function(){for(var a=this.currentItem.find(":data(sortable-item)"),b=0;b<this.items.length;b++)for(var c=0;c<a.length;c++)a[c]==this.items[b].item[0]&&this.items.splice(b,1)},_refreshItems:function(a){this.items=[];this.containers=[this];var b=this.items,c=[[d.isFunction(this.options.items)?this.options.items.call(this.element[0],a,{item:this.currentItem}):d(this.options.items,this.element),this]],e=this._connectWith();if(e)for(var f=e.length-1;f>=0;f--)for(var g=
d(e[f]),h=g.length-1;h>=0;h--){var i=d.data(g[h],"sortable");if(i&&i!=this&&!i.options.disabled){c.push([d.isFunction(i.options.items)?i.options.items.call(i.element[0],a,{item:this.currentItem}):d(i.options.items,i.element),i]);this.containers.push(i)}}for(f=c.length-1;f>=0;f--){a=c[f][1];e=c[f][0];h=0;for(g=e.length;h<g;h++){i=d(e[h]);i.data("sortable-item",a);b.push({item:i,instance:a,width:0,height:0,left:0,top:0})}}},refreshPositions:function(a){if(this.offsetParent&&this.helper)this.offset.parent=
this._getParentOffset();for(var b=this.items.length-1;b>=0;b--){var c=this.items[b],e=this.options.toleranceElement?d(this.options.toleranceElement,c.item):c.item;if(!a){c.width=e.outerWidth();c.height=e.outerHeight()}e=e.offset();c.left=e.left;c.top=e.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(b=this.containers.length-1;b>=0;b--){e=this.containers[b].element.offset();this.containers[b].containerCache.left=e.left;this.containers[b].containerCache.top=
e.top;this.containers[b].containerCache.width=this.containers[b].element.outerWidth();this.containers[b].containerCache.height=this.containers[b].element.outerHeight()}return this},_createPlaceholder:function(a){var b=a||this,c=b.options;if(!c.placeholder||c.placeholder.constructor==String){var e=c.placeholder;c.placeholder={element:function(){var f=d(document.createElement(b.currentItem[0].nodeName)).addClass(e||b.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];
if(!e)f.style.visibility="hidden";return f},update:function(f,g){if(!(e&&!c.forcePlaceholderSize)){g.height()||g.height(b.currentItem.innerHeight()-parseInt(b.currentItem.css("paddingTop")||0,10)-parseInt(b.currentItem.css("paddingBottom")||0,10));g.width()||g.width(b.currentItem.innerWidth()-parseInt(b.currentItem.css("paddingLeft")||0,10)-parseInt(b.currentItem.css("paddingRight")||0,10))}}}}b.placeholder=d(c.placeholder.element.call(b.element,b.currentItem));b.currentItem.after(b.placeholder);
c.placeholder.update(b,b.placeholder)},_contactContainers:function(a){for(var b=null,c=null,e=this.containers.length-1;e>=0;e--)if(!d.ui.contains(this.currentItem[0],this.containers[e].element[0]))if(this._intersectsWith(this.containers[e].containerCache)){if(!(b&&d.ui.contains(this.containers[e].element[0],b.element[0]))){b=this.containers[e];c=e}}else if(this.containers[e].containerCache.over){this.containers[e]._trigger("out",a,this._uiHash(this));this.containers[e].containerCache.over=0}if(b)if(this.containers.length===
1){this.containers[c]._trigger("over",a,this._uiHash(this));this.containers[c].containerCache.over=1}else if(this.currentContainer!=this.containers[c]){b=1E4;e=null;for(var f=this.positionAbs[this.containers[c].floating?"left":"top"],g=this.items.length-1;g>=0;g--)if(d.ui.contains(this.containers[c].element[0],this.items[g].item[0])){var h=this.items[g][this.containers[c].floating?"left":"top"];if(Math.abs(h-f)<b){b=Math.abs(h-f);e=this.items[g]}}if(e||this.options.dropOnEmpty){this.currentContainer=
this.containers[c];e?this._rearrange(a,e,null,true):this._rearrange(a,null,this.containers[c].element,true);this._trigger("change",a,this._uiHash());this.containers[c]._trigger("change",a,this._uiHash(this));this.options.placeholder.update(this.currentContainer,this.placeholder);this.containers[c]._trigger("over",a,this._uiHash(this));this.containers[c].containerCache.over=1}}},_createHelper:function(a){var b=this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a,this.currentItem])):
b.helper=="clone"?this.currentItem.clone():this.currentItem;a.parents("body").length||d(b.appendTo!="parent"?b.appendTo:this.currentItem[0].parentNode)[0].appendChild(a[0]);if(a[0]==this.currentItem[0])this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")};if(a[0].style.width==""||b.forceHelperSize)a.width(this.currentItem.width());if(a[0].style.height==
""||b.forceHelperSize)a.height(this.currentItem.height());return a},_adjustOffsetFromHelper:function(a){if(typeof a=="string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=
this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a={top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),
10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.currentItem.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions=
{width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var a=this.options;if(a.containment=="parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,d(a.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(d(a.containment=="document"?document:window).height()||
document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)){var b=d(a.containment)[0];a=d(a.containment).offset();var c=d(b).css("overflow")!="hidden";this.containment=[a.left+(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0)-this.margins.left,a.top+(parseInt(d(b).css("borderTopWidth"),10)||0)+(parseInt(d(b).css("paddingTop"),10)||0)-this.margins.top,a.left+(c?Math.max(b.scrollWidth,
b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,a.top+(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(a,b){if(!b)b=this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=
document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(c[0].tagName);return{top:b.top+this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():
e?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=this.options,c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(c[0].tagName);if(this.cssPosition=="relative"&&!(this.scrollParent[0]!=document&&this.scrollParent[0]!=this.offsetParent[0]))this.offset.relative=this._getRelativeOffset();var f=a.pageX,g=a.pageY;if(this.originalPosition){if(this.containment){if(a.pageX-
this.offset.click.left<this.containment[0])f=this.containment[0]+this.offset.click.left;if(a.pageY-this.offset.click.top<this.containment[1])g=this.containment[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>this.containment[2])f=this.containment[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>this.containment[3])g=this.containment[3]+this.offset.click.top}if(b.grid){g=this.originalPageY+Math.round((g-this.originalPageY)/b.grid[1])*b.grid[1];g=this.containment?!(g-this.offset.click.top<
this.containment[1]||g-this.offset.click.top>this.containment[3])?g:!(g-this.offset.click.top<this.containment[1])?g-b.grid[1]:g+b.grid[1]:g;f=this.originalPageX+Math.round((f-this.originalPageX)/b.grid[0])*b.grid[0];f=this.containment?!(f-this.offset.click.left<this.containment[0]||f-this.offset.click.left>this.containment[2])?f:!(f-this.offset.click.left<this.containment[0])?f-b.grid[0]:f+b.grid[0]:f}}return{top:g-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&
this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:c.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:c.scrollLeft())}},_rearrange:function(a,b,c,e){c?c[0].appendChild(this.placeholder[0]):b.item[0].parentNode.insertBefore(this.placeholder[0],this.direction=="down"?b.item[0]:b.item[0].nextSibling);this.counter=
this.counter?++this.counter:1;var f=this,g=this.counter;window.setTimeout(function(){g==f.counter&&f.refreshPositions(!e)},0)},_clear:function(a,b){this.reverting=false;var c=[];!this._noFinalSort&&this.currentItem[0].parentNode&&this.placeholder.before(this.currentItem);this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var e in this._storedCSS)if(this._storedCSS[e]=="auto"||this._storedCSS[e]=="static")this._storedCSS[e]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();
this.fromOutside&&!b&&c.push(function(f){this._trigger("receive",f,this._uiHash(this.fromOutside))});if((this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!b)c.push(function(f){this._trigger("update",f,this._uiHash())});if(!d.ui.contains(this.element[0],this.currentItem[0])){b||c.push(function(f){this._trigger("remove",f,this._uiHash())});for(e=this.containers.length-1;e>=0;e--)if(d.ui.contains(this.containers[e].element[0],
this.currentItem[0])&&!b){c.push(function(f){return function(g){f._trigger("receive",g,this._uiHash(this))}}.call(this,this.containers[e]));c.push(function(f){return function(g){f._trigger("update",g,this._uiHash(this))}}.call(this,this.containers[e]))}}for(e=this.containers.length-1;e>=0;e--){b||c.push(function(f){return function(g){f._trigger("deactivate",g,this._uiHash(this))}}.call(this,this.containers[e]));if(this.containers[e].containerCache.over){c.push(function(f){return function(g){f._trigger("out",
g,this._uiHash(this))}}.call(this,this.containers[e]));this.containers[e].containerCache.over=0}}this._storedCursor&&d("body").css("cursor",this._storedCursor);this._storedOpacity&&this.helper.css("opacity",this._storedOpacity);if(this._storedZIndex)this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex);this.dragging=false;if(this.cancelHelperRemoval){if(!b){this._trigger("beforeStop",a,this._uiHash());for(e=0;e<c.length;e++)c[e].call(this,a);this._trigger("stop",a,this._uiHash())}return false}b||
this._trigger("beforeStop",a,this._uiHash());this.placeholder[0].parentNode.removeChild(this.placeholder[0]);this.helper[0]!=this.currentItem[0]&&this.helper.remove();this.helper=null;if(!b){for(e=0;e<c.length;e++)c[e].call(this,a);this._trigger("stop",a,this._uiHash())}this.fromOutside=false;return true},_trigger:function(){d.Widget.prototype._trigger.apply(this,arguments)===false&&this.cancel()},_uiHash:function(a){var b=a||this;return{helper:b.helper,placeholder:b.placeholder||d([]),position:b.position,
originalPosition:b.originalPosition,offset:b.positionAbs,item:b.currentItem,sender:a?a.element:null}}});d.extend(d.ui.sortable,{version:"1.8.9"})})(jQuery);
;/*
 * jQuery UI Accordion 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Accordion
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 */
(function(c){c.widget("ui.accordion",{options:{active:0,animated:"slide",autoHeight:true,clearStyle:false,collapsible:false,event:"click",fillSpace:false,header:"> li > :first-child,> :not(li):even",icons:{header:"ui-icon-triangle-1-e",headerSelected:"ui-icon-triangle-1-s"},navigation:false,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}},_create:function(){var a=this,b=a.options;a.running=0;a.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix");
a.headers=a.element.find(b.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion",function(){b.disabled||c(this).addClass("ui-state-hover")}).bind("mouseleave.accordion",function(){b.disabled||c(this).removeClass("ui-state-hover")}).bind("focus.accordion",function(){b.disabled||c(this).addClass("ui-state-focus")}).bind("blur.accordion",function(){b.disabled||c(this).removeClass("ui-state-focus")});a.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");
if(b.navigation){var d=a.element.find("a").filter(b.navigationFilter).eq(0);if(d.length){var h=d.closest(".ui-accordion-header");a.active=h.length?h:d.closest(".ui-accordion-content").prev()}}a.active=a._findActive(a.active||b.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top");a.active.next().addClass("ui-accordion-content-active");a._createIcons();a.resize();a.element.attr("role","tablist");a.headers.attr("role","tab").bind("keydown.accordion",
function(f){return a._keydown(f)}).next().attr("role","tabpanel");a.headers.not(a.active||"").attr({"aria-expanded":"false",tabIndex:-1}).next().hide();a.active.length?a.active.attr({"aria-expanded":"true",tabIndex:0}):a.headers.eq(0).attr("tabIndex",0);c.browser.safari||a.headers.find("a").attr("tabIndex",-1);b.event&&a.headers.bind(b.event.split(" ").join(".accordion ")+".accordion",function(f){a._clickHandler.call(a,f,this);f.preventDefault()})},_createIcons:function(){var a=this.options;if(a.icons){c("<span></span>").addClass("ui-icon "+
a.icons.header).prependTo(this.headers);this.active.children(".ui-icon").toggleClass(a.icons.header).toggleClass(a.icons.headerSelected);this.element.addClass("ui-accordion-icons")}},_destroyIcons:function(){this.headers.children(".ui-icon").remove();this.element.removeClass("ui-accordion-icons")},destroy:function(){var a=this.options;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("tabIndex");
this.headers.find("a").removeAttr("tabIndex");this._destroyIcons();var b=this.headers.next().css("display","").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled");if(a.autoHeight||a.fillHeight)b.css("height","");return c.Widget.prototype.destroy.call(this)},_setOption:function(a,b){c.Widget.prototype._setOption.apply(this,arguments);a=="active"&&this.activate(b);if(a=="icons"){this._destroyIcons();
b&&this._createIcons()}if(a=="disabled")this.headers.add(this.headers.next())[b?"addClass":"removeClass"]("ui-accordion-disabled ui-state-disabled")},_keydown:function(a){if(!(this.options.disabled||a.altKey||a.ctrlKey)){var b=c.ui.keyCode,d=this.headers.length,h=this.headers.index(a.target),f=false;switch(a.keyCode){case b.RIGHT:case b.DOWN:f=this.headers[(h+1)%d];break;case b.LEFT:case b.UP:f=this.headers[(h-1+d)%d];break;case b.SPACE:case b.ENTER:this._clickHandler({target:a.target},a.target);
a.preventDefault()}if(f){c(a.target).attr("tabIndex",-1);c(f).attr("tabIndex",0);f.focus();return false}return true}},resize:function(){var a=this.options,b;if(a.fillSpace){if(c.browser.msie){var d=this.element.parent().css("overflow");this.element.parent().css("overflow","hidden")}b=this.element.parent().height();c.browser.msie&&this.element.parent().css("overflow",d);this.headers.each(function(){b-=c(this).outerHeight(true)});this.headers.next().each(function(){c(this).height(Math.max(0,b-c(this).innerHeight()+
c(this).height()))}).css("overflow","auto")}else if(a.autoHeight){b=0;this.headers.next().each(function(){b=Math.max(b,c(this).height("").height())}).height(b)}return this},activate:function(a){this.options.active=a;a=this._findActive(a)[0];this._clickHandler({target:a},a);return this},_findActive:function(a){return a?typeof a==="number"?this.headers.filter(":eq("+a+")"):this.headers.not(this.headers.not(a)):a===false?c([]):this.headers.filter(":eq(0)")},_clickHandler:function(a,b){var d=this.options;
if(!d.disabled)if(a.target){a=c(a.currentTarget||b);b=a[0]===this.active[0];d.active=d.collapsible&&b?false:this.headers.index(a);if(!(this.running||!d.collapsible&&b)){var h=this.active;j=a.next();g=this.active.next();e={options:d,newHeader:b&&d.collapsible?c([]):a,oldHeader:this.active,newContent:b&&d.collapsible?c([]):j,oldContent:g};var f=this.headers.index(this.active[0])>this.headers.index(a[0]);this.active=b?c([]):a;this._toggle(j,g,e,b,f);h.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header);
if(!b){a.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").children(".ui-icon").removeClass(d.icons.header).addClass(d.icons.headerSelected);a.next().addClass("ui-accordion-content-active")}}}else if(d.collapsible){this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header);this.active.next().addClass("ui-accordion-content-active");var g=this.active.next(),
e={options:d,newHeader:c([]),oldHeader:d.active,newContent:c([]),oldContent:g},j=this.active=c([]);this._toggle(j,g,e)}},_toggle:function(a,b,d,h,f){var g=this,e=g.options;g.toShow=a;g.toHide=b;g.data=d;var j=function(){if(g)return g._completed.apply(g,arguments)};g._trigger("changestart",null,g.data);g.running=b.size()===0?a.size():b.size();if(e.animated){d={};d=e.collapsible&&h?{toShow:c([]),toHide:b,complete:j,down:f,autoHeight:e.autoHeight||e.fillSpace}:{toShow:a,toHide:b,complete:j,down:f,autoHeight:e.autoHeight||
e.fillSpace};if(!e.proxied)e.proxied=e.animated;if(!e.proxiedDuration)e.proxiedDuration=e.duration;e.animated=c.isFunction(e.proxied)?e.proxied(d):e.proxied;e.duration=c.isFunction(e.proxiedDuration)?e.proxiedDuration(d):e.proxiedDuration;h=c.ui.accordion.animations;var i=e.duration,k=e.animated;if(k&&!h[k]&&!c.easing[k])k="slide";h[k]||(h[k]=function(l){this.slide(l,{easing:k,duration:i||700})});h[k](d)}else{if(e.collapsible&&h)a.toggle();else{b.hide();a.show()}j(true)}b.prev().attr({"aria-expanded":"false",
tabIndex:-1}).blur();a.prev().attr({"aria-expanded":"true",tabIndex:0}).focus()},_completed:function(a){this.running=a?0:--this.running;if(!this.running){this.options.clearStyle&&this.toShow.add(this.toHide).css({height:"",overflow:""});this.toHide.removeClass("ui-accordion-content-active");if(this.toHide.length)this.toHide.parent()[0].className=this.toHide.parent()[0].className;this._trigger("change",null,this.data)}}});c.extend(c.ui.accordion,{version:"1.8.9",animations:{slide:function(a,b){a=
c.extend({easing:"swing",duration:300},a,b);if(a.toHide.size())if(a.toShow.size()){var d=a.toShow.css("overflow"),h=0,f={},g={},e;b=a.toShow;e=b[0].style.width;b.width(parseInt(b.parent().width(),10)-parseInt(b.css("paddingLeft"),10)-parseInt(b.css("paddingRight"),10)-(parseInt(b.css("borderLeftWidth"),10)||0)-(parseInt(b.css("borderRightWidth"),10)||0));c.each(["height","paddingTop","paddingBottom"],function(j,i){g[i]="hide";j=(""+c.css(a.toShow[0],i)).match(/^([\d+-.]+)(.*)$/);f[i]={value:j[1],
unit:j[2]||"px"}});a.toShow.css({height:0,overflow:"hidden"}).show();a.toHide.filter(":hidden").each(a.complete).end().filter(":visible").animate(g,{step:function(j,i){if(i.prop=="height")h=i.end-i.start===0?0:(i.now-i.start)/(i.end-i.start);a.toShow[0].style[i.prop]=h*f[i.prop].value+f[i.prop].unit},duration:a.duration,easing:a.easing,complete:function(){a.autoHeight||a.toShow.css("height","");a.toShow.css({width:e,overflow:d});a.complete()}})}else a.toHide.animate({height:"hide",paddingTop:"hide",
paddingBottom:"hide"},a);else a.toShow.animate({height:"show",paddingTop:"show",paddingBottom:"show"},a)},bounceslide:function(a){this.slide(a,{easing:a.down?"easeOutBounce":"swing",duration:a.down?1E3:200})}}})})(jQuery);
;/*
 * jQuery UI Autocomplete 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Autocomplete
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *	jquery.ui.position.js
 */
(function(d){d.widget("ui.autocomplete",{options:{appendTo:"body",delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null},pending:0,_create:function(){var a=this,b=this.element[0].ownerDocument,f;this.element.addClass("ui-autocomplete-input").attr("autocomplete","off").attr({role:"textbox","aria-autocomplete":"list","aria-haspopup":"true"}).bind("keydown.autocomplete",function(c){if(!(a.options.disabled||a.element.attr("readonly"))){f=false;var e=d.ui.keyCode;
switch(c.keyCode){case e.PAGE_UP:a._move("previousPage",c);break;case e.PAGE_DOWN:a._move("nextPage",c);break;case e.UP:a._move("previous",c);c.preventDefault();break;case e.DOWN:a._move("next",c);c.preventDefault();break;case e.ENTER:case e.NUMPAD_ENTER:if(a.menu.active){f=true;c.preventDefault()}case e.TAB:if(!a.menu.active)return;a.menu.select(c);break;case e.ESCAPE:a.element.val(a.term);a.close(c);break;default:clearTimeout(a.searching);a.searching=setTimeout(function(){if(a.term!=a.element.val()){a.selectedItem=
null;a.search(null,c)}},a.options.delay);break}}}).bind("keypress.autocomplete",function(c){if(f){f=false;c.preventDefault()}}).bind("focus.autocomplete",function(){if(!a.options.disabled){a.selectedItem=null;a.previous=a.element.val()}}).bind("blur.autocomplete",function(c){if(!a.options.disabled){clearTimeout(a.searching);a.closing=setTimeout(function(){a.close(c);a._change(c)},150)}});this._initSource();this.response=function(){return a._response.apply(a,arguments)};this.menu=d("<ul></ul>").addClass("ui-autocomplete").appendTo(d(this.options.appendTo||
"body",b)[0]).mousedown(function(c){var e=a.menu.element[0];d(c.target).closest(".ui-menu-item").length||setTimeout(function(){d(document).one("mousedown",function(g){g.target!==a.element[0]&&g.target!==e&&!d.ui.contains(e,g.target)&&a.close()})},1);setTimeout(function(){clearTimeout(a.closing)},13)}).menu({focus:function(c,e){e=e.item.data("item.autocomplete");false!==a._trigger("focus",c,{item:e})&&/^key/.test(c.originalEvent.type)&&a.element.val(e.value)},selected:function(c,e){var g=e.item.data("item.autocomplete"),
h=a.previous;if(a.element[0]!==b.activeElement){a.element.focus();a.previous=h;setTimeout(function(){a.previous=h;a.selectedItem=g},1)}false!==a._trigger("select",c,{item:g})&&a.element.val(g.value);a.term=a.element.val();a.close(c);a.selectedItem=g},blur:function(){a.menu.element.is(":visible")&&a.element.val()!==a.term&&a.element.val(a.term)}}).zIndex(this.element.zIndex()+1).css({top:0,left:0}).hide().data("menu");d.fn.bgiframe&&this.menu.element.bgiframe()},destroy:function(){this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup");
this.menu.element.remove();d.Widget.prototype.destroy.call(this)},_setOption:function(a,b){d.Widget.prototype._setOption.apply(this,arguments);a==="source"&&this._initSource();if(a==="appendTo")this.menu.element.appendTo(d(b||"body",this.element[0].ownerDocument)[0]);a==="disabled"&&b&&this.xhr&&this.xhr.abort()},_initSource:function(){var a=this,b,f;if(d.isArray(this.options.source)){b=this.options.source;this.source=function(c,e){e(d.ui.autocomplete.filter(b,c.term))}}else if(typeof this.options.source===
"string"){f=this.options.source;this.source=function(c,e){a.xhr&&a.xhr.abort();a.xhr=d.ajax({url:f,data:c,dataType:"json",success:function(g,h,i){i===a.xhr&&e(g);a.xhr=null},error:function(g){g===a.xhr&&e([]);a.xhr=null}})}}else this.source=this.options.source},search:function(a,b){a=a!=null?a:this.element.val();this.term=this.element.val();if(a.length<this.options.minLength)return this.close(b);clearTimeout(this.closing);if(this._trigger("search",b)!==false)return this._search(a)},_search:function(a){this.pending++;
this.element.addClass("ui-autocomplete-loading");this.source({term:a},this.response)},_response:function(a){if(!this.options.disabled&&a&&a.length){a=this._normalize(a);this._suggest(a);this._trigger("open")}else this.close();this.pending--;this.pending||this.element.removeClass("ui-autocomplete-loading")},close:function(a){clearTimeout(this.closing);if(this.menu.element.is(":visible")){this.menu.element.hide();this.menu.deactivate();this._trigger("close",a)}},_change:function(a){this.previous!==
this.element.val()&&this._trigger("change",a,{item:this.selectedItem})},_normalize:function(a){if(a.length&&a[0].label&&a[0].value)return a;return d.map(a,function(b){if(typeof b==="string")return{label:b,value:b};return d.extend({label:b.label||b.value,value:b.value||b.label},b)})},_suggest:function(a){var b=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(b,a);this.menu.deactivate();this.menu.refresh();b.show();this._resizeMenu();b.position(d.extend({of:this.element},this.options.position))},
_resizeMenu:function(){var a=this.menu.element;a.outerWidth(Math.max(a.width("").outerWidth(),this.element.outerWidth()))},_renderMenu:function(a,b){var f=this;d.each(b,function(c,e){f._renderItem(a,e)})},_renderItem:function(a,b){return d("<li></li>").data("item.autocomplete",b).append(d("<a></a>").text(b.label)).appendTo(a)},_move:function(a,b){if(this.menu.element.is(":visible"))if(this.menu.first()&&/^previous/.test(a)||this.menu.last()&&/^next/.test(a)){this.element.val(this.term);this.menu.deactivate()}else this.menu[a](b);
else this.search(null,b)},widget:function(){return this.menu.element}});d.extend(d.ui.autocomplete,{escapeRegex:function(a){return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},filter:function(a,b){var f=new RegExp(d.ui.autocomplete.escapeRegex(b),"i");return d.grep(a,function(c){return f.test(c.label||c.value||c)})}})})(jQuery);
(function(d){d.widget("ui.menu",{_create:function(){var a=this;this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({role:"listbox","aria-activedescendant":"ui-active-menuitem"}).click(function(b){if(d(b.target).closest(".ui-menu-item a").length){b.preventDefault();a.select(b)}});this.refresh()},refresh:function(){var a=this;this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","menuitem").children("a").addClass("ui-corner-all").attr("tabindex",
-1).mouseenter(function(b){a.activate(b,d(this).parent())}).mouseleave(function(){a.deactivate()})},activate:function(a,b){this.deactivate();if(this.hasScroll()){var f=b.offset().top-this.element.offset().top,c=this.element.attr("scrollTop"),e=this.element.height();if(f<0)this.element.attr("scrollTop",c+f);else f>=e&&this.element.attr("scrollTop",c+f-e+b.height())}this.active=b.eq(0).children("a").addClass("ui-state-hover").attr("id","ui-active-menuitem").end();this._trigger("focus",a,{item:b})},
deactivate:function(){if(this.active){this.active.children("a").removeClass("ui-state-hover").removeAttr("id");this._trigger("blur");this.active=null}},next:function(a){this.move("next",".ui-menu-item:first",a)},previous:function(a){this.move("prev",".ui-menu-item:last",a)},first:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},last:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},move:function(a,b,f){if(this.active){a=this.active[a+"All"](".ui-menu-item").eq(0);
a.length?this.activate(f,a):this.activate(f,this.element.children(b))}else this.activate(f,this.element.children(b))},nextPage:function(a){if(this.hasScroll())if(!this.active||this.last())this.activate(a,this.element.children(".ui-menu-item:first"));else{var b=this.active.offset().top,f=this.element.height(),c=this.element.children(".ui-menu-item").filter(function(){var e=d(this).offset().top-b-f+d(this).height();return e<10&&e>-10});c.length||(c=this.element.children(".ui-menu-item:last"));this.activate(a,
c)}else this.activate(a,this.element.children(".ui-menu-item").filter(!this.active||this.last()?":first":":last"))},previousPage:function(a){if(this.hasScroll())if(!this.active||this.first())this.activate(a,this.element.children(".ui-menu-item:last"));else{var b=this.active.offset().top,f=this.element.height();result=this.element.children(".ui-menu-item").filter(function(){var c=d(this).offset().top-b+f-d(this).height();return c<10&&c>-10});result.length||(result=this.element.children(".ui-menu-item:first"));
this.activate(a,result)}else this.activate(a,this.element.children(".ui-menu-item").filter(!this.active||this.first()?":last":":first"))},hasScroll:function(){return this.element.height()<this.element.attr("scrollHeight")},select:function(a){this._trigger("selected",a,{item:this.active})}})})(jQuery);
;/*
 * jQuery UI Button 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Button
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 */
(function(a){var g,i=function(b){a(":ui-button",b.target.form).each(function(){var c=a(this).data("button");setTimeout(function(){c.refresh()},1)})},h=function(b){var c=b.name,d=b.form,e=a([]);if(c)e=d?a(d).find("[name='"+c+"']"):a("[name='"+c+"']",b.ownerDocument).filter(function(){return!this.form});return e};a.widget("ui.button",{options:{disabled:null,text:true,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset.button").bind("reset.button",
i);if(typeof this.options.disabled!=="boolean")this.options.disabled=this.element.attr("disabled");this._determineButtonType();this.hasTitle=!!this.buttonElement.attr("title");var b=this,c=this.options,d=this.type==="checkbox"||this.type==="radio",e="ui-state-hover"+(!d?" ui-state-active":"");if(c.label===null)c.label=this.buttonElement.html();if(this.element.is(":disabled"))c.disabled=true;this.buttonElement.addClass("ui-button ui-widget ui-state-default ui-corner-all").attr("role","button").bind("mouseenter.button",
function(){if(!c.disabled){a(this).addClass("ui-state-hover");this===g&&a(this).addClass("ui-state-active")}}).bind("mouseleave.button",function(){c.disabled||a(this).removeClass(e)}).bind("focus.button",function(){a(this).addClass("ui-state-focus")}).bind("blur.button",function(){a(this).removeClass("ui-state-focus")});d&&this.element.bind("change.button",function(){b.refresh()});if(this.type==="checkbox")this.buttonElement.bind("click.button",function(){if(c.disabled)return false;a(this).toggleClass("ui-state-active");
b.buttonElement.attr("aria-pressed",b.element[0].checked)});else if(this.type==="radio")this.buttonElement.bind("click.button",function(){if(c.disabled)return false;a(this).addClass("ui-state-active");b.buttonElement.attr("aria-pressed",true);var f=b.element[0];h(f).not(f).map(function(){return a(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed",false)});else{this.buttonElement.bind("mousedown.button",function(){if(c.disabled)return false;a(this).addClass("ui-state-active");
g=this;a(document).one("mouseup",function(){g=null})}).bind("mouseup.button",function(){if(c.disabled)return false;a(this).removeClass("ui-state-active")}).bind("keydown.button",function(f){if(c.disabled)return false;if(f.keyCode==a.ui.keyCode.SPACE||f.keyCode==a.ui.keyCode.ENTER)a(this).addClass("ui-state-active")}).bind("keyup.button",function(){a(this).removeClass("ui-state-active")});this.buttonElement.is("a")&&this.buttonElement.keyup(function(f){f.keyCode===a.ui.keyCode.SPACE&&a(this).click()})}this._setOption("disabled",
c.disabled)},_determineButtonType:function(){this.type=this.element.is(":checkbox")?"checkbox":this.element.is(":radio")?"radio":this.element.is("input")?"input":"button";if(this.type==="checkbox"||this.type==="radio"){this.buttonElement=this.element.parents().last().find("label[for="+this.element.attr("id")+"]");this.element.addClass("ui-helper-hidden-accessible");var b=this.element.is(":checked");b&&this.buttonElement.addClass("ui-state-active");this.buttonElement.attr("aria-pressed",b)}else this.buttonElement=
this.element},widget:function(){return this.buttonElement},destroy:function(){this.element.removeClass("ui-helper-hidden-accessible");this.buttonElement.removeClass("ui-button ui-widget ui-state-default ui-corner-all ui-state-hover ui-state-active  ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only").removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());this.hasTitle||
this.buttonElement.removeAttr("title");a.Widget.prototype.destroy.call(this)},_setOption:function(b,c){a.Widget.prototype._setOption.apply(this,arguments);if(b==="disabled")c?this.element.attr("disabled",true):this.element.removeAttr("disabled");this._resetButton()},refresh:function(){var b=this.element.is(":disabled");b!==this.options.disabled&&this._setOption("disabled",b);if(this.type==="radio")h(this.element[0]).each(function(){a(this).is(":checked")?a(this).button("widget").addClass("ui-state-active").attr("aria-pressed",
true):a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed",false)});else if(this.type==="checkbox")this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed",true):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed",false)},_resetButton:function(){if(this.type==="input")this.options.label&&this.element.val(this.options.label);else{var b=this.buttonElement.removeClass("ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only"),
c=a("<span></span>").addClass("ui-button-text").html(this.options.label).appendTo(b.empty()).text(),d=this.options.icons,e=d.primary&&d.secondary;if(d.primary||d.secondary){b.addClass("ui-button-text-icon"+(e?"s":d.primary?"-primary":"-secondary"));d.primary&&b.prepend("<span class='ui-button-icon-primary ui-icon "+d.primary+"'></span>");d.secondary&&b.append("<span class='ui-button-icon-secondary ui-icon "+d.secondary+"'></span>");if(!this.options.text){b.addClass(e?"ui-button-icons-only":"ui-button-icon-only").removeClass("ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary");
this.hasTitle||b.attr("title",c)}}else b.addClass("ui-button-text-only")}}});a.widget("ui.buttonset",{options:{items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(b,c){b==="disabled"&&this.buttons.button("option",b,c);a.Widget.prototype._setOption.apply(this,arguments)},refresh:function(){this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return a(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass("ui-corner-left").end().filter(":last").addClass("ui-corner-right").end().end()},
destroy:function(){this.element.removeClass("ui-buttonset");this.buttons.map(function(){return a(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy");a.Widget.prototype.destroy.call(this)}})})(jQuery);
;/*
 * jQuery UI Dialog 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Dialog
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *  jquery.ui.button.js
 *	jquery.ui.draggable.js
 *	jquery.ui.mouse.js
 *	jquery.ui.position.js
 *	jquery.ui.resizable.js
 */
(function(c,j){var k={buttons:true,height:true,maxHeight:true,maxWidth:true,minHeight:true,minWidth:true,width:true},l={maxHeight:true,maxWidth:true,minHeight:true,minWidth:true};c.widget("ui.dialog",{options:{autoOpen:true,buttons:{},closeOnEscape:true,closeText:"close",dialogClass:"",draggable:true,hide:null,height:"auto",maxHeight:false,maxWidth:false,minHeight:150,minWidth:150,modal:false,position:{my:"center",at:"center",collision:"fit",using:function(a){var b=c(this).css(a).offset().top;b<0&&
c(this).css("top",a.top-b)}},resizable:true,show:null,stack:true,title:"",width:300,zIndex:1E3},_create:function(){this.originalTitle=this.element.attr("title");if(typeof this.originalTitle!=="string")this.originalTitle="";this.options.title=this.options.title||this.originalTitle;var a=this,b=a.options,d=b.title||"&#160;",e=c.ui.dialog.getTitleId(a.element),g=(a.uiDialog=c("<div></div>")).appendTo(document.body).hide().addClass("ui-dialog ui-widget ui-widget-content ui-corner-all "+b.dialogClass).css({zIndex:b.zIndex}).attr("tabIndex",
-1).css("outline",0).keydown(function(i){if(b.closeOnEscape&&i.keyCode&&i.keyCode===c.ui.keyCode.ESCAPE){a.close(i);i.preventDefault()}}).attr({role:"dialog","aria-labelledby":e}).mousedown(function(i){a.moveToTop(false,i)});a.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(g);var f=(a.uiDialogTitlebar=c("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(g),h=c('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role",
"button").hover(function(){h.addClass("ui-state-hover")},function(){h.removeClass("ui-state-hover")}).focus(function(){h.addClass("ui-state-focus")}).blur(function(){h.removeClass("ui-state-focus")}).click(function(i){a.close(i);return false}).appendTo(f);(a.uiDialogTitlebarCloseText=c("<span></span>")).addClass("ui-icon ui-icon-closethick").text(b.closeText).appendTo(h);c("<span></span>").addClass("ui-dialog-title").attr("id",e).html(d).prependTo(f);if(c.isFunction(b.beforeclose)&&!c.isFunction(b.beforeClose))b.beforeClose=
b.beforeclose;f.find("*").add(f).disableSelection();b.draggable&&c.fn.draggable&&a._makeDraggable();b.resizable&&c.fn.resizable&&a._makeResizable();a._createButtons(b.buttons);a._isOpen=false;c.fn.bgiframe&&g.bgiframe()},_init:function(){this.options.autoOpen&&this.open()},destroy:function(){var a=this;a.overlay&&a.overlay.destroy();a.uiDialog.hide();a.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");a.uiDialog.remove();a.originalTitle&&
a.element.attr("title",a.originalTitle);return a},widget:function(){return this.uiDialog},close:function(a){var b=this,d,e;if(false!==b._trigger("beforeClose",a)){b.overlay&&b.overlay.destroy();b.uiDialog.unbind("keypress.ui-dialog");b._isOpen=false;if(b.options.hide)b.uiDialog.hide(b.options.hide,function(){b._trigger("close",a)});else{b.uiDialog.hide();b._trigger("close",a)}c.ui.dialog.overlay.resize();if(b.options.modal){d=0;c(".ui-dialog").each(function(){if(this!==b.uiDialog[0]){e=c(this).css("z-index");
isNaN(e)||(d=Math.max(d,e))}});c.ui.dialog.maxZ=d}return b}},isOpen:function(){return this._isOpen},moveToTop:function(a,b){var d=this,e=d.options;if(e.modal&&!a||!e.stack&&!e.modal)return d._trigger("focus",b);if(e.zIndex>c.ui.dialog.maxZ)c.ui.dialog.maxZ=e.zIndex;if(d.overlay){c.ui.dialog.maxZ+=1;d.overlay.$el.css("z-index",c.ui.dialog.overlay.maxZ=c.ui.dialog.maxZ)}a={scrollTop:d.element.attr("scrollTop"),scrollLeft:d.element.attr("scrollLeft")};c.ui.dialog.maxZ+=1;d.uiDialog.css("z-index",c.ui.dialog.maxZ);
d.element.attr(a);d._trigger("focus",b);return d},open:function(){if(!this._isOpen){var a=this,b=a.options,d=a.uiDialog;a.overlay=b.modal?new c.ui.dialog.overlay(a):null;a._size();a._position(b.position);d.show(b.show);a.moveToTop(true);b.modal&&d.bind("keypress.ui-dialog",function(e){if(e.keyCode===c.ui.keyCode.TAB){var g=c(":tabbable",this),f=g.filter(":first");g=g.filter(":last");if(e.target===g[0]&&!e.shiftKey){f.focus(1);return false}else if(e.target===f[0]&&e.shiftKey){g.focus(1);return false}}});
c(a.element.find(":tabbable").get().concat(d.find(".ui-dialog-buttonpane :tabbable").get().concat(d.get()))).eq(0).focus();a._isOpen=true;a._trigger("open");return a}},_createButtons:function(a){var b=this,d=false,e=c("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),g=c("<div></div>").addClass("ui-dialog-buttonset").appendTo(e);b.uiDialog.find(".ui-dialog-buttonpane").remove();typeof a==="object"&&a!==null&&c.each(a,function(){return!(d=true)});if(d){c.each(a,function(f,
h){h=c.isFunction(h)?{click:h,text:f}:h;f=c('<button type="button"></button>').attr(h,true).unbind("click").click(function(){h.click.apply(b.element[0],arguments)}).appendTo(g);c.fn.button&&f.button()});e.appendTo(b.uiDialog)}},_makeDraggable:function(){function a(f){return{position:f.position,offset:f.offset}}var b=this,d=b.options,e=c(document),g;b.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(f,h){g=
d.height==="auto"?"auto":c(this).height();c(this).height(c(this).height()).addClass("ui-dialog-dragging");b._trigger("dragStart",f,a(h))},drag:function(f,h){b._trigger("drag",f,a(h))},stop:function(f,h){d.position=[h.position.left-e.scrollLeft(),h.position.top-e.scrollTop()];c(this).removeClass("ui-dialog-dragging").height(g);b._trigger("dragStop",f,a(h));c.ui.dialog.overlay.resize()}})},_makeResizable:function(a){function b(f){return{originalPosition:f.originalPosition,originalSize:f.originalSize,
position:f.position,size:f.size}}a=a===j?this.options.resizable:a;var d=this,e=d.options,g=d.uiDialog.css("position");a=typeof a==="string"?a:"n,e,s,w,se,sw,ne,nw";d.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:d.element,maxWidth:e.maxWidth,maxHeight:e.maxHeight,minWidth:e.minWidth,minHeight:d._minHeight(),handles:a,start:function(f,h){c(this).addClass("ui-dialog-resizing");d._trigger("resizeStart",f,b(h))},resize:function(f,h){d._trigger("resize",f,b(h))},stop:function(f,
h){c(this).removeClass("ui-dialog-resizing");e.height=c(this).height();e.width=c(this).width();d._trigger("resizeStop",f,b(h));c.ui.dialog.overlay.resize()}}).css("position",g).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var a=this.options;return a.height==="auto"?a.minHeight:Math.min(a.minHeight,a.height)},_position:function(a){var b=[],d=[0,0],e;if(a){if(typeof a==="string"||typeof a==="object"&&"0"in a){b=a.split?a.split(" "):[a[0],a[1]];if(b.length===
1)b[1]=b[0];c.each(["left","top"],function(g,f){if(+b[g]===b[g]){d[g]=b[g];b[g]=f}});a={my:b.join(" "),at:b.join(" "),offset:d.join(" ")}}a=c.extend({},c.ui.dialog.prototype.options.position,a)}else a=c.ui.dialog.prototype.options.position;(e=this.uiDialog.is(":visible"))||this.uiDialog.show();this.uiDialog.css({top:0,left:0}).position(c.extend({of:window},a));e||this.uiDialog.hide()},_setOptions:function(a){var b=this,d={},e=false;c.each(a,function(g,f){b._setOption(g,f);if(g in k)e=true;if(g in
l)d[g]=f});e&&this._size();this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",d)},_setOption:function(a,b){var d=this,e=d.uiDialog;switch(a){case "beforeclose":a="beforeClose";break;case "buttons":d._createButtons(b);break;case "closeText":d.uiDialogTitlebarCloseText.text(""+b);break;case "dialogClass":e.removeClass(d.options.dialogClass).addClass("ui-dialog ui-widget ui-widget-content ui-corner-all "+b);break;case "disabled":b?e.addClass("ui-dialog-disabled"):e.removeClass("ui-dialog-disabled");
break;case "draggable":var g=e.is(":data(draggable)");g&&!b&&e.draggable("destroy");!g&&b&&d._makeDraggable();break;case "position":d._position(b);break;case "resizable":(g=e.is(":data(resizable)"))&&!b&&e.resizable("destroy");g&&typeof b==="string"&&e.resizable("option","handles",b);!g&&b!==false&&d._makeResizable(b);break;case "title":c(".ui-dialog-title",d.uiDialogTitlebar).html(""+(b||"&#160;"));break}c.Widget.prototype._setOption.apply(d,arguments)},_size:function(){var a=this.options,b,d,e=
this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0});if(a.minWidth>a.width)a.width=a.minWidth;b=this.uiDialog.css({height:"auto",width:a.width}).height();d=Math.max(0,a.minHeight-b);if(a.height==="auto")if(c.support.minHeight)this.element.css({minHeight:d,height:"auto"});else{this.uiDialog.show();a=this.element.css("height","auto").height();e||this.uiDialog.hide();this.element.height(Math.max(a,d))}else this.element.height(Math.max(a.height-b,0));this.uiDialog.is(":data(resizable)")&&
this.uiDialog.resizable("option","minHeight",this._minHeight())}});c.extend(c.ui.dialog,{version:"1.8.9",uuid:0,maxZ:0,getTitleId:function(a){a=a.attr("id");if(!a){this.uuid+=1;a=this.uuid}return"ui-dialog-title-"+a},overlay:function(a){this.$el=c.ui.dialog.overlay.create(a)}});c.extend(c.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:c.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(a){return a+".dialog-overlay"}).join(" "),create:function(a){if(this.instances.length===
0){setTimeout(function(){c.ui.dialog.overlay.instances.length&&c(document).bind(c.ui.dialog.overlay.events,function(d){if(c(d.target).zIndex()<c.ui.dialog.overlay.maxZ)return false})},1);c(document).bind("keydown.dialog-overlay",function(d){if(a.options.closeOnEscape&&d.keyCode&&d.keyCode===c.ui.keyCode.ESCAPE){a.close(d);d.preventDefault()}});c(window).bind("resize.dialog-overlay",c.ui.dialog.overlay.resize)}var b=(this.oldInstances.pop()||c("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({width:this.width(),
height:this.height()});c.fn.bgiframe&&b.bgiframe();this.instances.push(b);return b},destroy:function(a){var b=c.inArray(a,this.instances);b!=-1&&this.oldInstances.push(this.instances.splice(b,1)[0]);this.instances.length===0&&c([document,window]).unbind(".dialog-overlay");a.remove();var d=0;c.each(this.instances,function(){d=Math.max(d,this.css("z-index"))});this.maxZ=d},height:function(){var a,b;if(c.browser.msie&&c.browser.version<7){a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight);
b=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight);return a<b?c(window).height()+"px":a+"px"}else return c(document).height()+"px"},width:function(){var a,b;if(c.browser.msie&&c.browser.version<7){a=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth);b=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth);return a<b?c(window).width()+"px":a+"px"}else return c(document).width()+"px"},resize:function(){var a=c([]);c.each(c.ui.dialog.overlay.instances,
function(){a=a.add(this)});a.css({width:0,height:0}).css({width:c.ui.dialog.overlay.width(),height:c.ui.dialog.overlay.height()})}});c.extend(c.ui.dialog.overlay.prototype,{destroy:function(){c.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);
;/*
 * jQuery UI Slider 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Slider
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.slider",d.ui.mouse,{widgetEventPrefix:"slide",options:{animate:false,distance:0,max:100,min:0,orientation:"horizontal",range:false,step:1,value:0,values:null},_create:function(){var b=this,a=this.options;this._mouseSliding=this._keySliding=false;this._animateOff=true;this._handleIndex=null;this._detectOrientation();this._mouseInit();this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget ui-widget-content ui-corner-all");a.disabled&&this.element.addClass("ui-slider-disabled ui-disabled");
this.range=d([]);if(a.range){if(a.range===true){this.range=d("<div></div>");if(!a.values)a.values=[this._valueMin(),this._valueMin()];if(a.values.length&&a.values.length!==2)a.values=[a.values[0],a.values[0]]}else this.range=d("<div></div>");this.range.appendTo(this.element).addClass("ui-slider-range");if(a.range==="min"||a.range==="max")this.range.addClass("ui-slider-range-"+a.range);this.range.addClass("ui-widget-header")}d(".ui-slider-handle",this.element).length===0&&d("<a href='#'></a>").appendTo(this.element).addClass("ui-slider-handle");
if(a.values&&a.values.length)for(;d(".ui-slider-handle",this.element).length<a.values.length;)d("<a href='#'></a>").appendTo(this.element).addClass("ui-slider-handle");this.handles=d(".ui-slider-handle",this.element).addClass("ui-state-default ui-corner-all");this.handle=this.handles.eq(0);this.handles.add(this.range).filter("a").click(function(c){c.preventDefault()}).hover(function(){a.disabled||d(this).addClass("ui-state-hover")},function(){d(this).removeClass("ui-state-hover")}).focus(function(){if(a.disabled)d(this).blur();
else{d(".ui-slider .ui-state-focus").removeClass("ui-state-focus");d(this).addClass("ui-state-focus")}}).blur(function(){d(this).removeClass("ui-state-focus")});this.handles.each(function(c){d(this).data("index.ui-slider-handle",c)});this.handles.keydown(function(c){var e=true,f=d(this).data("index.ui-slider-handle"),h,g,i;if(!b.options.disabled){switch(c.keyCode){case d.ui.keyCode.HOME:case d.ui.keyCode.END:case d.ui.keyCode.PAGE_UP:case d.ui.keyCode.PAGE_DOWN:case d.ui.keyCode.UP:case d.ui.keyCode.RIGHT:case d.ui.keyCode.DOWN:case d.ui.keyCode.LEFT:e=
false;if(!b._keySliding){b._keySliding=true;d(this).addClass("ui-state-active");h=b._start(c,f);if(h===false)return}break}i=b.options.step;h=b.options.values&&b.options.values.length?(g=b.values(f)):(g=b.value());switch(c.keyCode){case d.ui.keyCode.HOME:g=b._valueMin();break;case d.ui.keyCode.END:g=b._valueMax();break;case d.ui.keyCode.PAGE_UP:g=b._trimAlignValue(h+(b._valueMax()-b._valueMin())/5);break;case d.ui.keyCode.PAGE_DOWN:g=b._trimAlignValue(h-(b._valueMax()-b._valueMin())/5);break;case d.ui.keyCode.UP:case d.ui.keyCode.RIGHT:if(h===
b._valueMax())return;g=b._trimAlignValue(h+i);break;case d.ui.keyCode.DOWN:case d.ui.keyCode.LEFT:if(h===b._valueMin())return;g=b._trimAlignValue(h-i);break}b._slide(c,f,g);return e}}).keyup(function(c){var e=d(this).data("index.ui-slider-handle");if(b._keySliding){b._keySliding=false;b._stop(c,e);b._change(c,e);d(this).removeClass("ui-state-active")}});this._refreshValue();this._animateOff=false},destroy:function(){this.handles.remove();this.range.remove();this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider");
this._mouseDestroy();return this},_mouseCapture:function(b){var a=this.options,c,e,f,h,g;if(a.disabled)return false;this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()};this.elementOffset=this.element.offset();c=this._normValueFromMouse({x:b.pageX,y:b.pageY});e=this._valueMax()-this._valueMin()+1;h=this;this.handles.each(function(i){var j=Math.abs(c-h.values(i));if(e>j){e=j;f=d(this);g=i}});if(a.range===true&&this.values(1)===a.min){g+=1;f=d(this.handles[g])}if(this._start(b,
g)===false)return false;this._mouseSliding=true;h._handleIndex=g;f.addClass("ui-state-active").focus();a=f.offset();this._clickOffset=!d(b.target).parents().andSelf().is(".ui-slider-handle")?{left:0,top:0}:{left:b.pageX-a.left-f.width()/2,top:b.pageY-a.top-f.height()/2-(parseInt(f.css("borderTopWidth"),10)||0)-(parseInt(f.css("borderBottomWidth"),10)||0)+(parseInt(f.css("marginTop"),10)||0)};this.handles.hasClass("ui-state-hover")||this._slide(b,g,c);return this._animateOff=true},_mouseStart:function(){return true},
_mouseDrag:function(b){var a=this._normValueFromMouse({x:b.pageX,y:b.pageY});this._slide(b,this._handleIndex,a);return false},_mouseStop:function(b){this.handles.removeClass("ui-state-active");this._mouseSliding=false;this._stop(b,this._handleIndex);this._change(b,this._handleIndex);this._clickOffset=this._handleIndex=null;return this._animateOff=false},_detectOrientation:function(){this.orientation=this.options.orientation==="vertical"?"vertical":"horizontal"},_normValueFromMouse:function(b){var a;
if(this.orientation==="horizontal"){a=this.elementSize.width;b=b.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)}else{a=this.elementSize.height;b=b.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)}a=b/a;if(a>1)a=1;if(a<0)a=0;if(this.orientation==="vertical")a=1-a;b=this._valueMax()-this._valueMin();return this._trimAlignValue(this._valueMin()+a*b)},_start:function(b,a){var c={handle:this.handles[a],value:this.value()};if(this.options.values&&this.options.values.length){c.value=
this.values(a);c.values=this.values()}return this._trigger("start",b,c)},_slide:function(b,a,c){var e;if(this.options.values&&this.options.values.length){e=this.values(a?0:1);if(this.options.values.length===2&&this.options.range===true&&(a===0&&c>e||a===1&&c<e))c=e;if(c!==this.values(a)){e=this.values();e[a]=c;b=this._trigger("slide",b,{handle:this.handles[a],value:c,values:e});this.values(a?0:1);b!==false&&this.values(a,c,true)}}else if(c!==this.value()){b=this._trigger("slide",b,{handle:this.handles[a],
value:c});b!==false&&this.value(c)}},_stop:function(b,a){var c={handle:this.handles[a],value:this.value()};if(this.options.values&&this.options.values.length){c.value=this.values(a);c.values=this.values()}this._trigger("stop",b,c)},_change:function(b,a){if(!this._keySliding&&!this._mouseSliding){var c={handle:this.handles[a],value:this.value()};if(this.options.values&&this.options.values.length){c.value=this.values(a);c.values=this.values()}this._trigger("change",b,c)}},value:function(b){if(arguments.length){this.options.value=
this._trimAlignValue(b);this._refreshValue();this._change(null,0)}return this._value()},values:function(b,a){var c,e,f;if(arguments.length>1){this.options.values[b]=this._trimAlignValue(a);this._refreshValue();this._change(null,b)}if(arguments.length)if(d.isArray(arguments[0])){c=this.options.values;e=arguments[0];for(f=0;f<c.length;f+=1){c[f]=this._trimAlignValue(e[f]);this._change(null,f)}this._refreshValue()}else return this.options.values&&this.options.values.length?this._values(b):this.value();
else return this._values()},_setOption:function(b,a){var c,e=0;if(d.isArray(this.options.values))e=this.options.values.length;d.Widget.prototype._setOption.apply(this,arguments);switch(b){case "disabled":if(a){this.handles.filter(".ui-state-focus").blur();this.handles.removeClass("ui-state-hover");this.handles.attr("disabled","disabled");this.element.addClass("ui-disabled")}else{this.handles.removeAttr("disabled");this.element.removeClass("ui-disabled")}break;case "orientation":this._detectOrientation();
this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation);this._refreshValue();break;case "value":this._animateOff=true;this._refreshValue();this._change(null,0);this._animateOff=false;break;case "values":this._animateOff=true;this._refreshValue();for(c=0;c<e;c+=1)this._change(null,c);this._animateOff=false;break}},_value:function(){var b=this.options.value;return b=this._trimAlignValue(b)},_values:function(b){var a,c;if(arguments.length){a=this.options.values[b];
return a=this._trimAlignValue(a)}else{a=this.options.values.slice();for(c=0;c<a.length;c+=1)a[c]=this._trimAlignValue(a[c]);return a}},_trimAlignValue:function(b){if(b<=this._valueMin())return this._valueMin();if(b>=this._valueMax())return this._valueMax();var a=this.options.step>0?this.options.step:1,c=(b-this._valueMin())%a;alignValue=b-c;if(Math.abs(c)*2>=a)alignValue+=c>0?a:-a;return parseFloat(alignValue.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},
_refreshValue:function(){var b=this.options.range,a=this.options,c=this,e=!this._animateOff?a.animate:false,f,h={},g,i,j,l;if(this.options.values&&this.options.values.length)this.handles.each(function(k){f=(c.values(k)-c._valueMin())/(c._valueMax()-c._valueMin())*100;h[c.orientation==="horizontal"?"left":"bottom"]=f+"%";d(this).stop(1,1)[e?"animate":"css"](h,a.animate);if(c.options.range===true)if(c.orientation==="horizontal"){if(k===0)c.range.stop(1,1)[e?"animate":"css"]({left:f+"%"},a.animate);
if(k===1)c.range[e?"animate":"css"]({width:f-g+"%"},{queue:false,duration:a.animate})}else{if(k===0)c.range.stop(1,1)[e?"animate":"css"]({bottom:f+"%"},a.animate);if(k===1)c.range[e?"animate":"css"]({height:f-g+"%"},{queue:false,duration:a.animate})}g=f});else{i=this.value();j=this._valueMin();l=this._valueMax();f=l!==j?(i-j)/(l-j)*100:0;h[c.orientation==="horizontal"?"left":"bottom"]=f+"%";this.handle.stop(1,1)[e?"animate":"css"](h,a.animate);if(b==="min"&&this.orientation==="horizontal")this.range.stop(1,
1)[e?"animate":"css"]({width:f+"%"},a.animate);if(b==="max"&&this.orientation==="horizontal")this.range[e?"animate":"css"]({width:100-f+"%"},{queue:false,duration:a.animate});if(b==="min"&&this.orientation==="vertical")this.range.stop(1,1)[e?"animate":"css"]({height:f+"%"},a.animate);if(b==="max"&&this.orientation==="vertical")this.range[e?"animate":"css"]({height:100-f+"%"},{queue:false,duration:a.animate})}}});d.extend(d.ui.slider,{version:"1.8.9"})})(jQuery);
;/*
 * jQuery UI Tabs 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Tabs
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 */
(function(d,p){function u(){return++v}function w(){return++x}var v=0,x=0;d.widget("ui.tabs",{options:{add:null,ajaxOptions:null,cache:false,cookie:null,collapsible:false,disable:null,disabled:[],enable:null,event:"click",fx:null,idPrefix:"ui-tabs-",load:null,panelTemplate:"<div></div>",remove:null,select:null,show:null,spinner:"<em>Loading&#8230;</em>",tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"},_create:function(){this._tabify(true)},_setOption:function(b,e){if(b=="selected")this.options.collapsible&&
e==this.options.selected||this.select(e);else{this.options[b]=e;this._tabify()}},_tabId:function(b){return b.title&&b.title.replace(/\s/g,"_").replace(/[^\w\u00c0-\uFFFF-]/g,"")||this.options.idPrefix+u()},_sanitizeSelector:function(b){return b.replace(/:/g,"\\:")},_cookie:function(){var b=this.cookie||(this.cookie=this.options.cookie.name||"ui-tabs-"+w());return d.cookie.apply(null,[b].concat(d.makeArray(arguments)))},_ui:function(b,e){return{tab:b,panel:e,index:this.anchors.index(b)}},_cleanup:function(){this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function(){var b=
d(this);b.html(b.data("label.tabs")).removeData("label.tabs")})},_tabify:function(b){function e(g,f){g.css("display","");!d.support.opacity&&f.opacity&&g[0].style.removeAttribute("filter")}var a=this,c=this.options,h=/^#.+/;this.list=this.element.find("ol,ul").eq(0);this.lis=d(" > li:has(a[href])",this.list);this.anchors=this.lis.map(function(){return d("a",this)[0]});this.panels=d([]);this.anchors.each(function(g,f){var i=d(f).attr("href"),l=i.split("#")[0],q;if(l&&(l===location.toString().split("#")[0]||
(q=d("base")[0])&&l===q.href)){i=f.hash;f.href=i}if(h.test(i))a.panels=a.panels.add(a.element.find(a._sanitizeSelector(i)));else if(i&&i!=="#"){d.data(f,"href.tabs",i);d.data(f,"load.tabs",i.replace(/#.*$/,""));i=a._tabId(f);f.href="#"+i;f=a.element.find("#"+i);if(!f.length){f=d(c.panelTemplate).attr("id",i).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(a.panels[g-1]||a.list);f.data("destroy.tabs",true)}a.panels=a.panels.add(f)}else c.disabled.push(g)});if(b){this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");
this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");this.lis.addClass("ui-state-default ui-corner-top");this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");if(c.selected===p){location.hash&&this.anchors.each(function(g,f){if(f.hash==location.hash){c.selected=g;return false}});if(typeof c.selected!=="number"&&c.cookie)c.selected=parseInt(a._cookie(),10);if(typeof c.selected!=="number"&&this.lis.filter(".ui-tabs-selected").length)c.selected=
this.lis.index(this.lis.filter(".ui-tabs-selected"));c.selected=c.selected||(this.lis.length?0:-1)}else if(c.selected===null)c.selected=-1;c.selected=c.selected>=0&&this.anchors[c.selected]||c.selected<0?c.selected:0;c.disabled=d.unique(c.disabled.concat(d.map(this.lis.filter(".ui-state-disabled"),function(g){return a.lis.index(g)}))).sort();d.inArray(c.selected,c.disabled)!=-1&&c.disabled.splice(d.inArray(c.selected,c.disabled),1);this.panels.addClass("ui-tabs-hide");this.lis.removeClass("ui-tabs-selected ui-state-active");
if(c.selected>=0&&this.anchors.length){a.element.find(a._sanitizeSelector(a.anchors[c.selected].hash)).removeClass("ui-tabs-hide");this.lis.eq(c.selected).addClass("ui-tabs-selected ui-state-active");a.element.queue("tabs",function(){a._trigger("show",null,a._ui(a.anchors[c.selected],a.element.find(a._sanitizeSelector(a.anchors[c.selected].hash))[0]))});this.load(c.selected)}d(window).bind("unload",function(){a.lis.add(a.anchors).unbind(".tabs");a.lis=a.anchors=a.panels=null})}else c.selected=this.lis.index(this.lis.filter(".ui-tabs-selected"));
this.element[c.collapsible?"addClass":"removeClass"]("ui-tabs-collapsible");c.cookie&&this._cookie(c.selected,c.cookie);b=0;for(var j;j=this.lis[b];b++)d(j)[d.inArray(b,c.disabled)!=-1&&!d(j).hasClass("ui-tabs-selected")?"addClass":"removeClass"]("ui-state-disabled");c.cache===false&&this.anchors.removeData("cache.tabs");this.lis.add(this.anchors).unbind(".tabs");if(c.event!=="mouseover"){var k=function(g,f){f.is(":not(.ui-state-disabled)")&&f.addClass("ui-state-"+g)},n=function(g,f){f.removeClass("ui-state-"+
g)};this.lis.bind("mouseover.tabs",function(){k("hover",d(this))});this.lis.bind("mouseout.tabs",function(){n("hover",d(this))});this.anchors.bind("focus.tabs",function(){k("focus",d(this).closest("li"))});this.anchors.bind("blur.tabs",function(){n("focus",d(this).closest("li"))})}var m,o;if(c.fx)if(d.isArray(c.fx)){m=c.fx[0];o=c.fx[1]}else m=o=c.fx;var r=o?function(g,f){d(g).closest("li").addClass("ui-tabs-selected ui-state-active");f.hide().removeClass("ui-tabs-hide").animate(o,o.duration||"normal",
function(){e(f,o);a._trigger("show",null,a._ui(g,f[0]))})}:function(g,f){d(g).closest("li").addClass("ui-tabs-selected ui-state-active");f.removeClass("ui-tabs-hide");a._trigger("show",null,a._ui(g,f[0]))},s=m?function(g,f){f.animate(m,m.duration||"normal",function(){a.lis.removeClass("ui-tabs-selected ui-state-active");f.addClass("ui-tabs-hide");e(f,m);a.element.dequeue("tabs")})}:function(g,f){a.lis.removeClass("ui-tabs-selected ui-state-active");f.addClass("ui-tabs-hide");a.element.dequeue("tabs")};
this.anchors.bind(c.event+".tabs",function(){var g=this,f=d(g).closest("li"),i=a.panels.filter(":not(.ui-tabs-hide)"),l=a.element.find(a._sanitizeSelector(g.hash));if(f.hasClass("ui-tabs-selected")&&!c.collapsible||f.hasClass("ui-state-disabled")||f.hasClass("ui-state-processing")||a.panels.filter(":animated").length||a._trigger("select",null,a._ui(this,l[0]))===false){this.blur();return false}c.selected=a.anchors.index(this);a.abort();if(c.collapsible)if(f.hasClass("ui-tabs-selected")){c.selected=
-1;c.cookie&&a._cookie(c.selected,c.cookie);a.element.queue("tabs",function(){s(g,i)}).dequeue("tabs");this.blur();return false}else if(!i.length){c.cookie&&a._cookie(c.selected,c.cookie);a.element.queue("tabs",function(){r(g,l)});a.load(a.anchors.index(this));this.blur();return false}c.cookie&&a._cookie(c.selected,c.cookie);if(l.length){i.length&&a.element.queue("tabs",function(){s(g,i)});a.element.queue("tabs",function(){r(g,l)});a.load(a.anchors.index(this))}else throw"jQuery UI Tabs: Mismatching fragment identifier.";
d.browser.msie&&this.blur()});this.anchors.bind("click.tabs",function(){return false})},_getIndex:function(b){if(typeof b=="string")b=this.anchors.index(this.anchors.filter("[href$="+b+"]"));return b},destroy:function(){var b=this.options;this.abort();this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs");this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");this.anchors.each(function(){var e=
d.data(this,"href.tabs");if(e)this.href=e;var a=d(this).unbind(".tabs");d.each(["href","load","cache"],function(c,h){a.removeData(h+".tabs")})});this.lis.unbind(".tabs").add(this.panels).each(function(){d.data(this,"destroy.tabs")?d(this).remove():d(this).removeClass("ui-state-default ui-corner-top ui-tabs-selected ui-state-active ui-state-hover ui-state-focus ui-state-disabled ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide")});b.cookie&&this._cookie(null,b.cookie);return this},add:function(b,
e,a){if(a===p)a=this.anchors.length;var c=this,h=this.options;e=d(h.tabTemplate.replace(/#\{href\}/g,b).replace(/#\{label\}/g,e));b=!b.indexOf("#")?b.replace("#",""):this._tabId(d("a",e)[0]);e.addClass("ui-state-default ui-corner-top").data("destroy.tabs",true);var j=c.element.find("#"+b);j.length||(j=d(h.panelTemplate).attr("id",b).data("destroy.tabs",true));j.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");if(a>=this.lis.length){e.appendTo(this.list);j.appendTo(this.list[0].parentNode)}else{e.insertBefore(this.lis[a]);
j.insertBefore(this.panels[a])}h.disabled=d.map(h.disabled,function(k){return k>=a?++k:k});this._tabify();if(this.anchors.length==1){h.selected=0;e.addClass("ui-tabs-selected ui-state-active");j.removeClass("ui-tabs-hide");this.element.queue("tabs",function(){c._trigger("show",null,c._ui(c.anchors[0],c.panels[0]))});this.load(0)}this._trigger("add",null,this._ui(this.anchors[a],this.panels[a]));return this},remove:function(b){b=this._getIndex(b);var e=this.options,a=this.lis.eq(b).remove(),c=this.panels.eq(b).remove();
if(a.hasClass("ui-tabs-selected")&&this.anchors.length>1)this.select(b+(b+1<this.anchors.length?1:-1));e.disabled=d.map(d.grep(e.disabled,function(h){return h!=b}),function(h){return h>=b?--h:h});this._tabify();this._trigger("remove",null,this._ui(a.find("a")[0],c[0]));return this},enable:function(b){b=this._getIndex(b);var e=this.options;if(d.inArray(b,e.disabled)!=-1){this.lis.eq(b).removeClass("ui-state-disabled");e.disabled=d.grep(e.disabled,function(a){return a!=b});this._trigger("enable",null,
this._ui(this.anchors[b],this.panels[b]));return this}},disable:function(b){b=this._getIndex(b);var e=this.options;if(b!=e.selected){this.lis.eq(b).addClass("ui-state-disabled");e.disabled.push(b);e.disabled.sort();this._trigger("disable",null,this._ui(this.anchors[b],this.panels[b]))}return this},select:function(b){b=this._getIndex(b);if(b==-1)if(this.options.collapsible&&this.options.selected!=-1)b=this.options.selected;else return this;this.anchors.eq(b).trigger(this.options.event+".tabs");return this},
load:function(b){b=this._getIndex(b);var e=this,a=this.options,c=this.anchors.eq(b)[0],h=d.data(c,"load.tabs");this.abort();if(!h||this.element.queue("tabs").length!==0&&d.data(c,"cache.tabs"))this.element.dequeue("tabs");else{this.lis.eq(b).addClass("ui-state-processing");if(a.spinner){var j=d("span",c);j.data("label.tabs",j.html()).html(a.spinner)}this.xhr=d.ajax(d.extend({},a.ajaxOptions,{url:h,success:function(k,n){e.element.find(e._sanitizeSelector(c.hash)).html(k);e._cleanup();a.cache&&d.data(c,
"cache.tabs",true);e._trigger("load",null,e._ui(e.anchors[b],e.panels[b]));try{a.ajaxOptions.success(k,n)}catch(m){}},error:function(k,n){e._cleanup();e._trigger("load",null,e._ui(e.anchors[b],e.panels[b]));try{a.ajaxOptions.error(k,n,b,c)}catch(m){}}}));e.element.dequeue("tabs");return this}},abort:function(){this.element.queue([]);this.panels.stop(false,true);this.element.queue("tabs",this.element.queue("tabs").splice(-2,2));if(this.xhr){this.xhr.abort();delete this.xhr}this._cleanup();return this},
url:function(b,e){this.anchors.eq(b).removeData("cache.tabs").data("load.tabs",e);return this},length:function(){return this.anchors.length}});d.extend(d.ui.tabs,{version:"1.8.9"});d.extend(d.ui.tabs.prototype,{rotation:null,rotate:function(b,e){var a=this,c=this.options,h=a._rotate||(a._rotate=function(j){clearTimeout(a.rotation);a.rotation=setTimeout(function(){var k=c.selected;a.select(++k<a.anchors.length?k:0)},b);j&&j.stopPropagation()});e=a._unrotate||(a._unrotate=!e?function(j){j.clientX&&
a.rotate(null)}:function(){t=c.selected;h()});if(b){this.element.bind("tabsshow",h);this.anchors.bind(c.event+".tabs",e);h()}else{clearTimeout(a.rotation);this.element.unbind("tabsshow",h);this.anchors.unbind(c.event+".tabs",e);delete this._rotate;delete this._unrotate}return this}})})(jQuery);
;/*
 * jQuery UI Datepicker 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Datepicker
 *
 * Depends:
 *	jquery.ui.core.js
 */
(function(d,G){function K(){this.debug=false;this._curInst=null;this._keyEvent=false;this._disabledInputs=[];this._inDialog=this._datepickerShowing=false;this._mainDivId="ui-datepicker-div";this._inlineClass="ui-datepicker-inline";this._appendClass="ui-datepicker-append";this._triggerClass="ui-datepicker-trigger";this._dialogClass="ui-datepicker-dialog";this._disableClass="ui-datepicker-disabled";this._unselectableClass="ui-datepicker-unselectable";this._currentClass="ui-datepicker-current-day";this._dayOverClass=
"ui-datepicker-days-cell-over";this.regional=[];this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su",
"Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:false,showMonthAfterYear:false,yearSuffix:""};this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:false,hideIfNoPrevNext:false,navigationAsDateFormat:false,gotoCurrent:false,changeMonth:false,changeYear:false,yearRange:"c-10:c+10",showOtherMonths:false,selectOtherMonths:false,showWeek:false,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",
minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:true,showButtonPanel:false,autoSize:false};d.extend(this._defaults,this.regional[""]);this.dpDiv=d('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')}function E(a,b){d.extend(a,b);for(var c in b)if(b[c]==
null||b[c]==G)a[c]=b[c];return a}d.extend(d.ui,{datepicker:{version:"1.8.9"}});var y=(new Date).getTime();d.extend(K.prototype,{markerClassName:"hasDatepicker",log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(a){E(this._defaults,a||{});return this},_attachDatepicker:function(a,b){var c=null;for(var e in this._defaults){var f=a.getAttribute("date:"+e);if(f){c=c||{};try{c[e]=eval(f)}catch(h){c[e]=f}}}e=a.nodeName.toLowerCase();
f=e=="div"||e=="span";if(!a.id){this.uuid+=1;a.id="dp"+this.uuid}var i=this._newInst(d(a),f);i.settings=d.extend({},b||{},c||{});if(e=="input")this._connectDatepicker(a,i);else f&&this._inlineDatepicker(a,i)},_newInst:function(a,b){return{id:a[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1"),input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:!b?this.dpDiv:d('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')}},
_connectDatepicker:function(a,b){var c=d(a);b.append=d([]);b.trigger=d([]);if(!c.hasClass(this.markerClassName)){this._attachments(c,b);c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(e,f,h){b.settings[f]=h}).bind("getData.datepicker",function(e,f){return this._get(b,f)});this._autoSize(b);d.data(a,"datepicker",b)}},_attachments:function(a,b){var c=this._get(b,"appendText"),e=this._get(b,"isRTL");b.append&&
b.append.remove();if(c){b.append=d('<span class="'+this._appendClass+'">'+c+"</span>");a[e?"before":"after"](b.append)}a.unbind("focus",this._showDatepicker);b.trigger&&b.trigger.remove();c=this._get(b,"showOn");if(c=="focus"||c=="both")a.focus(this._showDatepicker);if(c=="button"||c=="both"){c=this._get(b,"buttonText");var f=this._get(b,"buttonImage");b.trigger=d(this._get(b,"buttonImageOnly")?d("<img/>").addClass(this._triggerClass).attr({src:f,alt:c,title:c}):d('<button type="button"></button>').addClass(this._triggerClass).html(f==
""?c:d("<img/>").attr({src:f,alt:c,title:c})));a[e?"before":"after"](b.trigger);b.trigger.click(function(){d.datepicker._datepickerShowing&&d.datepicker._lastInput==a[0]?d.datepicker._hideDatepicker():d.datepicker._showDatepicker(a[0]);return false})}},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b=new Date(2009,11,20),c=this._get(a,"dateFormat");if(c.match(/[DM]/)){var e=function(f){for(var h=0,i=0,g=0;g<f.length;g++)if(f[g].length>h){h=f[g].length;i=g}return i};b.setMonth(e(this._get(a,
c.match(/MM/)?"monthNames":"monthNamesShort")));b.setDate(e(this._get(a,c.match(/DD/)?"dayNames":"dayNamesShort"))+20-b.getDay())}a.input.attr("size",this._formatDate(a,b).length)}},_inlineDatepicker:function(a,b){var c=d(a);if(!c.hasClass(this.markerClassName)){c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker",function(e,f,h){b.settings[f]=h}).bind("getData.datepicker",function(e,f){return this._get(b,f)});d.data(a,"datepicker",b);this._setDate(b,this._getDefaultDate(b),
true);this._updateDatepicker(b);this._updateAlternate(b);b.dpDiv.show()}},_dialogDatepicker:function(a,b,c,e,f){a=this._dialogInst;if(!a){this.uuid+=1;this._dialogInput=d('<input type="text" id="'+("dp"+this.uuid)+'" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>');this._dialogInput.keydown(this._doKeyDown);d("body").append(this._dialogInput);a=this._dialogInst=this._newInst(this._dialogInput,false);a.settings={};d.data(this._dialogInput[0],"datepicker",a)}E(a.settings,e||{});
b=b&&b.constructor==Date?this._formatDate(a,b):b;this._dialogInput.val(b);this._pos=f?f.length?f:[f.pageX,f.pageY]:null;if(!this._pos)this._pos=[document.documentElement.clientWidth/2-100+(document.documentElement.scrollLeft||document.body.scrollLeft),document.documentElement.clientHeight/2-150+(document.documentElement.scrollTop||document.body.scrollTop)];this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px");a.settings.onSelect=c;this._inDialog=true;this.dpDiv.addClass(this._dialogClass);
this._showDatepicker(this._dialogInput[0]);d.blockUI&&d.blockUI(this.dpDiv);d.data(this._dialogInput[0],"datepicker",a);return this},_destroyDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();d.removeData(a,"datepicker");if(e=="input"){c.append.remove();c.trigger.remove();b.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",
this._doKeyUp)}else if(e=="div"||e=="span")b.removeClass(this.markerClassName).empty()}},_enableDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();if(e=="input"){a.disabled=false;c.trigger.filter("button").each(function(){this.disabled=false}).end().filter("img").css({opacity:"1.0",cursor:""})}else if(e=="div"||e=="span")b.children("."+this._inlineClass).children().removeClass("ui-state-disabled");this._disabledInputs=d.map(this._disabledInputs,
function(f){return f==a?null:f})}},_disableDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();if(e=="input"){a.disabled=true;c.trigger.filter("button").each(function(){this.disabled=true}).end().filter("img").css({opacity:"0.5",cursor:"default"})}else if(e=="div"||e=="span")b.children("."+this._inlineClass).children().addClass("ui-state-disabled");this._disabledInputs=d.map(this._disabledInputs,function(f){return f==a?null:
f});this._disabledInputs[this._disabledInputs.length]=a}},_isDisabledDatepicker:function(a){if(!a)return false;for(var b=0;b<this._disabledInputs.length;b++)if(this._disabledInputs[b]==a)return true;return false},_getInst:function(a){try{return d.data(a,"datepicker")}catch(b){throw"Missing instance data for this datepicker";}},_optionDatepicker:function(a,b,c){var e=this._getInst(a);if(arguments.length==2&&typeof b=="string")return b=="defaults"?d.extend({},d.datepicker._defaults):e?b=="all"?d.extend({},
e.settings):this._get(e,b):null;var f=b||{};if(typeof b=="string"){f={};f[b]=c}if(e){this._curInst==e&&this._hideDatepicker();var h=this._getDateDatepicker(a,true);E(e.settings,f);this._attachments(d(a),e);this._autoSize(e);this._setDateDatepicker(a,h);this._updateDatepicker(e)}},_changeDatepicker:function(a,b,c){this._optionDatepicker(a,b,c)},_refreshDatepicker:function(a){(a=this._getInst(a))&&this._updateDatepicker(a)},_setDateDatepicker:function(a,b){if(a=this._getInst(a)){this._setDate(a,b);
this._updateDatepicker(a);this._updateAlternate(a)}},_getDateDatepicker:function(a,b){(a=this._getInst(a))&&!a.inline&&this._setDateFromField(a,b);return a?this._getDate(a):null},_doKeyDown:function(a){var b=d.datepicker._getInst(a.target),c=true,e=b.dpDiv.is(".ui-datepicker-rtl");b._keyEvent=true;if(d.datepicker._datepickerShowing)switch(a.keyCode){case 9:d.datepicker._hideDatepicker();c=false;break;case 13:c=d("td."+d.datepicker._dayOverClass+":not(."+d.datepicker._currentClass+")",b.dpDiv);c[0]?
d.datepicker._selectDay(a.target,b.selectedMonth,b.selectedYear,c[0]):d.datepicker._hideDatepicker();return false;case 27:d.datepicker._hideDatepicker();break;case 33:d.datepicker._adjustDate(a.target,a.ctrlKey?-d.datepicker._get(b,"stepBigMonths"):-d.datepicker._get(b,"stepMonths"),"M");break;case 34:d.datepicker._adjustDate(a.target,a.ctrlKey?+d.datepicker._get(b,"stepBigMonths"):+d.datepicker._get(b,"stepMonths"),"M");break;case 35:if(a.ctrlKey||a.metaKey)d.datepicker._clearDate(a.target);c=a.ctrlKey||
a.metaKey;break;case 36:if(a.ctrlKey||a.metaKey)d.datepicker._gotoToday(a.target);c=a.ctrlKey||a.metaKey;break;case 37:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,e?+1:-1,"D");c=a.ctrlKey||a.metaKey;if(a.originalEvent.altKey)d.datepicker._adjustDate(a.target,a.ctrlKey?-d.datepicker._get(b,"stepBigMonths"):-d.datepicker._get(b,"stepMonths"),"M");break;case 38:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,-7,"D");c=a.ctrlKey||a.metaKey;break;case 39:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,
e?-1:+1,"D");c=a.ctrlKey||a.metaKey;if(a.originalEvent.altKey)d.datepicker._adjustDate(a.target,a.ctrlKey?+d.datepicker._get(b,"stepBigMonths"):+d.datepicker._get(b,"stepMonths"),"M");break;case 40:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,+7,"D");c=a.ctrlKey||a.metaKey;break;default:c=false}else if(a.keyCode==36&&a.ctrlKey)d.datepicker._showDatepicker(this);else c=false;if(c){a.preventDefault();a.stopPropagation()}},_doKeyPress:function(a){var b=d.datepicker._getInst(a.target);if(d.datepicker._get(b,
"constrainInput")){b=d.datepicker._possibleChars(d.datepicker._get(b,"dateFormat"));var c=String.fromCharCode(a.charCode==G?a.keyCode:a.charCode);return a.ctrlKey||a.metaKey||c<" "||!b||b.indexOf(c)>-1}},_doKeyUp:function(a){a=d.datepicker._getInst(a.target);if(a.input.val()!=a.lastVal)try{if(d.datepicker.parseDate(d.datepicker._get(a,"dateFormat"),a.input?a.input.val():null,d.datepicker._getFormatConfig(a))){d.datepicker._setDateFromField(a);d.datepicker._updateAlternate(a);d.datepicker._updateDatepicker(a)}}catch(b){d.datepicker.log(b)}return true},
_showDatepicker:function(a){a=a.target||a;if(a.nodeName.toLowerCase()!="input")a=d("input",a.parentNode)[0];if(!(d.datepicker._isDisabledDatepicker(a)||d.datepicker._lastInput==a)){var b=d.datepicker._getInst(a);d.datepicker._curInst&&d.datepicker._curInst!=b&&d.datepicker._curInst.dpDiv.stop(true,true);var c=d.datepicker._get(b,"beforeShow");E(b.settings,c?c.apply(a,[a,b]):{});b.lastVal=null;d.datepicker._lastInput=a;d.datepicker._setDateFromField(b);if(d.datepicker._inDialog)a.value="";if(!d.datepicker._pos){d.datepicker._pos=
d.datepicker._findPos(a);d.datepicker._pos[1]+=a.offsetHeight}var e=false;d(a).parents().each(function(){e|=d(this).css("position")=="fixed";return!e});if(e&&d.browser.opera){d.datepicker._pos[0]-=document.documentElement.scrollLeft;d.datepicker._pos[1]-=document.documentElement.scrollTop}c={left:d.datepicker._pos[0],top:d.datepicker._pos[1]};d.datepicker._pos=null;b.dpDiv.empty();b.dpDiv.css({position:"absolute",display:"block",top:"-1000px"});d.datepicker._updateDatepicker(b);c=d.datepicker._checkOffset(b,
c,e);b.dpDiv.css({position:d.datepicker._inDialog&&d.blockUI?"static":e?"fixed":"absolute",display:"none",left:c.left+"px",top:c.top+"px"});if(!b.inline){c=d.datepicker._get(b,"showAnim");var f=d.datepicker._get(b,"duration"),h=function(){d.datepicker._datepickerShowing=true;var i=b.dpDiv.find("iframe.ui-datepicker-cover");if(i.length){var g=d.datepicker._getBorders(b.dpDiv);i.css({left:-g[0],top:-g[1],width:b.dpDiv.outerWidth(),height:b.dpDiv.outerHeight()})}};b.dpDiv.zIndex(d(a).zIndex()+1);d.effects&&
d.effects[c]?b.dpDiv.show(c,d.datepicker._get(b,"showOptions"),f,h):b.dpDiv[c||"show"](c?f:null,h);if(!c||!f)h();b.input.is(":visible")&&!b.input.is(":disabled")&&b.input.focus();d.datepicker._curInst=b}}},_updateDatepicker:function(a){var b=this,c=d.datepicker._getBorders(a.dpDiv);a.dpDiv.empty().append(this._generateHTML(a));var e=a.dpDiv.find("iframe.ui-datepicker-cover");e.length&&e.css({left:-c[0],top:-c[1],width:a.dpDiv.outerWidth(),height:a.dpDiv.outerHeight()});a.dpDiv.find("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a").bind("mouseout",
function(){d(this).removeClass("ui-state-hover");this.className.indexOf("ui-datepicker-prev")!=-1&&d(this).removeClass("ui-datepicker-prev-hover");this.className.indexOf("ui-datepicker-next")!=-1&&d(this).removeClass("ui-datepicker-next-hover")}).bind("mouseover",function(){if(!b._isDisabledDatepicker(a.inline?a.dpDiv.parent()[0]:a.input[0])){d(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");d(this).addClass("ui-state-hover");this.className.indexOf("ui-datepicker-prev")!=
-1&&d(this).addClass("ui-datepicker-prev-hover");this.className.indexOf("ui-datepicker-next")!=-1&&d(this).addClass("ui-datepicker-next-hover")}}).end().find("."+this._dayOverClass+" a").trigger("mouseover").end();c=this._getNumberOfMonths(a);e=c[1];e>1?a.dpDiv.addClass("ui-datepicker-multi-"+e).css("width",17*e+"em"):a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");a.dpDiv[(c[0]!=1||c[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi");a.dpDiv[(this._get(a,
"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl");a==d.datepicker._curInst&&d.datepicker._datepickerShowing&&a.input&&a.input.is(":visible")&&!a.input.is(":disabled")&&a.input.focus();if(a.yearshtml){var f=a.yearshtml;setTimeout(function(){f===a.yearshtml&&a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml);f=a.yearshtml=null},0)}},_getBorders:function(a){var b=function(c){return{thin:1,medium:2,thick:3}[c]||c};return[parseFloat(b(a.css("border-left-width"))),parseFloat(b(a.css("border-top-width")))]},
_checkOffset:function(a,b,c){var e=a.dpDiv.outerWidth(),f=a.dpDiv.outerHeight(),h=a.input?a.input.outerWidth():0,i=a.input?a.input.outerHeight():0,g=document.documentElement.clientWidth+d(document).scrollLeft(),j=document.documentElement.clientHeight+d(document).scrollTop();b.left-=this._get(a,"isRTL")?e-h:0;b.left-=c&&b.left==a.input.offset().left?d(document).scrollLeft():0;b.top-=c&&b.top==a.input.offset().top+i?d(document).scrollTop():0;b.left-=Math.min(b.left,b.left+e>g&&g>e?Math.abs(b.left+e-
g):0);b.top-=Math.min(b.top,b.top+f>j&&j>f?Math.abs(f+i):0);return b},_findPos:function(a){for(var b=this._get(this._getInst(a),"isRTL");a&&(a.type=="hidden"||a.nodeType!=1);)a=a[b?"previousSibling":"nextSibling"];a=d(a).offset();return[a.left,a.top]},_hideDatepicker:function(a){var b=this._curInst;if(!(!b||a&&b!=d.data(a,"datepicker")))if(this._datepickerShowing){a=this._get(b,"showAnim");var c=this._get(b,"duration"),e=function(){d.datepicker._tidyDialog(b);this._curInst=null};d.effects&&d.effects[a]?
b.dpDiv.hide(a,d.datepicker._get(b,"showOptions"),c,e):b.dpDiv[a=="slideDown"?"slideUp":a=="fadeIn"?"fadeOut":"hide"](a?c:null,e);a||e();if(a=this._get(b,"onClose"))a.apply(b.input?b.input[0]:null,[b.input?b.input.val():"",b]);this._datepickerShowing=false;this._lastInput=null;if(this._inDialog){this._dialogInput.css({position:"absolute",left:"0",top:"-100px"});if(d.blockUI){d.unblockUI();d("body").append(this.dpDiv)}}this._inDialog=false}},_tidyDialog:function(a){a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},
_checkExternalClick:function(a){if(d.datepicker._curInst){a=d(a.target);a[0].id!=d.datepicker._mainDivId&&a.parents("#"+d.datepicker._mainDivId).length==0&&!a.hasClass(d.datepicker.markerClassName)&&!a.hasClass(d.datepicker._triggerClass)&&d.datepicker._datepickerShowing&&!(d.datepicker._inDialog&&d.blockUI)&&d.datepicker._hideDatepicker()}},_adjustDate:function(a,b,c){a=d(a);var e=this._getInst(a[0]);if(!this._isDisabledDatepicker(a[0])){this._adjustInstDate(e,b+(c=="M"?this._get(e,"showCurrentAtPos"):
0),c);this._updateDatepicker(e)}},_gotoToday:function(a){a=d(a);var b=this._getInst(a[0]);if(this._get(b,"gotoCurrent")&&b.currentDay){b.selectedDay=b.currentDay;b.drawMonth=b.selectedMonth=b.currentMonth;b.drawYear=b.selectedYear=b.currentYear}else{var c=new Date;b.selectedDay=c.getDate();b.drawMonth=b.selectedMonth=c.getMonth();b.drawYear=b.selectedYear=c.getFullYear()}this._notifyChange(b);this._adjustDate(a)},_selectMonthYear:function(a,b,c){a=d(a);var e=this._getInst(a[0]);e._selectingMonthYear=
false;e["selected"+(c=="M"?"Month":"Year")]=e["draw"+(c=="M"?"Month":"Year")]=parseInt(b.options[b.selectedIndex].value,10);this._notifyChange(e);this._adjustDate(a)},_clickMonthYear:function(a){var b=this._getInst(d(a)[0]);b.input&&b._selectingMonthYear&&setTimeout(function(){b.input.focus()},0);b._selectingMonthYear=!b._selectingMonthYear},_selectDay:function(a,b,c,e){var f=d(a);if(!(d(e).hasClass(this._unselectableClass)||this._isDisabledDatepicker(f[0]))){f=this._getInst(f[0]);f.selectedDay=f.currentDay=
d("a",e).html();f.selectedMonth=f.currentMonth=b;f.selectedYear=f.currentYear=c;this._selectDate(a,this._formatDate(f,f.currentDay,f.currentMonth,f.currentYear))}},_clearDate:function(a){a=d(a);this._getInst(a[0]);this._selectDate(a,"")},_selectDate:function(a,b){a=this._getInst(d(a)[0]);b=b!=null?b:this._formatDate(a);a.input&&a.input.val(b);this._updateAlternate(a);var c=this._get(a,"onSelect");if(c)c.apply(a.input?a.input[0]:null,[b,a]);else a.input&&a.input.trigger("change");if(a.inline)this._updateDatepicker(a);
else{this._hideDatepicker();this._lastInput=a.input[0];typeof a.input[0]!="object"&&a.input.focus();this._lastInput=null}},_updateAlternate:function(a){var b=this._get(a,"altField");if(b){var c=this._get(a,"altFormat")||this._get(a,"dateFormat"),e=this._getDate(a),f=this.formatDate(c,e,this._getFormatConfig(a));d(b).each(function(){d(this).val(f)})}},noWeekends:function(a){a=a.getDay();return[a>0&&a<6,""]},iso8601Week:function(a){a=new Date(a.getTime());a.setDate(a.getDate()+4-(a.getDay()||7));var b=
a.getTime();a.setMonth(0);a.setDate(1);return Math.floor(Math.round((b-a)/864E5)/7)+1},parseDate:function(a,b,c){if(a==null||b==null)throw"Invalid arguments";b=typeof b=="object"?b.toString():b+"";if(b=="")return null;var e=(c?c.shortYearCutoff:null)||this._defaults.shortYearCutoff;e=typeof e!="string"?e:(new Date).getFullYear()%100+parseInt(e,10);for(var f=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,h=(c?c.dayNames:null)||this._defaults.dayNames,i=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,
g=(c?c.monthNames:null)||this._defaults.monthNames,j=c=-1,l=-1,u=-1,k=false,o=function(p){(p=z+1<a.length&&a.charAt(z+1)==p)&&z++;return p},m=function(p){var v=o(p);p=new RegExp("^\\d{1,"+(p=="@"?14:p=="!"?20:p=="y"&&v?4:p=="o"?3:2)+"}");p=b.substring(s).match(p);if(!p)throw"Missing number at position "+s;s+=p[0].length;return parseInt(p[0],10)},n=function(p,v,H){p=o(p)?H:v;for(v=0;v<p.length;v++)if(b.substr(s,p[v].length).toLowerCase()==p[v].toLowerCase()){s+=p[v].length;return v+1}throw"Unknown name at position "+
s;},r=function(){if(b.charAt(s)!=a.charAt(z))throw"Unexpected literal at position "+s;s++},s=0,z=0;z<a.length;z++)if(k)if(a.charAt(z)=="'"&&!o("'"))k=false;else r();else switch(a.charAt(z)){case "d":l=m("d");break;case "D":n("D",f,h);break;case "o":u=m("o");break;case "m":j=m("m");break;case "M":j=n("M",i,g);break;case "y":c=m("y");break;case "@":var w=new Date(m("@"));c=w.getFullYear();j=w.getMonth()+1;l=w.getDate();break;case "!":w=new Date((m("!")-this._ticksTo1970)/1E4);c=w.getFullYear();j=w.getMonth()+
1;l=w.getDate();break;case "'":if(o("'"))r();else k=true;break;default:r()}if(c==-1)c=(new Date).getFullYear();else if(c<100)c+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c<=e?0:-100);if(u>-1){j=1;l=u;do{e=this._getDaysInMonth(c,j-1);if(l<=e)break;j++;l-=e}while(1)}w=this._daylightSavingAdjust(new Date(c,j-1,l));if(w.getFullYear()!=c||w.getMonth()+1!=j||w.getDate()!=l)throw"Invalid date";return w},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",
RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1E7,formatDate:function(a,b,c){if(!b)return"";var e=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,f=(c?c.dayNames:null)||this._defaults.dayNames,h=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort;c=(c?c.monthNames:null)||this._defaults.monthNames;var i=function(o){(o=k+1<a.length&&
a.charAt(k+1)==o)&&k++;return o},g=function(o,m,n){m=""+m;if(i(o))for(;m.length<n;)m="0"+m;return m},j=function(o,m,n,r){return i(o)?r[m]:n[m]},l="",u=false;if(b)for(var k=0;k<a.length;k++)if(u)if(a.charAt(k)=="'"&&!i("'"))u=false;else l+=a.charAt(k);else switch(a.charAt(k)){case "d":l+=g("d",b.getDate(),2);break;case "D":l+=j("D",b.getDay(),e,f);break;case "o":l+=g("o",(b.getTime()-(new Date(b.getFullYear(),0,0)).getTime())/864E5,3);break;case "m":l+=g("m",b.getMonth()+1,2);break;case "M":l+=j("M",
b.getMonth(),h,c);break;case "y":l+=i("y")?b.getFullYear():(b.getYear()%100<10?"0":"")+b.getYear()%100;break;case "@":l+=b.getTime();break;case "!":l+=b.getTime()*1E4+this._ticksTo1970;break;case "'":if(i("'"))l+="'";else u=true;break;default:l+=a.charAt(k)}return l},_possibleChars:function(a){for(var b="",c=false,e=function(h){(h=f+1<a.length&&a.charAt(f+1)==h)&&f++;return h},f=0;f<a.length;f++)if(c)if(a.charAt(f)=="'"&&!e("'"))c=false;else b+=a.charAt(f);else switch(a.charAt(f)){case "d":case "m":case "y":case "@":b+=
"0123456789";break;case "D":case "M":return null;case "'":if(e("'"))b+="'";else c=true;break;default:b+=a.charAt(f)}return b},_get:function(a,b){return a.settings[b]!==G?a.settings[b]:this._defaults[b]},_setDateFromField:function(a,b){if(a.input.val()!=a.lastVal){var c=this._get(a,"dateFormat"),e=a.lastVal=a.input?a.input.val():null,f,h;f=h=this._getDefaultDate(a);var i=this._getFormatConfig(a);try{f=this.parseDate(c,e,i)||h}catch(g){this.log(g);e=b?"":e}a.selectedDay=f.getDate();a.drawMonth=a.selectedMonth=
f.getMonth();a.drawYear=a.selectedYear=f.getFullYear();a.currentDay=e?f.getDate():0;a.currentMonth=e?f.getMonth():0;a.currentYear=e?f.getFullYear():0;this._adjustInstDate(a)}},_getDefaultDate:function(a){return this._restrictMinMax(a,this._determineDate(a,this._get(a,"defaultDate"),new Date))},_determineDate:function(a,b,c){var e=function(h){var i=new Date;i.setDate(i.getDate()+h);return i},f=function(h){try{return d.datepicker.parseDate(d.datepicker._get(a,"dateFormat"),h,d.datepicker._getFormatConfig(a))}catch(i){}var g=
(h.toLowerCase().match(/^c/)?d.datepicker._getDate(a):null)||new Date,j=g.getFullYear(),l=g.getMonth();g=g.getDate();for(var u=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,k=u.exec(h);k;){switch(k[2]||"d"){case "d":case "D":g+=parseInt(k[1],10);break;case "w":case "W":g+=parseInt(k[1],10)*7;break;case "m":case "M":l+=parseInt(k[1],10);g=Math.min(g,d.datepicker._getDaysInMonth(j,l));break;case "y":case "Y":j+=parseInt(k[1],10);g=Math.min(g,d.datepicker._getDaysInMonth(j,l));break}k=u.exec(h)}return new Date(j,
l,g)};if(b=(b=b==null||b===""?c:typeof b=="string"?f(b):typeof b=="number"?isNaN(b)?c:e(b):new Date(b.getTime()))&&b.toString()=="Invalid Date"?c:b){b.setHours(0);b.setMinutes(0);b.setSeconds(0);b.setMilliseconds(0)}return this._daylightSavingAdjust(b)},_daylightSavingAdjust:function(a){if(!a)return null;a.setHours(a.getHours()>12?a.getHours()+2:0);return a},_setDate:function(a,b,c){var e=!b,f=a.selectedMonth,h=a.selectedYear;b=this._restrictMinMax(a,this._determineDate(a,b,new Date));a.selectedDay=
a.currentDay=b.getDate();a.drawMonth=a.selectedMonth=a.currentMonth=b.getMonth();a.drawYear=a.selectedYear=a.currentYear=b.getFullYear();if((f!=a.selectedMonth||h!=a.selectedYear)&&!c)this._notifyChange(a);this._adjustInstDate(a);if(a.input)a.input.val(e?"":this._formatDate(a))},_getDate:function(a){return!a.currentYear||a.input&&a.input.val()==""?null:this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay))},_generateHTML:function(a){var b=new Date;b=this._daylightSavingAdjust(new Date(b.getFullYear(),
b.getMonth(),b.getDate()));var c=this._get(a,"isRTL"),e=this._get(a,"showButtonPanel"),f=this._get(a,"hideIfNoPrevNext"),h=this._get(a,"navigationAsDateFormat"),i=this._getNumberOfMonths(a),g=this._get(a,"showCurrentAtPos"),j=this._get(a,"stepMonths"),l=i[0]!=1||i[1]!=1,u=this._daylightSavingAdjust(!a.currentDay?new Date(9999,9,9):new Date(a.currentYear,a.currentMonth,a.currentDay)),k=this._getMinMaxDate(a,"min"),o=this._getMinMaxDate(a,"max");g=a.drawMonth-g;var m=a.drawYear;if(g<0){g+=12;m--}if(o){var n=
this._daylightSavingAdjust(new Date(o.getFullYear(),o.getMonth()-i[0]*i[1]+1,o.getDate()));for(n=k&&n<k?k:n;this._daylightSavingAdjust(new Date(m,g,1))>n;){g--;if(g<0){g=11;m--}}}a.drawMonth=g;a.drawYear=m;n=this._get(a,"prevText");n=!h?n:this.formatDate(n,this._daylightSavingAdjust(new Date(m,g-j,1)),this._getFormatConfig(a));n=this._canAdjustMonth(a,-1,m,g)?'<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_'+y+".datepicker._adjustDate('#"+a.id+"', -"+j+", 'M');\" title=\""+n+'"><span class="ui-icon ui-icon-circle-triangle-'+
(c?"e":"w")+'">'+n+"</span></a>":f?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+n+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+n+"</span></a>";var r=this._get(a,"nextText");r=!h?r:this.formatDate(r,this._daylightSavingAdjust(new Date(m,g+j,1)),this._getFormatConfig(a));f=this._canAdjustMonth(a,+1,m,g)?'<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_'+y+".datepicker._adjustDate('#"+a.id+"', +"+j+", 'M');\" title=\""+r+'"><span class="ui-icon ui-icon-circle-triangle-'+
(c?"w":"e")+'">'+r+"</span></a>":f?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+r+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+r+"</span></a>";j=this._get(a,"currentText");r=this._get(a,"gotoCurrent")&&a.currentDay?u:b;j=!h?j:this.formatDate(j,r,this._getFormatConfig(a));h=!a.inline?'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_'+y+'.datepicker._hideDatepicker();">'+this._get(a,
"closeText")+"</button>":"";e=e?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(c?h:"")+(this._isInRange(a,r)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_'+y+".datepicker._gotoToday('#"+a.id+"');\">"+j+"</button>":"")+(c?"":h)+"</div>":"";h=parseInt(this._get(a,"firstDay"),10);h=isNaN(h)?0:h;j=this._get(a,"showWeek");r=this._get(a,"dayNames");this._get(a,"dayNamesShort");var s=this._get(a,"dayNamesMin"),z=
this._get(a,"monthNames"),w=this._get(a,"monthNamesShort"),p=this._get(a,"beforeShowDay"),v=this._get(a,"showOtherMonths"),H=this._get(a,"selectOtherMonths");this._get(a,"calculateWeek");for(var L=this._getDefaultDate(a),I="",C=0;C<i[0];C++){for(var M="",D=0;D<i[1];D++){var N=this._daylightSavingAdjust(new Date(m,g,a.selectedDay)),t=" ui-corner-all",x="";if(l){x+='<div class="ui-datepicker-group';if(i[1]>1)switch(D){case 0:x+=" ui-datepicker-group-first";t=" ui-corner-"+(c?"right":"left");break;case i[1]-
1:x+=" ui-datepicker-group-last";t=" ui-corner-"+(c?"left":"right");break;default:x+=" ui-datepicker-group-middle";t="";break}x+='">'}x+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+t+'">'+(/all|left/.test(t)&&C==0?c?f:n:"")+(/all|right/.test(t)&&C==0?c?n:f:"")+this._generateMonthYearHeader(a,g,m,k,o,C>0||D>0,z,w)+'</div><table class="ui-datepicker-calendar"><thead><tr>';var A=j?'<th class="ui-datepicker-week-col">'+this._get(a,"weekHeader")+"</th>":"";for(t=0;t<7;t++){var q=
(t+h)%7;A+="<th"+((t+h+6)%7>=5?' class="ui-datepicker-week-end"':"")+'><span title="'+r[q]+'">'+s[q]+"</span></th>"}x+=A+"</tr></thead><tbody>";A=this._getDaysInMonth(m,g);if(m==a.selectedYear&&g==a.selectedMonth)a.selectedDay=Math.min(a.selectedDay,A);t=(this._getFirstDayOfMonth(m,g)-h+7)%7;A=l?6:Math.ceil((t+A)/7);q=this._daylightSavingAdjust(new Date(m,g,1-t));for(var O=0;O<A;O++){x+="<tr>";var P=!j?"":'<td class="ui-datepicker-week-col">'+this._get(a,"calculateWeek")(q)+"</td>";for(t=0;t<7;t++){var F=
p?p.apply(a.input?a.input[0]:null,[q]):[true,""],B=q.getMonth()!=g,J=B&&!H||!F[0]||k&&q<k||o&&q>o;P+='<td class="'+((t+h+6)%7>=5?" ui-datepicker-week-end":"")+(B?" ui-datepicker-other-month":"")+(q.getTime()==N.getTime()&&g==a.selectedMonth&&a._keyEvent||L.getTime()==q.getTime()&&L.getTime()==N.getTime()?" "+this._dayOverClass:"")+(J?" "+this._unselectableClass+" ui-state-disabled":"")+(B&&!v?"":" "+F[1]+(q.getTime()==u.getTime()?" "+this._currentClass:"")+(q.getTime()==b.getTime()?" ui-datepicker-today":
""))+'"'+((!B||v)&&F[2]?' title="'+F[2]+'"':"")+(J?"":' onclick="DP_jQuery_'+y+".datepicker._selectDay('#"+a.id+"',"+q.getMonth()+","+q.getFullYear()+', this);return false;"')+">"+(B&&!v?"&#xa0;":J?'<span class="ui-state-default">'+q.getDate()+"</span>":'<a class="ui-state-default'+(q.getTime()==b.getTime()?" ui-state-highlight":"")+(q.getTime()==u.getTime()?" ui-state-active":"")+(B?" ui-priority-secondary":"")+'" href="#">'+q.getDate()+"</a>")+"</td>";q.setDate(q.getDate()+1);q=this._daylightSavingAdjust(q)}x+=
P+"</tr>"}g++;if(g>11){g=0;m++}x+="</tbody></table>"+(l?"</div>"+(i[0]>0&&D==i[1]-1?'<div class="ui-datepicker-row-break"></div>':""):"");M+=x}I+=M}I+=e+(d.browser.msie&&parseInt(d.browser.version,10)<7&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':"");a._keyEvent=false;return I},_generateMonthYearHeader:function(a,b,c,e,f,h,i,g){var j=this._get(a,"changeMonth"),l=this._get(a,"changeYear"),u=this._get(a,"showMonthAfterYear"),k='<div class="ui-datepicker-title">',
o="";if(h||!j)o+='<span class="ui-datepicker-month">'+i[b]+"</span>";else{i=e&&e.getFullYear()==c;var m=f&&f.getFullYear()==c;o+='<select class="ui-datepicker-month" onchange="DP_jQuery_'+y+".datepicker._selectMonthYear('#"+a.id+"', this, 'M');\" onclick=\"DP_jQuery_"+y+".datepicker._clickMonthYear('#"+a.id+"');\">";for(var n=0;n<12;n++)if((!i||n>=e.getMonth())&&(!m||n<=f.getMonth()))o+='<option value="'+n+'"'+(n==b?' selected="selected"':"")+">"+g[n]+"</option>";o+="</select>"}u||(k+=o+(h||!(j&&
l)?"&#xa0;":""));a.yearshtml="";if(h||!l)k+='<span class="ui-datepicker-year">'+c+"</span>";else{g=this._get(a,"yearRange").split(":");var r=(new Date).getFullYear();i=function(s){s=s.match(/c[+-].*/)?c+parseInt(s.substring(1),10):s.match(/[+-].*/)?r+parseInt(s,10):parseInt(s,10);return isNaN(s)?r:s};b=i(g[0]);g=Math.max(b,i(g[1]||""));b=e?Math.max(b,e.getFullYear()):b;g=f?Math.min(g,f.getFullYear()):g;for(a.yearshtml+='<select class="ui-datepicker-year" onchange="DP_jQuery_'+y+".datepicker._selectMonthYear('#"+
a.id+"', this, 'Y');\" onclick=\"DP_jQuery_"+y+".datepicker._clickMonthYear('#"+a.id+"');\">";b<=g;b++)a.yearshtml+='<option value="'+b+'"'+(b==c?' selected="selected"':"")+">"+b+"</option>";a.yearshtml+="</select>";if(d.browser.mozilla)k+='<select class="ui-datepicker-year"><option value="'+c+'" selected="selected">'+c+"</option></select>";else{k+=a.yearshtml;a.yearshtml=null}}k+=this._get(a,"yearSuffix");if(u)k+=(h||!(j&&l)?"&#xa0;":"")+o;k+="</div>";return k},_adjustInstDate:function(a,b,c){var e=
a.drawYear+(c=="Y"?b:0),f=a.drawMonth+(c=="M"?b:0);b=Math.min(a.selectedDay,this._getDaysInMonth(e,f))+(c=="D"?b:0);e=this._restrictMinMax(a,this._daylightSavingAdjust(new Date(e,f,b)));a.selectedDay=e.getDate();a.drawMonth=a.selectedMonth=e.getMonth();a.drawYear=a.selectedYear=e.getFullYear();if(c=="M"||c=="Y")this._notifyChange(a)},_restrictMinMax:function(a,b){var c=this._getMinMaxDate(a,"min");a=this._getMinMaxDate(a,"max");b=c&&b<c?c:b;return b=a&&b>a?a:b},_notifyChange:function(a){var b=this._get(a,
"onChangeMonthYear");if(b)b.apply(a.input?a.input[0]:null,[a.selectedYear,a.selectedMonth+1,a])},_getNumberOfMonths:function(a){a=this._get(a,"numberOfMonths");return a==null?[1,1]:typeof a=="number"?[1,a]:a},_getMinMaxDate:function(a,b){return this._determineDate(a,this._get(a,b+"Date"),null)},_getDaysInMonth:function(a,b){return 32-(new Date(a,b,32)).getDate()},_getFirstDayOfMonth:function(a,b){return(new Date(a,b,1)).getDay()},_canAdjustMonth:function(a,b,c,e){var f=this._getNumberOfMonths(a);
c=this._daylightSavingAdjust(new Date(c,e+(b<0?b:f[0]*f[1]),1));b<0&&c.setDate(this._getDaysInMonth(c.getFullYear(),c.getMonth()));return this._isInRange(a,c)},_isInRange:function(a,b){var c=this._getMinMaxDate(a,"min");a=this._getMinMaxDate(a,"max");return(!c||b.getTime()>=c.getTime())&&(!a||b.getTime()<=a.getTime())},_getFormatConfig:function(a){var b=this._get(a,"shortYearCutoff");b=typeof b!="string"?b:(new Date).getFullYear()%100+parseInt(b,10);return{shortYearCutoff:b,dayNamesShort:this._get(a,
"dayNamesShort"),dayNames:this._get(a,"dayNames"),monthNamesShort:this._get(a,"monthNamesShort"),monthNames:this._get(a,"monthNames")}},_formatDate:function(a,b,c,e){if(!b){a.currentDay=a.selectedDay;a.currentMonth=a.selectedMonth;a.currentYear=a.selectedYear}b=b?typeof b=="object"?b:this._daylightSavingAdjust(new Date(e,c,b)):this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return this.formatDate(this._get(a,"dateFormat"),b,this._getFormatConfig(a))}});d.fn.datepicker=
function(a){if(!d.datepicker.initialized){d(document).mousedown(d.datepicker._checkExternalClick).find("body").append(d.datepicker.dpDiv);d.datepicker.initialized=true}var b=Array.prototype.slice.call(arguments,1);if(typeof a=="string"&&(a=="isDisabled"||a=="getDate"||a=="widget"))return d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this[0]].concat(b));if(a=="option"&&arguments.length==2&&typeof arguments[1]=="string")return d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this[0]].concat(b));
return this.each(function(){typeof a=="string"?d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this].concat(b)):d.datepicker._attachDatepicker(this,a)})};d.datepicker=new K;d.datepicker.initialized=false;d.datepicker.uuid=(new Date).getTime();d.datepicker.version="1.8.9";window["DP_jQuery_"+y]=d})(jQuery);
;/*
 * jQuery UI Progressbar 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Progressbar
 *
 * Depends:
 *   jquery.ui.core.js
 *   jquery.ui.widget.js
 */
(function(b,d){b.widget("ui.progressbar",{options:{value:0,max:100},min:0,_create:function(){this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min,"aria-valuemax":this.options.max,"aria-valuenow":this._value()});this.valueDiv=b("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);this.oldValue=this._value();this._refreshValue()},destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
this.valueDiv.remove();b.Widget.prototype.destroy.apply(this,arguments)},value:function(a){if(a===d)return this._value();this._setOption("value",a);return this},_setOption:function(a,c){if(a==="value"){this.options.value=c;this._refreshValue();this._value()===this.options.max&&this._trigger("complete")}b.Widget.prototype._setOption.apply(this,arguments)},_value:function(){var a=this.options.value;if(typeof a!=="number")a=0;return Math.min(this.options.max,Math.max(this.min,a))},_percentage:function(){return 100*
this._value()/this.options.max},_refreshValue:function(){var a=this.value(),c=this._percentage();if(this.oldValue!==a){this.oldValue=a;this._trigger("change")}this.valueDiv.toggleClass("ui-corner-right",a===this.options.max).width(c.toFixed(0)+"%");this.element.attr("aria-valuenow",a)}});b.extend(b.ui.progressbar,{version:"1.8.9"})})(jQuery);
;/*
 * jQuery UI Effects 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/
 */
jQuery.effects||function(f,j){function n(c){var a;if(c&&c.constructor==Array&&c.length==3)return c;if(a=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(c))return[parseInt(a[1],10),parseInt(a[2],10),parseInt(a[3],10)];if(a=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(c))return[parseFloat(a[1])*2.55,parseFloat(a[2])*2.55,parseFloat(a[3])*2.55];if(a=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(c))return[parseInt(a[1],
16),parseInt(a[2],16),parseInt(a[3],16)];if(a=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(c))return[parseInt(a[1]+a[1],16),parseInt(a[2]+a[2],16),parseInt(a[3]+a[3],16)];if(/rgba\(0, 0, 0, 0\)/.exec(c))return o.transparent;return o[f.trim(c).toLowerCase()]}function s(c,a){var b;do{b=f.curCSS(c,a);if(b!=""&&b!="transparent"||f.nodeName(c,"body"))break;a="backgroundColor"}while(c=c.parentNode);return n(b)}function p(){var c=document.defaultView?document.defaultView.getComputedStyle(this,null):this.currentStyle,
a={},b,d;if(c&&c.length&&c[0]&&c[c[0]])for(var e=c.length;e--;){b=c[e];if(typeof c[b]=="string"){d=b.replace(/\-(\w)/g,function(g,h){return h.toUpperCase()});a[d]=c[b]}}else for(b in c)if(typeof c[b]==="string")a[b]=c[b];return a}function q(c){var a,b;for(a in c){b=c[a];if(b==null||f.isFunction(b)||a in t||/scrollbar/.test(a)||!/color/i.test(a)&&isNaN(parseFloat(b)))delete c[a]}return c}function u(c,a){var b={_:0},d;for(d in a)if(c[d]!=a[d])b[d]=a[d];return b}function k(c,a,b,d){if(typeof c=="object"){d=
a;b=null;a=c;c=a.effect}if(f.isFunction(a)){d=a;b=null;a={}}if(typeof a=="number"||f.fx.speeds[a]){d=b;b=a;a={}}if(f.isFunction(b)){d=b;b=null}a=a||{};b=b||a.duration;b=f.fx.off?0:typeof b=="number"?b:b in f.fx.speeds?f.fx.speeds[b]:f.fx.speeds._default;d=d||a.complete;return[c,a,b,d]}function m(c){if(!c||typeof c==="number"||f.fx.speeds[c])return true;if(typeof c==="string"&&!f.effects[c])return true;return false}f.effects={};f.each(["backgroundColor","borderBottomColor","borderLeftColor","borderRightColor",
"borderTopColor","borderColor","color","outlineColor"],function(c,a){f.fx.step[a]=function(b){if(!b.colorInit){b.start=s(b.elem,a);b.end=n(b.end);b.colorInit=true}b.elem.style[a]="rgb("+Math.max(Math.min(parseInt(b.pos*(b.end[0]-b.start[0])+b.start[0],10),255),0)+","+Math.max(Math.min(parseInt(b.pos*(b.end[1]-b.start[1])+b.start[1],10),255),0)+","+Math.max(Math.min(parseInt(b.pos*(b.end[2]-b.start[2])+b.start[2],10),255),0)+")"}});var o={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,
0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,
211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0],transparent:[255,255,255]},r=["add","remove","toggle"],t={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};f.effects.animateClass=function(c,a,b,
d){if(f.isFunction(b)){d=b;b=null}return this.queue("fx",function(){var e=f(this),g=e.attr("style")||" ",h=q(p.call(this)),l,v=e.attr("className");f.each(r,function(w,i){c[i]&&e[i+"Class"](c[i])});l=q(p.call(this));e.attr("className",v);e.animate(u(h,l),a,b,function(){f.each(r,function(w,i){c[i]&&e[i+"Class"](c[i])});if(typeof e.attr("style")=="object"){e.attr("style").cssText="";e.attr("style").cssText=g}else e.attr("style",g);d&&d.apply(this,arguments)});h=f.queue(this);l=h.splice(h.length-1,1)[0];
h.splice(1,0,l);f.dequeue(this)})};f.fn.extend({_addClass:f.fn.addClass,addClass:function(c,a,b,d){return a?f.effects.animateClass.apply(this,[{add:c},a,b,d]):this._addClass(c)},_removeClass:f.fn.removeClass,removeClass:function(c,a,b,d){return a?f.effects.animateClass.apply(this,[{remove:c},a,b,d]):this._removeClass(c)},_toggleClass:f.fn.toggleClass,toggleClass:function(c,a,b,d,e){return typeof a=="boolean"||a===j?b?f.effects.animateClass.apply(this,[a?{add:c}:{remove:c},b,d,e]):this._toggleClass(c,
a):f.effects.animateClass.apply(this,[{toggle:c},a,b,d])},switchClass:function(c,a,b,d,e){return f.effects.animateClass.apply(this,[{add:a,remove:c},b,d,e])}});f.extend(f.effects,{version:"1.8.9",save:function(c,a){for(var b=0;b<a.length;b++)a[b]!==null&&c.data("ec.storage."+a[b],c[0].style[a[b]])},restore:function(c,a){for(var b=0;b<a.length;b++)a[b]!==null&&c.css(a[b],c.data("ec.storage."+a[b]))},setMode:function(c,a){if(a=="toggle")a=c.is(":hidden")?"show":"hide";return a},getBaseline:function(c,
a){var b;switch(c[0]){case "top":b=0;break;case "middle":b=0.5;break;case "bottom":b=1;break;default:b=c[0]/a.height}switch(c[1]){case "left":c=0;break;case "center":c=0.5;break;case "right":c=1;break;default:c=c[1]/a.width}return{x:c,y:b}},createWrapper:function(c){if(c.parent().is(".ui-effects-wrapper"))return c.parent();var a={width:c.outerWidth(true),height:c.outerHeight(true),"float":c.css("float")},b=f("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",
border:"none",margin:0,padding:0});c.wrap(b);b=c.parent();if(c.css("position")=="static"){b.css({position:"relative"});c.css({position:"relative"})}else{f.extend(a,{position:c.css("position"),zIndex:c.css("z-index")});f.each(["top","left","bottom","right"],function(d,e){a[e]=c.css(e);if(isNaN(parseInt(a[e],10)))a[e]="auto"});c.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})}return b.css(a).show()},removeWrapper:function(c){if(c.parent().is(".ui-effects-wrapper"))return c.parent().replaceWith(c);
return c},setTransition:function(c,a,b,d){d=d||{};f.each(a,function(e,g){unit=c.cssUnit(g);if(unit[0]>0)d[g]=unit[0]*b+unit[1]});return d}});f.fn.extend({effect:function(c){var a=k.apply(this,arguments),b={options:a[1],duration:a[2],callback:a[3]};a=b.options.mode;var d=f.effects[c];if(f.fx.off||!d)return a?this[a](b.duration,b.callback):this.each(function(){b.callback&&b.callback.call(this)});return d.call(this,b)},_show:f.fn.show,show:function(c){if(m(c))return this._show.apply(this,arguments);
else{var a=k.apply(this,arguments);a[1].mode="show";return this.effect.apply(this,a)}},_hide:f.fn.hide,hide:function(c){if(m(c))return this._hide.apply(this,arguments);else{var a=k.apply(this,arguments);a[1].mode="hide";return this.effect.apply(this,a)}},__toggle:f.fn.toggle,toggle:function(c){if(m(c)||typeof c==="boolean"||f.isFunction(c))return this.__toggle.apply(this,arguments);else{var a=k.apply(this,arguments);a[1].mode="toggle";return this.effect.apply(this,a)}},cssUnit:function(c){var a=this.css(c),
b=[];f.each(["em","px","%","pt"],function(d,e){if(a.indexOf(e)>0)b=[parseFloat(a),e]});return b}});f.easing.jswing=f.easing.swing;f.extend(f.easing,{def:"easeOutQuad",swing:function(c,a,b,d,e){return f.easing[f.easing.def](c,a,b,d,e)},easeInQuad:function(c,a,b,d,e){return d*(a/=e)*a+b},easeOutQuad:function(c,a,b,d,e){return-d*(a/=e)*(a-2)+b},easeInOutQuad:function(c,a,b,d,e){if((a/=e/2)<1)return d/2*a*a+b;return-d/2*(--a*(a-2)-1)+b},easeInCubic:function(c,a,b,d,e){return d*(a/=e)*a*a+b},easeOutCubic:function(c,
a,b,d,e){return d*((a=a/e-1)*a*a+1)+b},easeInOutCubic:function(c,a,b,d,e){if((a/=e/2)<1)return d/2*a*a*a+b;return d/2*((a-=2)*a*a+2)+b},easeInQuart:function(c,a,b,d,e){return d*(a/=e)*a*a*a+b},easeOutQuart:function(c,a,b,d,e){return-d*((a=a/e-1)*a*a*a-1)+b},easeInOutQuart:function(c,a,b,d,e){if((a/=e/2)<1)return d/2*a*a*a*a+b;return-d/2*((a-=2)*a*a*a-2)+b},easeInQuint:function(c,a,b,d,e){return d*(a/=e)*a*a*a*a+b},easeOutQuint:function(c,a,b,d,e){return d*((a=a/e-1)*a*a*a*a+1)+b},easeInOutQuint:function(c,
a,b,d,e){if((a/=e/2)<1)return d/2*a*a*a*a*a+b;return d/2*((a-=2)*a*a*a*a+2)+b},easeInSine:function(c,a,b,d,e){return-d*Math.cos(a/e*(Math.PI/2))+d+b},easeOutSine:function(c,a,b,d,e){return d*Math.sin(a/e*(Math.PI/2))+b},easeInOutSine:function(c,a,b,d,e){return-d/2*(Math.cos(Math.PI*a/e)-1)+b},easeInExpo:function(c,a,b,d,e){return a==0?b:d*Math.pow(2,10*(a/e-1))+b},easeOutExpo:function(c,a,b,d,e){return a==e?b+d:d*(-Math.pow(2,-10*a/e)+1)+b},easeInOutExpo:function(c,a,b,d,e){if(a==0)return b;if(a==
e)return b+d;if((a/=e/2)<1)return d/2*Math.pow(2,10*(a-1))+b;return d/2*(-Math.pow(2,-10*--a)+2)+b},easeInCirc:function(c,a,b,d,e){return-d*(Math.sqrt(1-(a/=e)*a)-1)+b},easeOutCirc:function(c,a,b,d,e){return d*Math.sqrt(1-(a=a/e-1)*a)+b},easeInOutCirc:function(c,a,b,d,e){if((a/=e/2)<1)return-d/2*(Math.sqrt(1-a*a)-1)+b;return d/2*(Math.sqrt(1-(a-=2)*a)+1)+b},easeInElastic:function(c,a,b,d,e){c=1.70158;var g=0,h=d;if(a==0)return b;if((a/=e)==1)return b+d;g||(g=e*0.3);if(h<Math.abs(d)){h=d;c=g/4}else c=
g/(2*Math.PI)*Math.asin(d/h);return-(h*Math.pow(2,10*(a-=1))*Math.sin((a*e-c)*2*Math.PI/g))+b},easeOutElastic:function(c,a,b,d,e){c=1.70158;var g=0,h=d;if(a==0)return b;if((a/=e)==1)return b+d;g||(g=e*0.3);if(h<Math.abs(d)){h=d;c=g/4}else c=g/(2*Math.PI)*Math.asin(d/h);return h*Math.pow(2,-10*a)*Math.sin((a*e-c)*2*Math.PI/g)+d+b},easeInOutElastic:function(c,a,b,d,e){c=1.70158;var g=0,h=d;if(a==0)return b;if((a/=e/2)==2)return b+d;g||(g=e*0.3*1.5);if(h<Math.abs(d)){h=d;c=g/4}else c=g/(2*Math.PI)*Math.asin(d/
h);if(a<1)return-0.5*h*Math.pow(2,10*(a-=1))*Math.sin((a*e-c)*2*Math.PI/g)+b;return h*Math.pow(2,-10*(a-=1))*Math.sin((a*e-c)*2*Math.PI/g)*0.5+d+b},easeInBack:function(c,a,b,d,e,g){if(g==j)g=1.70158;return d*(a/=e)*a*((g+1)*a-g)+b},easeOutBack:function(c,a,b,d,e,g){if(g==j)g=1.70158;return d*((a=a/e-1)*a*((g+1)*a+g)+1)+b},easeInOutBack:function(c,a,b,d,e,g){if(g==j)g=1.70158;if((a/=e/2)<1)return d/2*a*a*(((g*=1.525)+1)*a-g)+b;return d/2*((a-=2)*a*(((g*=1.525)+1)*a+g)+2)+b},easeInBounce:function(c,
a,b,d,e){return d-f.easing.easeOutBounce(c,e-a,0,d,e)+b},easeOutBounce:function(c,a,b,d,e){return(a/=e)<1/2.75?d*7.5625*a*a+b:a<2/2.75?d*(7.5625*(a-=1.5/2.75)*a+0.75)+b:a<2.5/2.75?d*(7.5625*(a-=2.25/2.75)*a+0.9375)+b:d*(7.5625*(a-=2.625/2.75)*a+0.984375)+b},easeInOutBounce:function(c,a,b,d,e){if(a<e/2)return f.easing.easeInBounce(c,a*2,0,d,e)*0.5+b;return f.easing.easeOutBounce(c,a*2-e,0,d,e)*0.5+d*0.5+b}})}(jQuery);
;/*
 * jQuery UI Effects Blind 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Blind
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(b){b.effects.blind=function(c){return this.queue(function(){var a=b(this),g=["position","top","bottom","left","right"],f=b.effects.setMode(a,c.options.mode||"hide"),d=c.options.direction||"vertical";b.effects.save(a,g);a.show();var e=b.effects.createWrapper(a).css({overflow:"hidden"}),h=d=="vertical"?"height":"width";d=d=="vertical"?e.height():e.width();f=="show"&&e.css(h,0);var i={};i[h]=f=="show"?d:0;e.animate(i,c.duration,c.options.easing,function(){f=="hide"&&a.hide();b.effects.restore(a,
g);b.effects.removeWrapper(a);c.callback&&c.callback.apply(a[0],arguments);a.dequeue()})})}})(jQuery);
;/*
 * jQuery UI Effects Bounce 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Bounce
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(e){e.effects.bounce=function(b){return this.queue(function(){var a=e(this),l=["position","top","bottom","left","right"],h=e.effects.setMode(a,b.options.mode||"effect"),d=b.options.direction||"up",c=b.options.distance||20,m=b.options.times||5,i=b.duration||250;/show|hide/.test(h)&&l.push("opacity");e.effects.save(a,l);a.show();e.effects.createWrapper(a);var f=d=="up"||d=="down"?"top":"left";d=d=="up"||d=="left"?"pos":"neg";c=b.options.distance||(f=="top"?a.outerHeight({margin:true})/3:a.outerWidth({margin:true})/
3);if(h=="show")a.css("opacity",0).css(f,d=="pos"?-c:c);if(h=="hide")c/=m*2;h!="hide"&&m--;if(h=="show"){var g={opacity:1};g[f]=(d=="pos"?"+=":"-=")+c;a.animate(g,i/2,b.options.easing);c/=2;m--}for(g=0;g<m;g++){var j={},k={};j[f]=(d=="pos"?"-=":"+=")+c;k[f]=(d=="pos"?"+=":"-=")+c;a.animate(j,i/2,b.options.easing).animate(k,i/2,b.options.easing);c=h=="hide"?c*2:c/2}if(h=="hide"){g={opacity:0};g[f]=(d=="pos"?"-=":"+=")+c;a.animate(g,i/2,b.options.easing,function(){a.hide();e.effects.restore(a,l);e.effects.removeWrapper(a);
b.callback&&b.callback.apply(this,arguments)})}else{j={};k={};j[f]=(d=="pos"?"-=":"+=")+c;k[f]=(d=="pos"?"+=":"-=")+c;a.animate(j,i/2,b.options.easing).animate(k,i/2,b.options.easing,function(){e.effects.restore(a,l);e.effects.removeWrapper(a);b.callback&&b.callback.apply(this,arguments)})}a.queue("fx",function(){a.dequeue()});a.dequeue()})}})(jQuery);
;/*
 * jQuery UI Effects Clip 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Clip
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(b){b.effects.clip=function(e){return this.queue(function(){var a=b(this),i=["position","top","bottom","left","right","height","width"],f=b.effects.setMode(a,e.options.mode||"hide"),c=e.options.direction||"vertical";b.effects.save(a,i);a.show();var d=b.effects.createWrapper(a).css({overflow:"hidden"});d=a[0].tagName=="IMG"?d:a;var g={size:c=="vertical"?"height":"width",position:c=="vertical"?"top":"left"};c=c=="vertical"?d.height():d.width();if(f=="show"){d.css(g.size,0);d.css(g.position,
c/2)}var h={};h[g.size]=f=="show"?c:0;h[g.position]=f=="show"?0:c/2;d.animate(h,{queue:false,duration:e.duration,easing:e.options.easing,complete:function(){f=="hide"&&a.hide();b.effects.restore(a,i);b.effects.removeWrapper(a);e.callback&&e.callback.apply(a[0],arguments);a.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Drop 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Drop
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(c){c.effects.drop=function(d){return this.queue(function(){var a=c(this),h=["position","top","bottom","left","right","opacity"],e=c.effects.setMode(a,d.options.mode||"hide"),b=d.options.direction||"left";c.effects.save(a,h);a.show();c.effects.createWrapper(a);var f=b=="up"||b=="down"?"top":"left";b=b=="up"||b=="left"?"pos":"neg";var g=d.options.distance||(f=="top"?a.outerHeight({margin:true})/2:a.outerWidth({margin:true})/2);if(e=="show")a.css("opacity",0).css(f,b=="pos"?-g:g);var i={opacity:e==
"show"?1:0};i[f]=(e=="show"?b=="pos"?"+=":"-=":b=="pos"?"-=":"+=")+g;a.animate(i,{queue:false,duration:d.duration,easing:d.options.easing,complete:function(){e=="hide"&&a.hide();c.effects.restore(a,h);c.effects.removeWrapper(a);d.callback&&d.callback.apply(this,arguments);a.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Explode 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Explode
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(j){j.effects.explode=function(a){return this.queue(function(){var c=a.options.pieces?Math.round(Math.sqrt(a.options.pieces)):3,d=a.options.pieces?Math.round(Math.sqrt(a.options.pieces)):3;a.options.mode=a.options.mode=="toggle"?j(this).is(":visible")?"hide":"show":a.options.mode;var b=j(this).show().css("visibility","hidden"),g=b.offset();g.top-=parseInt(b.css("marginTop"),10)||0;g.left-=parseInt(b.css("marginLeft"),10)||0;for(var h=b.outerWidth(true),i=b.outerHeight(true),e=0;e<c;e++)for(var f=
0;f<d;f++)b.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-f*(h/d),top:-e*(i/c)}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:h/d,height:i/c,left:g.left+f*(h/d)+(a.options.mode=="show"?(f-Math.floor(d/2))*(h/d):0),top:g.top+e*(i/c)+(a.options.mode=="show"?(e-Math.floor(c/2))*(i/c):0),opacity:a.options.mode=="show"?0:1}).animate({left:g.left+f*(h/d)+(a.options.mode=="show"?0:(f-Math.floor(d/2))*(h/d)),top:g.top+
e*(i/c)+(a.options.mode=="show"?0:(e-Math.floor(c/2))*(i/c)),opacity:a.options.mode=="show"?1:0},a.duration||500);setTimeout(function(){a.options.mode=="show"?b.css({visibility:"visible"}):b.css({visibility:"visible"}).hide();a.callback&&a.callback.apply(b[0]);b.dequeue();j("div.ui-effects-explode").remove()},a.duration||500)})}})(jQuery);
;/*
 * jQuery UI Effects Fade 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Fade
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(b){b.effects.fade=function(a){return this.queue(function(){var c=b(this),d=b.effects.setMode(c,a.options.mode||"hide");c.animate({opacity:d},{queue:false,duration:a.duration,easing:a.options.easing,complete:function(){a.callback&&a.callback.apply(this,arguments);c.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Fold 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Fold
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(c){c.effects.fold=function(a){return this.queue(function(){var b=c(this),j=["position","top","bottom","left","right"],d=c.effects.setMode(b,a.options.mode||"hide"),g=a.options.size||15,h=!!a.options.horizFirst,k=a.duration?a.duration/2:c.fx.speeds._default/2;c.effects.save(b,j);b.show();var e=c.effects.createWrapper(b).css({overflow:"hidden"}),f=d=="show"!=h,l=f?["width","height"]:["height","width"];f=f?[e.width(),e.height()]:[e.height(),e.width()];var i=/([0-9]+)%/.exec(g);if(i)g=parseInt(i[1],
10)/100*f[d=="hide"?0:1];if(d=="show")e.css(h?{height:0,width:g}:{height:g,width:0});h={};i={};h[l[0]]=d=="show"?f[0]:g;i[l[1]]=d=="show"?f[1]:0;e.animate(h,k,a.options.easing).animate(i,k,a.options.easing,function(){d=="hide"&&b.hide();c.effects.restore(b,j);c.effects.removeWrapper(b);a.callback&&a.callback.apply(b[0],arguments);b.dequeue()})})}})(jQuery);
;/*
 * jQuery UI Effects Highlight 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Highlight
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(b){b.effects.highlight=function(c){return this.queue(function(){var a=b(this),e=["backgroundImage","backgroundColor","opacity"],d=b.effects.setMode(a,c.options.mode||"show"),f={backgroundColor:a.css("backgroundColor")};if(d=="hide")f.opacity=0;b.effects.save(a,e);a.show().css({backgroundImage:"none",backgroundColor:c.options.color||"#ffff99"}).animate(f,{queue:false,duration:c.duration,easing:c.options.easing,complete:function(){d=="hide"&&a.hide();b.effects.restore(a,e);d=="show"&&!b.support.opacity&&
this.style.removeAttribute("filter");c.callback&&c.callback.apply(this,arguments);a.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Pulsate 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Pulsate
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(d){d.effects.pulsate=function(a){return this.queue(function(){var b=d(this),c=d.effects.setMode(b,a.options.mode||"show");times=(a.options.times||5)*2-1;duration=a.duration?a.duration/2:d.fx.speeds._default/2;isVisible=b.is(":visible");animateTo=0;if(!isVisible){b.css("opacity",0).show();animateTo=1}if(c=="hide"&&isVisible||c=="show"&&!isVisible)times--;for(c=0;c<times;c++){b.animate({opacity:animateTo},duration,a.options.easing);animateTo=(animateTo+1)%2}b.animate({opacity:animateTo},duration,
a.options.easing,function(){animateTo==0&&b.hide();a.callback&&a.callback.apply(this,arguments)});b.queue("fx",function(){b.dequeue()}).dequeue()})}})(jQuery);
;/*
 * jQuery UI Effects Scale 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Scale
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(c){c.effects.puff=function(b){return this.queue(function(){var a=c(this),e=c.effects.setMode(a,b.options.mode||"hide"),g=parseInt(b.options.percent,10)||150,h=g/100,i={height:a.height(),width:a.width()};c.extend(b.options,{fade:true,mode:e,percent:e=="hide"?g:100,from:e=="hide"?i:{height:i.height*h,width:i.width*h}});a.effect("scale",b.options,b.duration,b.callback);a.dequeue()})};c.effects.scale=function(b){return this.queue(function(){var a=c(this),e=c.extend(true,{},b.options),g=c.effects.setMode(a,
b.options.mode||"effect"),h=parseInt(b.options.percent,10)||(parseInt(b.options.percent,10)==0?0:g=="hide"?0:100),i=b.options.direction||"both",f=b.options.origin;if(g!="effect"){e.origin=f||["middle","center"];e.restore=true}f={height:a.height(),width:a.width()};a.from=b.options.from||(g=="show"?{height:0,width:0}:f);h={y:i!="horizontal"?h/100:1,x:i!="vertical"?h/100:1};a.to={height:f.height*h.y,width:f.width*h.x};if(b.options.fade){if(g=="show"){a.from.opacity=0;a.to.opacity=1}if(g=="hide"){a.from.opacity=
1;a.to.opacity=0}}e.from=a.from;e.to=a.to;e.mode=g;a.effect("size",e,b.duration,b.callback);a.dequeue()})};c.effects.size=function(b){return this.queue(function(){var a=c(this),e=["position","top","bottom","left","right","width","height","overflow","opacity"],g=["position","top","bottom","left","right","overflow","opacity"],h=["width","height","overflow"],i=["fontSize"],f=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],k=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],
p=c.effects.setMode(a,b.options.mode||"effect"),n=b.options.restore||false,m=b.options.scale||"both",l=b.options.origin,j={height:a.height(),width:a.width()};a.from=b.options.from||j;a.to=b.options.to||j;if(l){l=c.effects.getBaseline(l,j);a.from.top=(j.height-a.from.height)*l.y;a.from.left=(j.width-a.from.width)*l.x;a.to.top=(j.height-a.to.height)*l.y;a.to.left=(j.width-a.to.width)*l.x}var d={from:{y:a.from.height/j.height,x:a.from.width/j.width},to:{y:a.to.height/j.height,x:a.to.width/j.width}};
if(m=="box"||m=="both"){if(d.from.y!=d.to.y){e=e.concat(f);a.from=c.effects.setTransition(a,f,d.from.y,a.from);a.to=c.effects.setTransition(a,f,d.to.y,a.to)}if(d.from.x!=d.to.x){e=e.concat(k);a.from=c.effects.setTransition(a,k,d.from.x,a.from);a.to=c.effects.setTransition(a,k,d.to.x,a.to)}}if(m=="content"||m=="both")if(d.from.y!=d.to.y){e=e.concat(i);a.from=c.effects.setTransition(a,i,d.from.y,a.from);a.to=c.effects.setTransition(a,i,d.to.y,a.to)}c.effects.save(a,n?e:g);a.show();c.effects.createWrapper(a);
a.css("overflow","hidden").css(a.from);if(m=="content"||m=="both"){f=f.concat(["marginTop","marginBottom"]).concat(i);k=k.concat(["marginLeft","marginRight"]);h=e.concat(f).concat(k);a.find("*[width]").each(function(){child=c(this);n&&c.effects.save(child,h);var o={height:child.height(),width:child.width()};child.from={height:o.height*d.from.y,width:o.width*d.from.x};child.to={height:o.height*d.to.y,width:o.width*d.to.x};if(d.from.y!=d.to.y){child.from=c.effects.setTransition(child,f,d.from.y,child.from);
child.to=c.effects.setTransition(child,f,d.to.y,child.to)}if(d.from.x!=d.to.x){child.from=c.effects.setTransition(child,k,d.from.x,child.from);child.to=c.effects.setTransition(child,k,d.to.x,child.to)}child.css(child.from);child.animate(child.to,b.duration,b.options.easing,function(){n&&c.effects.restore(child,h)})})}a.animate(a.to,{queue:false,duration:b.duration,easing:b.options.easing,complete:function(){a.to.opacity===0&&a.css("opacity",a.from.opacity);p=="hide"&&a.hide();c.effects.restore(a,
n?e:g);c.effects.removeWrapper(a);b.callback&&b.callback.apply(this,arguments);a.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Shake 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Shake
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(d){d.effects.shake=function(a){return this.queue(function(){var b=d(this),j=["position","top","bottom","left","right"];d.effects.setMode(b,a.options.mode||"effect");var c=a.options.direction||"left",e=a.options.distance||20,l=a.options.times||3,f=a.duration||a.options.duration||140;d.effects.save(b,j);b.show();d.effects.createWrapper(b);var g=c=="up"||c=="down"?"top":"left",h=c=="up"||c=="left"?"pos":"neg";c={};var i={},k={};c[g]=(h=="pos"?"-=":"+=")+e;i[g]=(h=="pos"?"+=":"-=")+e*2;k[g]=
(h=="pos"?"-=":"+=")+e*2;b.animate(c,f,a.options.easing);for(e=1;e<l;e++)b.animate(i,f,a.options.easing).animate(k,f,a.options.easing);b.animate(i,f,a.options.easing).animate(c,f/2,a.options.easing,function(){d.effects.restore(b,j);d.effects.removeWrapper(b);a.callback&&a.callback.apply(this,arguments)});b.queue("fx",function(){b.dequeue()});b.dequeue()})}})(jQuery);
;/*
 * jQuery UI Effects Slide 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Slide
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(c){c.effects.slide=function(d){return this.queue(function(){var a=c(this),h=["position","top","bottom","left","right"],f=c.effects.setMode(a,d.options.mode||"show"),b=d.options.direction||"left";c.effects.save(a,h);a.show();c.effects.createWrapper(a).css({overflow:"hidden"});var g=b=="up"||b=="down"?"top":"left";b=b=="up"||b=="left"?"pos":"neg";var e=d.options.distance||(g=="top"?a.outerHeight({margin:true}):a.outerWidth({margin:true}));if(f=="show")a.css(g,b=="pos"?isNaN(e)?"-"+e:-e:e);
var i={};i[g]=(f=="show"?b=="pos"?"+=":"-=":b=="pos"?"-=":"+=")+e;a.animate(i,{queue:false,duration:d.duration,easing:d.options.easing,complete:function(){f=="hide"&&a.hide();c.effects.restore(a,h);c.effects.removeWrapper(a);d.callback&&d.callback.apply(this,arguments);a.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Transfer 1.8.9
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Transfer
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(e){e.effects.transfer=function(a){return this.queue(function(){var b=e(this),c=e(a.options.to),d=c.offset();c={top:d.top,left:d.left,height:c.innerHeight(),width:c.innerWidth()};d=b.offset();var f=e('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(a.options.className).css({top:d.top,left:d.left,height:b.innerHeight(),width:b.innerWidth(),position:"absolute"}).animate(c,a.duration,a.options.easing,function(){f.remove();a.callback&&a.callback.apply(b[0],arguments);
b.dequeue()})})}})(jQuery);
;

Textify = {
        this_many_words: function(s,count,symbol) {  
    symbol = (symbol || "&hellip;")
    if (s == null || !s.length) return ''
    if (s.split(' ').length <= count) return s 
    return s.split(' ').slice(0,count).join(' ') + symbol
  },
  
  short_enough: function(s,count) {
    if (count) {s = Textify.this_many_words(s,count)}
    s = s.replace(/[^ ]{40,}/,'[edited]')
    return s
  },

  adjective_for: function(word) {
    return (word.match(/^[aeiouAEIOU]/) ? "an" : "a");
  },
  
  /**
   * Truncate and add elipses if string exceeds a certain character length
   */
  elide_after: function(s, count, symbol) {
    s = (s || "");
                symbol = (symbol == null ? "&hellip;" : symbol);
    if (s.length > count) {
      return s.substr(0, count-1) + symbol;
    } else {
      return s;
    }
  },

        elide_during: function(s, max, symbol) {
    s = (s || "");
                symbol = (symbol == null ? "&hellip;" : symbol);
    if (s.length > max) {
                        var diff = s.length - max;
                        var start_gap = parseInt((s.length / 2) - (diff / 2));
                        var end_gap = start_gap + diff;
      return s.substr(0, start_gap) + symbol + s.substr(end_gap, s.length-1);
    } else {
      return s;
    }
        },

        elide_during_long_stuff: function(s, max, symbol) {
    s = (s || "");
          var matches = s.match(/[^ ]{10,}/g)
          jq.each(matches||[], function(){
            s = s.replace(this, Textify.elide_during(this, max, symbol||'&hellip;'))
          })
          return s
        }

}

Colorify = {

    decimal_to_color: function(d) {
      var hex = Number(d).toString(16);
      hex = "000000".substr(0, 6 - hex.length) + hex;
      return '#'+hex;
    }

};


var cache = {};
tmpl = function tmpl(str, data) {
  // Figure out if we're getting a template, or if we need to
  // load the template - and be sure to cache the result.
  var fn = !/\W/.test(str) ?
  cache[str] = cache[str] ||
  tmpl(document.getElementById(str).innerHTML) :

  // Generate a reusable function that will serve as a template
  // generator (and which will be cached).
  new Function("obj",
    "var p=[],print=function(){p.push.apply(p,arguments);};" +

    // Introduce the data as local variables using with(){}
    "with(obj){p.push('" +

    // Convert the template into pure JavaScript
    str.replace(/[\r\t\n]/g, " ")
     .replace(/'(?=[^%]*%>)/g,"\t")
     .split("'").join("\\'")
     .split("\t").join("'")
     .replace(/<%=(.+?)%>/g, "',$1,'")
     .split("<%").join("');")
     .split("%>").join("p.push('")
     + "');}return p.join('');");

    // Provide some basic currying to the user
    return data ? fn(data) : fn;
};


if(typeof(F1)=='undefined') {
  /** primary global object */
  F1 = {}
}
(function(){
    
  /**
    Poller object will poll all layer ids
    if an overlay is pending and has any errors/messages 
    the supplied callback will be called
    options: 
        overlays: (required) array of overlay objects with IDs and GUIDs (each overlay in the map and guid for the layer palette)
        req_dist: (optional) int number of milliseconds between polls
            host: (optional) host to request overlay info from
        ** Using jq(document).trigger('overlay_state_change')
    @class global poller functions to check state of overlays
    @param {Object} options - an options object with overlays, req_dist, and host
  */ 
  F1.Poller = function(options) { //constructor
    this.options = options;    
    this.map_el = jq('#' + this.options.dom_id);
    F1.Poller.instances[options.id] = this;
    F1.Poller.instances[options.id].init();
  }
  
  F1.Poller.instances = {}
  F1.Poller.prototype = {
    
    init: function(){
      this.req_dist = this.options.req_dist || 5000 // 5 seconds
      this.host     = this.options.host || F1.host || ''
      this.poll_url = this.host + '/overlays/poll'
      this.interval = null
      this.states = {};
    },
    
    /** 
      stop all polling requests
    */
    stop: function(){
      window.clearInterval(this.interval)
      this.interval = null
    },

    /** 
      start polling on all unpolled ids
    */
    start: function(){
      var self = this
      
      if (this.interval === null){
        this.request();
        this.interval = window.setInterval(function(){return self.request.call(self)}, this.req_dist);
      }
    },

    /**
      add a new layer to be polled
      @param {Object} layer - a layer object to be polled
    */
    add: function(layer) {
      if (this.states[layer.id]) {
        this.map_el.trigger('onLayerStateChange', { layer: layer, message: this.states[layer.id] })
      }
    },

    /**
      updates the poller with a new ID and starts the poller again
      poller will run until the new id returns with a state complete
      @param {Object} layer - a layer object to be polled
    */
    update: function(layers){
      var self = this;
      if (!this.Overlays) this._get_overlays()
      jq.each(layers, function(i, layer) {
        self.Overlays[layer.guid] = {
          id: layer.id,
          poll: true,
          guid: layer.guid
        }
        if (self.states[layer.id]) {
          self.map_el.trigger('onLayerStateChange', { layer: layer, message: self.states[layer.id] })
        }
      });
      this.start()
    },
  
    /** 
      makes the actual polling request
    */ 
    request: function(){
      var self = this
      var messages = [];
      var req_ids = this.pollOverlays()
      if (req_ids.length){
        jq.getJSON(this.poll_url + '?ids='+req_ids.join(',')+'&callback=?', function(result){
          // expect an array of obj w/states & errors 
          for (var i in result) {
            self._trigger_state_change(result[i]);
          }
        })
      } else {
        self.stop()
      }
    },

    /**
      triggers a state change on a poller overlay
      @param {Object} result - a result object to be returne by the poller with stats and messages and an id
    */
    _trigger_state_change: function(result) {
      var self = this;
      jq.each(self.Overlays, function(guid, overlay) {
        if (overlay.id == result.id) {

          /*
          if (self.states[overlay.id] && self.states[overlay.id]['state'] && self.states[overlay.id].state == result.state)
            return;
            */
          if (overlay && overlay.state && overlay.state == result.state)
            return;
          
          if (self.Overlays[overlay.guid]) {
            //var guid = self.Overlays[overlay.guid].guid
            var message;

            if (result.state == 'complete'){ 
              self.Overlays[overlay.guid].poll = false
              delete self.Overlays[overlay.guid] // remove the overlay 
              message  = {type:'state_change', id: overlay.id, guid: guid, state: result.state}
              if (result.errors) message.error = result.errors
            } else if (result.state != 'complete' && result.errors){
              if (result.state == 'unknown') self.Overlays[overlay.guid].poll = false
              message = {type:'error', id: overlay.id, state: result.state, guid:guid, errors: result.errors}
            } else if (result.state != "complete") {
              if (result.state == 'unknown') self.Overlays[overlay.guid].poll = false
              message = {type:'warning', id: result.id, state: result.state, guid: guid }
            }
            if (message) {
              self.states[overlay.id] = message;
              self.map_el.trigger('onLayerStateChange', { layer: { guid: guid }, message: message })
            }
            if (self.Overlays[overlay.guid])
              self.Overlays[overlay.guid].state = result.state;
          }
        }
      });

    },

    /**
      returns an array of ids to be polled
      where "poll == true"
      @type {array} an array of overlay to be polled on the next request
    */
    pollOverlays: function(){
      if (!this.Overlays) this._get_overlays() 
      var poll_overlays = [] 
      jq.each(this.Overlays, function(guid, overlay) {
        if (overlay.poll && jq.inArray(overlay.id, poll_overlays) == -1){ //.indexOf(overlay.id) < 0) {
          poll_overlays.push(overlay.id);
        }
      });
      return poll_overlays
    },

    /**
      builds an overlays object to control what layers have been polled
      basically its just internal memory so the poller know what's already done
    */
    _get_overlays: function(){
      var self = this
      if(typeof(this.Overlays)=='undefined') this.Overlays = {}
      jq.each(this.options.overlays, function() {
        self.Overlays[this.guid] = { 
          id: this.id,
          guid:this.guid,
          poll: true 
        }   
      })
    }

  }
})();  // preserving the global namespace




jq.widget("ui.f1_panel", {
  
  options: {
    margin_bottom: 20
  },
  
  // panel -> palette (header+container) -> pane
  _init: function() {
    var self = this, el = self.element
    
    jq('.palette .header', el).click(function(){
      var from = jq('.palette .container:visible', el)
      var to = jq(this).closest('.palette').children('.container')
      from.hide('blind')
      to.show('blind')
    })

    self._wire();
    self.resize()
  },

  _wire: function() {
    var self = this;
    jq('.minimized_header', self.element).live('click', function(e) {
      jq('.hide_icon', self.element).show();
      jq('.minimized_header', self.element).hide();
      jq('.palette', self.element).show();
      jq(self.element).trigger('on_show');
    });
    jq('.hide_icon', self.element).live('click', function(e) {
      jq('.hide_icon', self.element).hide();
      jq('.minimized_header', self.element).show();
      jq('.palette', self.element).hide();
      jq(self.element).trigger('on_hide');
    });
  },

  hide: function() {
    if (jq(this.element).hasClass('left')) {
      this.options.map.setMapStyle({ zoom: { offset: { x:10, y:27 }}})
    }
    jq(this.element).hide();
  },

  show: function() {
    if (jq(this.element).hasClass('left')) {
      var palette_width = jq('.left .palette').width();
      this.options.map.setMapStyle({ zoom: { offset: { x:palette_width + 20, y:27 } } })
    }
    jq(this.element).show();
  },
  

  switch_to: function(palette) {
    this.show();
    var self = this;
    var from = jq('.palette .container:visible', self.element)
    var to = jq('.'+palette+'_palette.palette', self.element).children('.container')
    //log('switching to', palette) 
    if (from[0] != to[0]) {
      from.hide('blind')
      to.show('blind')
    }
  },
  
  // set the container max-height based on how much room it has
  // TODO: create a way to have flexible scrolly zones and nonflexible zones within a container
  resize: function() {
    var self = this, el = self.element
    
    var window_height = jq(window).height()
    var top = jq(el).offset().top
    var header_heights = 0
    jq.each(jq('.header', el), function(){
      header_heights += jq(this).height()
    })

  },

  show_filter_clue: function(msg){
    if (!jq('.filter_palette_start').length){
      var clue = jq('\
        <div class="filter_palette_start raging_clue arrow_left" id="">\
          <div class="arrow"></div>\
          <div class="raging_clue_inner">\
            Start here to begin filtering your data.\
          </div>\
        </div>')
      clue.appendTo(this.element).fadeIn('slow')
    } else {
      jq('.filter_palette_start').fadeIn('slow')
    }
    setTimeout(function(){
      jq('.filter_palette_start').fadeOut('slow')
    }, 10000)
  }
  
});



// Simple "filter System" style UI for asking questions and getting answers.
// Developed for inital use in the analysis UI

(function(jq) {

    /**
      Primary Layers Palette Widget
      Controls grouping of layers for the map
    */
    jq.widget("ui.f1_layers", {
    
  		options: {
  		  //map: F1.Maker.current_map,
        edit_mode: false
  		},
				
  		_init: function() {
  		  
  		  var self = this, el = self.element
  		  
  		  //_m = F1.Maker.current_map // temporary for debugging. TODO: remove this if you see it
  		  if (self.loaded) return
        this.map = this.options.map;
        this.map_el = jq('#'+this.options.map.options.dom_id);
        this.edit_mode = this.options.edit_mode;
  		  self.loaded = true
        self._trigger("added", null, el)
        this.model = {
          layers:{},
          attrs: {}, 
          order:[]
        }
        
        // check for the #edit hash tag
        if (this.edit_mode) {
          this.enable_editing();
        } else {
          this.disable_editing();
        }
        this._wire();
        this.set_callbacks();
        this.load_ui();
        this.make_layers_sortable();
  		},

      /**
        Wires custom events for showing/hiding
      */
      _wire: function() {
        var panel = jq(this.element).parents('.panel');
        panel.bind('on_hide', function(e) {
          jq('.warning_display').hide();
        });
        panel.bind('on_show', function(e) {
          jq('.warning_display').show();
        });
      },

      /** 
        Controls showing of editing UI elements visibity in edit mode
      */
      enable_editing: function() {
        this.edit_mode = true;
        jq('.gripper:not(.basemap_layer .gripper)',this.element).fadeIn()
        jq('.basemap_layer a.change', this.element.parent()).fadeIn();
      },

      /** 
        Hide editing controls
      */
      disable_editing: function() {
        this.edit_mode = false;
        jq('.gripper',this.element).fadeOut()
        jq('.basemap_layer a.change', this.element.parent()).fadeOut();
      },


      /**
        Set up bindings to all events trigger'd by flash and JS
      */
      set_callbacks: function() {
        var self = this;
        self.map_el.bind("onMapReady", function(e, obj) { self.onMapReady(obj); });
        self.map_el.bind("onLayerInitialized", function(e, obj) { self.onLayerInitialized(obj); });
        self.map_el.bind("onLayerAdded", function(e, obj) { self.onLayerAdded(obj); });
        self.map_el.bind("onLayerLoaded", function(e, obj) { self.onLayerLoaded(obj); });
        self.map_el.bind("onLayerRendered", function(e, obj) { self.onLayerRendered(obj); });
        self.map_el.bind("onLayerRemoved", function(e, obj) { self.onLayerRemoved(obj); });
        self.map_el.bind("onLayerStyleChange", function(e, obj) { self.onLayerStyleChange(obj); });
        self.map_el.bind("onLayerTitleChange", function(e, obj) { self.onLayerTitleChange(obj); });
        self.map_el.bind("onLayerWarning", function(e, obj) { self.onLayerWarning(obj); });
        self.map_el.bind("onBaseMapChanged", function(e, obj) { self.onBaseMapChanged(obj); });
        self.map_el.bind("onLayerLoading", function(e, obj) { self.onLayerLoading(obj); });
        self.map_el.bind("onMapModeChange", function(e, obj) { self.onMapModeChange(obj); });
        self.map_el.bind("onStartingLayerLoaded", function(e, obj) { self.onStartingLayerLoaded(obj); });
        self.map_el.bind("onLayerReordered", function(e, obj) { self.on_reorder(); });
        self.map_el.bind("onLayerDynamicsChanged", function(e, obj) { self.update_dynamics(obj); });
        jq('.layers').bind('scroll', function(e) {
          jq('.layer').f1_warning_display('reorder');
        });
      },

      /**
        Called when map changes to/from edit mode
      */
      onMapModeChange: function(e) {
        if (e.mode == "edit") {
          this.enable_editing();
        } else {
          this.disable_editing();
        }
      },

      /**
        Called when map is completely loaded
      */
      onMapLoaded: function(e) {
      },

      /**
        Called when the map is ready to receive calls
        Adds the initial basemap
      */
      onMapReady: function(e) {
        this.add_basemap_layer();
      },

      /**
        Called when a layer is init'd 
      */
      onLayerInitialized: function(e) {
        this.add_layer(e.layer, true);
      },

      /**
        called while a layer is loading; update progress UI
      */
      onLayerLoading: function(e) {
        var percent = e.progress;
        var guid = e.layer.guid;
        if (this.model.layers[guid]){
          jq(this.model.layers[guid], this.map_el).f1_layer('on_progress', percent);
        }
      },

      /**
        called when a starting layer is loaded
      */
      onStartingLayerLoaded: function(e) {
        var guid = e.layer.guid;
        var layer_object = e.layer;
        if (this.model.layers[layer_object.guid])
        {
          jq(this.model.layers[layer_object.guid], this.map_el).f1_layer('open_palette', 'stylist', true);
        }
      },

      /**
        Called when a layer is added; not yet loaded;
        inits the layer UI progress  
      */
      onLayerAdded: function(e) {
        var layer_object = e.layer;
        if (this.model.layers[layer_object.guid])
        {
          var layer = this.map.getLayer(layer_object.guid)
          jq(this.model.layers[layer_object.guid],this.map_el).f1_layer('on_added', layer);
          this.on_reorder();
        } else {
          this.add_layer(layer_object, false);
          this.on_reorder();
        }
      },

      /**
        Called when layer is removed 
      */
      onLayerRemoved: function(e) {
        var layer_object = e.layer;
        if (this.model.layers[layer_object.guid])
        {
          jq(this.model.layers[layer_object.guid], this.map_el).f1_layer('remove');
          jq(this.model.layers[layer_object.guid], this.map_el).fadeOut('slow', function() { jq(this).remove() });
        }
        jq('.f1_panel').f1_panel('hide');
        this.on_reorder();
      },

      /**
        Called when a layer is fully loaded into flash
        calls the on_loaded function in a layer
      */
      onLayerLoaded: function(e) {
        var layer_object = e.layer;
        if (this.model.layers[layer_object.guid])
        {
          try { 
            var layer = this.map.getLayer(layer_object.guid);
          } catch(e){
            var layer = this.map._layers(layer_object.guid);
          }
          jq(this.model.layers[layer_object.guid], this.map_el).f1_layer('on_loaded', layer);
        }
      },

      onLayerRendered: function(e){
        jq('#layer_'+e.layer.guid, this.map_el).f1_layer('on_rendered');
      },

      onLayerTitleChange: function(e) {
        var layer_object = e.layer;
        if (this.model.layers[layer_object.guid])
        {
          var meth = "f1_" +layer_object.type+ "_layer"
          meth = [jq.fn[meth] ?  meth : "f1_layer" ]  // pick a polymorphed layer if possible
          jq(this.model.layers[layer_object.guid], this.map_el)[meth]('retitle', layer_object);
        }
      },

      onLayerStyleChange: function(e) {

        var layer_object = e.layer;
        if (this.model.layers[layer_object.guid])
        {
          var layer = this.map.getLayer(layer_object.guid);
          jq(this.model.layers[layer_object.guid], this.map_el).f1_layer('refresh', layer);
        }
      },

      onLayerWarning: function(e) {
        if (this.model.layers[e.layer.guid])
        {
          jq(this.model.layers[e.layer.guid], this.map_el).f1_layer('show_warning', e.message, e.processing);
        }

      },

      onLayerProgress: function(e) {
        var percent = e.percent;
        var guid = e.guid;
        if (this.model.layers[guid]);
          jq(this.model.layers[guid], this.map_el).f1_layer('on_progress', percent);
      },

      onBaseMapChanged: function(e) {
        var self = this;
        jq(".basemap_layer").f1_basemap_layer('refresh',e);
      },

      
      update_dynamics: function(e){
        var guid = e.guid;
        if (this.model.layers[guid]) jq(this.model.layers[guid]).f1_layer('wire_dynamics', this.map.getLayer(guid));
      },
    

      global_callback : function(name) {
        var self = this
        var signature = "__" + (new Date()).getTime().toString(16) + "_"
        var fun = function(){this[name](arguments)}
        window[signature+name] = function(){return fun.apply(self,arguments)}
        return signature+name
      },


  		// Get the attributes from flash
  		// looks like: {0: [{data_type:"decimal"},{...}], 1: [...]} where 0 and 1 are layer_ids
  		load_attributes: function() {
  		  return this.parseJSON(unescape(this.map.swf.getAllAttributes()))
  		},

      add_basemap_layer: function() {
        var self = this;
        try {
          var basemap = this.map.getBasemap();
        } catch(e){
          var basemap = null;
        }
        if (basemap){
  		    basemap.title = this.map.map_json.basemap
  		    //basemap.title = basemap.name
  		    basemap.type = 'basemap'
  		    basemap.visible = true
  		    jq("<li class='layer basemap_layer noselect f1'></li>")
  		      .f1_basemap_layer({
              map: self.map,
              index: -1,
              layers: self,
              data: basemap
            }) // the first layer is the basemap
  		      .appendTo(jq('.layer_list', self.element.siblings('.basemaps')))
            self.map_el.trigger('on_wms_basemap_change');
         // self.set_wms_basemap_layers();
        }
      },

      add_layer: function(layer_object, waiting) {
        var self = this;
        var guid = layer_object.guid;
        if ((layer_object.type == "FinderData" && layer_object.url_type == "tile") || (layer_object.data_type != undefined && layer_object.data_type == "Tiles"))
          layer_object.type = "tile";
        self.model.order.push(guid);
 		    var layer_options = {
            map: self.map,
            layers: self,
            data: layer_object,
            filters_el: self.options.filters_el,
            show_waiting: waiting,
            show_styles: layer_object.show_styles,
            can_analyze: this.options.can_analyze,
            can_analyze_right_now: this.options.can_analyze_right_now,            
            onLayerRemoved: function(){
            }
          };
        if (layer_object.dynspagg_level) layer_options.dynspagg_level = layer_object.dynspagg_level;
        // create a layer widget. Use f1_something_layer if it exists, or use f1_layer if not.
        var meth = "f1_" +layer_object.type+ "_layer"
        var layer = jq("<li id='layer_"+guid+"' class='layer noselect f1 on'></li>").f1_layer(layer_options)
          .prependTo(jq('.layer_list', self.element))
          .addClass(layer_object.type + '_layer')
        
        if (self.map._layers[guid] != undefined && self.map._layers[guid].visible == false) {
          jq(layer).removeClass('on');
        }
        
        //jq('#f1_legend').f1_legend('load', layer_object);
        self.model.layers[guid] = layer;
        //self.on_reorder();
      },

      refresh_layer: function(layer_id) {
        var self = this;
        var layer_object = this.map.getLayer(layer_id);
        var guid = layer_object.guid;
        var waiting = true;
        if ((layer_object.type == "FinderData" && layer_object.url_type == "tile") || (layer_object['data_type'] && layer_object.data_type == "Tiles"))
          layer_object.type = "tile";
        self.model.order.push(guid);
 		    var layer_options = {
            map: self.map,
            layers: self,
            data: layer_object,
            filters_el: self.options.filters_el,
            layers: self,
            show_waiting: waiting,
            show_styles: layer_object.show_styles,
            onLayerRemoved: function(){
              //self.refresh_layers()
            }
          };
        
        // create a layer widget. Use f1_something_layer if it exists, or use f1_layer if not.
        var meth = "f1_" +layer_object.type+ "_layer"
        var layer = jq("<li id='layer_"+guid+"' class='layer noselect f1'></li>")
        [jq.fn[meth] ?  meth : "f1_layer" ](layer_options)  // pick a polymorphed layer if possible
          .addClass(layer_object.type + '_layer')
        
        self.model.layers[guid].replaceWith(layer);
        self.model.layers[guid] = layer;
        self.on_reorder();
      },

  		refresh_layers: function() {
  		  var self = this
        self.model.layers = [];
  		  var layer_attrs = this.load_attributes()

  		  jq('.layer_list', this.element).empty()
  		  
  		  var basemap = this.map.getBasemap()
  		  basemap.title = basemap.name
  		  basemap.type = 'basemap'
  		  basemap.visible = true
  		  jq("<li class='layer basemap_layer noselect f1'></li>")
  		    .f1_basemap_layer({
  		      map: self.map,
  		      index: -1,
  		      data: basemap
  		    }) // the first layer is the basemap
  		    .prependTo('.layer_list', this.element)
  		  jq.each(this.map.getLayers(), function(index, layer) {
  		    var layer_options = {
            map: self.map,
            data: layer,
            index: index,
            layers: self,
            filters_el: self.options.filters_el,
            onLayerRemoved: function(){
              self.refresh_layers()
            }
          }
          
          // create a layer widget. Use f1_something_layer if it exists, or use f1_layer if not.
          var meth = "f1_" +layer.type+ "_layer"
  		    var layer = jq("<li class='layer noselect f1'></li>")
            [jq.fn[meth] ? meth : "f1_layer" ](layer_options)  // pick a polymorphed layer if possible
            .prependTo('.layer_list', self.element)
            .addClass(layer.type + '_layer')
            .addClass('layer_'+ index)
          self.model.layers.push(layer);
  		  })
  		},

      on_reorder: function() {
        var self = this;
        setTimeout(function() {
          try {
            var layers = self.map.getLayers();
          } catch(e){
            var layers = self.map.layers;
          }
          if (layers.length){ 
            layers.sort(function(a1,b1){
              var a = a1.order;
              var b = b1.order;
              if (a > b) return 1;
              if (a < b) return -1;
              return 0;
            })
            jq.each(layers, function(i, layer) {
              if (self.map.options.embed) {
                jq('#layer_'+layer.guid, self.map_el).prependTo(jq('.layers .layer_list', self.map_el));
              } else {
                jq('#layer_'+layer.guid).prependTo('.layers .layer_list');
              }
            });
            jq('.layer', self.element).f1_warning_display('reorder');
            jq('.layer', self.element).f1_layer('refresh');
          }
        }, 0);
      },

      reorder: function() {
        // Grab the layer ids in order
        var order = jq('li.layer', self.element).toArray().reverse().slice(1).map(function(l,i) { return l.id.substr(6) });
        this.map.setLayerOrder(order);
        jq('.layer', self.element).f1_warning_display('reorder');
        jq('.layer', self.element).f1_layer('refresh');
      },
  		
  		set_active_layer: function(guid) {
  		  //if (this.active_layer == guid) {
  		  //   return // prevents infinite event loops
  		  //} //kills active layer change in IE
  		  this.active_layer = guid
  		  this.active_geom_types = this.map.getGeometries(guid)
  		  this.map_el.trigger('on_active_layer_change', { 
          guid:guid, 
          type:(this.active_geom_types.length > 1) ? 'multi' : this.active_geom_types[0]}) // subpub pattern, style palette relies on this
  		  jq('li.layer').removeClass('selected')
        jq('#layer_'+guid).addClass('selected')
  		},
  		
  		get_active_layer: function() {
  		  return this.active_layer || null
  		},

  		make_layers_sortable: function() {
        var self = this;
  		  jq('.layer_list', this.element).sortable({
          handle : '.gripper',
          items: 'li:not(.basemap_layer)',
          opacity: 0.75,
          start  : function() {
            jq('.layer_menu').hide()
          },
          update : function(event, ui) { 
            self.reorder(); 
            }
        })
  		},
  		
  		
  		load_ui: function() {
  		  var ui = '<ul class="layer_list f1"></ul>'
  		  this.element.append(ui)
        var basemap_ui = '<ul class="layer_list f1"></ul>'
        jq('.basemaps', this.element.parent()).append(basemap_ui);
  		},
  		
  		parseJSON: function(s) {
  		  return typeof JSON != 'undefined' ? JSON.parse(s) : jq.parseJSON(s)
  		}
  		
  		/*'*': function() { // returns the model for debugging
  		  return this.model
  		}*/
    
          
    })
		
		
		
    // ---------------------------------------------------------------------------------------- F1 Layer
    jq.widget("ui.f1_layer", {
      
      _init: function() {
        var self = this;
        this.map = this.options.map
        this.map_el = jq('#'+this.options.map.options.dom_id);
        this.type = (this.options.data.type || this.options.data.dataType || this.options.data.data_type)
        this.guid = this.options.data.guid;
        this.can_animate = false;
        this.loaded = false;
        this.expression_queue = [];
        this.filter_list = [];
        
        this.first_draw();
      
        if (this._is_dynspagg()){
          this.current_zoom = this.map.getZoom();
          this.levels = this.options.data.levels;
          this.dynspagg_features = {};
          this.dynspagg_id_list = {};
          this.wire_dynspagg();
        }
    
        this.wire();

        if (this.is_finder()) {
          this.finder_id = this.options.data.source.replace(/^finder\:/, '') || null;
          if (this.options.show_waiting) {
            this.start_waiting();
          } else {
            //this.start_loading();
          }
        }
        if (this.options.show_styles) this.show_styles = this.options.show_styles;
        this.has_histogram = false;
        if (this.options.data.styles && this.options.data.styles.type && (this.options.data.styles.type == "GRADUATED" || this.options.data.styles.type == "CHOROPLETH")) {
          this.has_histogram = true;
        }
        this.element.css({overflow: 'hidden'})
        this.warnings = [];
      },

      page_limit: function(limit){
        if (limit) this.feature_page_limit = limit;
        return this.feature_page_limit;
      },

      get_options: function() {
        return this.options;
      },


      first_draw: function() {
        jq('<div class="layer_content f1"></div>').appendTo(this.element);
        this.draw();
        this.create_warning_display();
      },


      remove: function() {
        jq(this.element).f1_warning_display('remove');
      },

  		
      draw: function() {
        var self = this;
        var ui = tmpl("\
          <div class='layer_icon f1'></div>\
  		    <h3 class='title'><%= Textify.this_many_words(Textify.elide_during_long_stuff(title, 20, '&hellip;'), 10) %></h3>\
  		    <div class='visible f1' title='Click to hide'/>\
  		    <div class='gripper f1' title='Drag to reorder'/>\
  		    <div class='subtitle f1'/>\
  		    <div class='layer_menu f1' style='display:none'/>\
  		    <div class='nfeatures f1' style='display:none' title='Visible features'/>\
          <div class='warning_holder f1' style='position: absolute;'></div>\
  		  ")


        if (this.options.data.title == undefined || this.options.data.title == "") {
          this.options.data.title = "New Layer";
        }

        if (jq('.nfeatures', this.element).get().length){
          var el = jq('.nfeatures', this.element);
          var nfeature_vis = el.is(':visible');
          var nfeature_html = el.html();
        }

        var content = ui(this.options.data);
  		  
  		  jq('.layer_content', this.element)
  		    .html( ui(this.options.data) );

        // hide the element if the new layer is dynspagg sub level (tiles or wms)
        if (this.options.dynspagg_level != undefined) this.element.hide();

        if (nfeature_html) {
          var feat_el = jq('.nfeatures', this.element);
          feat_el.html(nfeature_html);
          (nfeature_vis) ? feat_el.show() : feat_el.hide();
        }
        
  		  if (this.element.hasClass('on')) {
  		    this.element.addClass( this.options.data.visible ? 'on' : '' );
        }
        
        this.append_styles();
        this.create_layer_menu();
        if (self.options.layers.edit_mode) {
          jq('.gripper:not(.basemap_layer .gripper)',self.element).show()
        }

      },

      wire: function() {
        this.wire_visibilty();
      },


      is_finder: function() {
        if (this.options.data && this.options.data.source && this.options.data.source.match(/^finder\:/) && this.type != "tile" && this.options.data.type != "tile")
        {
          return true;
        } else {
          return false;
        }
      },


      start_waiting: function(state)
      {
        //jq('h3', this.element).css('background', 'url(' + F1.host + '"/images/ajax_loader_soft.gif") no-repeat right center');
        jq('h4', this.element).html("Loading layer");
        jq('div.visible', this.element).hide();
      },


      stop_waiting: function()
      {
        jq("h3", this.element).css('background', '');
      },


      show_loading_bar: function() {
        this.element.css('background-position', '-224px center');
        this.element.animate({'background-position': 0}, 4000 );
      },


      on_progress: function(percent) {
        this.element.stop();
        percent = 100 - percent;
        percent = 74 + Math.round((percent / 100) * 150)
        var position = "-" + percent + "px center";
        this.element.css('background-position', position);
      },

      on_rendered: function(){
        this.update_feature_counts();
        this.element.css('background-position', '-224px center');
        if (this.loaded == false) {
          this.finish_loading();
        }
      },

      on_loaded: function(data) {
        var self = this;
        this.options.data = data;
        this.element.css('background-position', '-224px center');
          // register this layer as a socket layer 
          if (this.map.options.enable_sockets && this.options.data.stream_id != undefined){
            jq(document).f1_map_handler('add_socket_layer', this.options.data, this.guid);
          }
          if (this.levels) {
            this.load_dynspagg(true);
          } else if (this.exceeds_limit()) {
            if (this.options.data.dynamic !== undefined) {
              this.wire_dynamics();
            } else {
              this.options.show_styles = false;
              this.element.css('background-position', '-112px');
              this.load_feature_page(1, true, true);
            }
          } else if (this.options.data.dynamic !== undefined) {
            this.wire_dynamics();
          } else {
            this.finish_loading();
          }
      },


      finish_loading: function(){
        this.loaded = true;

        this.wire_layer_menu();       
 
        this.can_animate = this._can_animate(this.guid);
        this.element.stop();
        this.element.css('background-position', '-224px center');

        if (this.options.show_styles) { 
          this.open_palette('stylist',true);
        } else if (this.options.show_filters) {
          this.open_filters(true);
        }

        if (!this.map.options.embed && F1.Maker.current_map.state == 'new'){
          jq(document).f1_map_handler('set_title',this.options.data.title);
        }

        // adds the info win filter if it exists
        if (this.options.data.info_window_filter) this.map.setLayerInfoWindow(this.guid, this.options.data.info_window_filter);  
        this.refresh();
      },


      retitle: function(layer_obj) {
        jq('h3.title', this.element).html(Textify.elide_during_long_stuff(layer_obj.title, 20, "&hellip;"));
        if (layer_obj.subtitle && layer_obj.subtitle.length > 0) {
          jq('div.subtitle', this.element).html(Textify.elide_during_long_stuff(layer_obj.subtitle, 20, "&hellip;")).show();
        } else {
          jq('div.subtitle', this.element).hide();
        }
        // update the style palette name
        jq('.active_style_layername').html(Textify.elide_after(layer_obj.title, 25)) 
      },


      on_error: function(errors) {
      },


      show_warning: function(message, processing) {
        if (!processing) this.stop_waiting();
        jq(this.element).f1_warning_display('add_warning', message);
      },


      rename_show: function() {
        var self = this;
        var dialog = jq('<div><form class="layer_rename_form">\
          <label>Title</label><br />\
          <input type="text" name="title" value="'+(this.options.data.title || '')+'" class="edit_text" /><br />\
          <label>Subtitle</label><br />\
          <input type="text" name="subtitle" value="'+(this.options.data.subtitle || '')+'" class="edit_text" /><br />\
          <input type="submit" value="Save" style="display: none;" />\
          </form></div>')
          .appendTo('body')
          .dialog({
            width: 450,
            height: 'auto',
            modal: true,
            title: "Renaming layer",
            focus: function(e) {
              jq("input[name='title']", this).focus();
              jq("input[name='title']", this).select();
            },
            buttons: { 
                'Save': function(e) { 
                  jq('form', this).submit();
                } 
              }
          });
        jq('form', dialog).submit(function(e) {
          var title = jq('input[name=title]', this).val();
          var subtitle = jq('input[name=subtitle]', this).val();
          self.rename_save.apply(self, [title, subtitle]);
          dialog.dialog('close');
          dialog.remove();
          return false;
        });
      },


      rename_save: function(title, subtitle) {
        this.options.data.title = title;
        this.options.data.subtitle = subtitle;
        this.map.setLayerTitle(this.guid, title);
        this.map.setLayerSubTitle(this.guid, subtitle);

      },


      start_loading: function() {
        if (this.is_finder())
        {
         this.show_loading_bar();
        }
      },


      on_added: function(layer) {
        var data = layer;
        this.stop_waiting();
        this.options.data = data;
        this.type = data.data_type;
        this.draw();
        this.start_loading();
      },


      refresh: function(data) {
        if (data) {
          this.options.data = data;
          this.type = data.data_type;
        }
        this.draw();
        //this.append_styles();
      },

      create_warning_display: function() {
        var self = this

        jq(this.element).f1_warning_display({
          guid: this.guid
        })
      },
      
      create_layer_menu: function() {
        var self = this;
        jq(this.element).f1_layer_menu({
          wrap: "<ul class='layer_menu dark_menu'/>",
          near: this.element,//jq('h3',this.element),
          position: 'left',
          items: self.get_menu_items(self.guid),
          parent: this
        });
      },

      wire_errors: function() {
        var self = this;
        var el = this.element;
      },

      /**
       Open the styles palette & set as active layer 
       @param {Boolean} clue - open a ragin clue or not
      */
      open_filters: function(clue){
        var self = this;
        if (!jq('.f1_panel').is(':visible')){
          jq('.stylist').f1_stylist({
            map: self.map,
            filters_el: jq('#filters'),
            layers_el: jq('.layers')
          })
          //jq(document).trigger('on_active_layer_change', {   guid:self.guid,   type:self.map.getGeometries(self.guid)[0] })
        }
        self.options.filters_el.f1_filter('add_filter');
        self.options.layers.set_active_layer(self.guid);
        jq('.f1_panel').f1_panel('switch_to','filters');
        if (clue) jq('.f1_panel').f1_panel('show_filter_clue');
      },

      
      /*
        Opens palette & sets the active layer 
        @param {String} palette - the name of a palette to open
        @param {Boolean} clue - open a ragin clue or not
       */
      open_palette: function(palette, clue) {
        if (!jq('.f1_panel').is(':visible')){
          jq('.stylist').f1_stylist({
            map: this.map,
            filters_el: jq('#filters'),
            layers_el: jq('.layers')
          })
          jq('.f1_panel').f1_panel('switch_to',palette)
          if (clue) jq('.stylist').f1_stylist('show_clue')
          //jq(document).trigger('on_active_layer_change', { guid:this.guid, type:this.map.getGeometries(this.guid)[0]})
        } else {
          jq('.f1_panel').f1_panel('switch_to', palette)
        }
        this.options.layers.set_active_layer(this.guid)
      },

      /* 
       * Opens the current expert instance for analysis & refinements
       * sets the current layer as the expert select dataset (ds1)  
       */
      open_expert: function(layer_id){
        jq('#expert').dialog('open');
        F1.Expert.instances['expert'].set_field('ds1',this.finder_id);
        F1.Expert.instances['expert'].set_active_layer(layer_id);
      },


      /*
       * Load Features via ajax from the overlays endpoint
       * enforces that one ajax call at a time can be made via the ajax_request var
       * @param {String} url
       * @param {String} expression
       * @param {Function} callback for ajax response
       */
      send_ajax: function(url, cb){
        if (this.ajax_request) this.ajax_request.abort();
        this.ajax_request = jq.getJSON(url, cb); 
      },


      /**
       * Splits ands trims a string expression correctly, respects expression structure
       * @param {String} an expression string: "$[param] == 'value'"
       * @returns {Array} 
       */
      splitAndTrim: function(s){
        var arr = s.replace(/^(.*)? +(\<|\>|\=\=|\<\=|\>\=) +(.*)$/, '$1z**z$2z**z$3').split('z**z');
        var new_array = new Array();
        for (var i = 0; i < arr.length; i++) {
          if (arr[i].length > 0) {
            new_array.push(arr[i]);
          }
        }
        return new_array;
      },


      /**
       * Converts an array of expression filters into a query string
       * @params {Array} filters The array of filter expressions
       * returns {String} A query string
       */ 
      filters_to_query_string: function(filters){
        var queries = [];
        for (var n = 0; n < filters.length; n++) {
          var filterString = filters[n].expression;
          if (!filterString) continue;
          if (filterString.match(/ and /i)) {
            filters = filters.concat(filterString.split(/ and /i));
            continue;
          }
          var filter_parts = this.splitAndTrim(filterString);
          if (filter_parts.length != 3) continue;
          var variable = null;
          var value;
          var operator;
          for (var i=0; i < filter_parts.length; i++) {
            if (filter_parts[i].match(/\$\[(.*?)\]/i)){
              variable = filter_parts[i].replace(/\$\[(.*?)\]/ig, "$1");
            } else if (filter_parts[i] == "<" || filter_parts[i] == "<=") {
              operator = (variable ? "max" : "min");
            } else if (filter_parts[i] == ">" || filter_parts[i] == ">=") {
              operator = (variable ? "min" : "max");
            } else if (filter_parts[i] == "==") {
              operator = "equals";
            } else {
              value = filter_parts[i].replace(/\'|\"/g,''); //deTokenizeAndDeQuoteString(filter_parts[i]);
            }
          }
          if (variable && value && operator){
            queries.push("filter["+escape(variable)+"][]["+escape(operator)+"]="+escape(value));
          }
        }
        return queries.join("&");
      },
 
      /**
       * Get Expression Features
       * Builds a url with a filter expression, makes ajax call, loads features into the map. 
       * @param {String} the expression delimited with "|"
       * @param {String} an expression in the ruby "$param == val" syntax (for flash to save) 
       */
      get_expression_features: function(expression){
        var self = this;
        
        log('get_expression_features - tope'); 
        jq('.nfeatures', this.element).hide();
        self.map.addFeatures(self.guid, [], true);

        // addFilter to flash
        this.map.addFilter(this.guid, {expression: expression});
        // get all filters from flash
        var filters = this.map.getFilters(this.guid);
        
        // turn them into a query string 
        var querystring = this.filters_to_query_string(filters)
        // make request 
        var url = this.add_auth(F1.host + '/overlays/' + this.finder_id + '/features.json?include_geometry=1&hex_geometry=1', true);
        if (querystring) url += '&' + querystring;
        jq(this.element).f1_warning_display('remove_warning');
       
        this.send_ajax(url+'&callback=?', function(msg){
          var featuresObj = JSON.parse(msg);
          var features = featuresObj.features;
          if (features.length && features.length <= self.map.options.feature_render_limit){
            self.map.addFeatures(self.guid, features, true, false);
            self.refresh_feature_count(features.length);
          } else if (features.length > self.map.options.feature_render_limit){
            self.feature_limit_warning();
          } else {
            // zero features
            self.refresh_feature_count(0);
          }

          self.expression_queue = [];
          self.ajax_request = undefined;
          jq('#loading_filter', jq('.add_filter_link')).hide();
          jq('.add_filter', jq('.add_filter_link')).show();
        });
      },

      update_feature_counts: function(){
       var self = this;
       if ((!this.element.hasClass('basemap_layer')) && this.loaded && !this.levels) {
          try {
            var filteredCount  = this.map.getFilteredFeatureCount(this.guid);
            var visibleCount = this.map.getVisibleFeatureCount(this.guid);
            var dataFeatureCount = this.options.data.feature_count;
            var filters = this.map.getFilters(this.guid);

            if (filters && filters.length){
              try {
                var count = filteredCount;
                this.refresh_feature_count( (count || 0) );
              } catch(err) {

                jq('.nfeatures', this.element).hide();
              }
            } else if (this.exceeds_limit() && (visibleCount && dataFeatureCount && visibleCount < dataFeatureCount)){

              if (this.map.getLayerTemporalAttribute(this.guid)) {
                jq('.nfeatures', this.element).hide();
              } else {
                this.refresh_feature_count(visibleCount);
              }
               
            } else {
               if (this.map.getLayerTemporalAttribute(this.guid)) {
                 jq('.nfeatures', this.element).hide();
               }
               if (this.exceeds_limit()) jq('.nfeatures', this.element).show();
             
             if (visibleCount >= dataFeatureCount)
                jq('.nfeatures', this.element).hide();
            }
          } catch(err) {
            //swallow the error
          }
        } else {
          jq('.nfeatures', this.element).hide();
        }
      },

      /**
       * Refreshes the count of filtered features in the layers palette
       * @param {Integer} count of features to display 
       */
      refresh_feature_count: function(fcount){
        if (!fcount) fcount = this.map.getFilteredFeatureCount(this.guid);
        var el = jq('.nfeatures', this.element);
        var total = this.map.getFeatures(this.guid).length; //this.options.data.feature_count;
        //if (fcount > total) total = this.map.getFeatures(this.guid).length;
        el.html( (fcount || 0) + ' of ' + total + ' features').show();
      },


      feature_limit_warning: function(){
        if (this.ajax_request) {
          jq('#loading_filter', jq('.add_filter_link')).hide();
          jq('.add_filter', jq('.add_filter_link')).show();
          this.ajax_request.abort();
        }

        var warn = jq(this.element).f1_warning_display();
        this.map_el.trigger("onLayerWarning", [{
            layer: {guid: this.guid},
            message: F1.Errors.message_for("TOO_MANY_FEATURES"), processing: false
        }]);
        // should empty out the layer features and go get the first page again.
        this.map.addFeatures(this.guid, [], true);
        jq('.nfeatures', this.element).hide();
        //this.element.css('background-position', '-112px');
        //this.load_feature_page(1, false, false);
      },

      load_feature_page: function(page, warn, finish){
        var self = this;
        var limit = self.map.options.feature_render_limit;
        var start = (page-1) * limit; 
        var url = F1.host + '/overlays/' + this.finder_id;
          url += '/features.json?include_geometry=1&hex_geometry=1&limit=' + limit + '&start=' + (start || 0);
       
        url = this.build_page_url(url);
        jq('.nfeatures', this.element).hide();

        if (this.page_request) this.page_request.abort();
        this.page_request = this.send_ajax(url, function(features){
          self.map.addFeatures(self.guid, features.features, true, false);
          if (warn) {
            self.map_el.trigger("onLayerWarning", [{
              layer: {guid: self.guid},
              message: F1.Errors.message_for('TOO_MANY_FEATURES'), processing: false
            }]);
          }
          if (finish) { 
            self.options.show_filters = true; 
            self.finish_loading();
          }
          self.refresh_feature_count(features.length);
        });
      },


      /** 
        Builds a url for requesting a page of features.
        @param {String} url - a url to append attributes to 
        @type {String} url 
      */
      build_page_url: function(url){
        var self = this;
        var sort_attr = null;
        if (this.options.data.styles){
          if (this.options.data.styles.fill.selectedAttribute) sort_attr = this.options.data.styles.fill.selectedAttribute;
          else if (this.options.data.styles.icon.selectedAttribute) sort_attr = this.options.data.styles.icon.selectedAttribute; 
        } else {
          if (this.options.data.temporal) {
            sort_attr = this.options.data.temporal.attributes[0];
          } else { 
            var attrs = this.map.getAttributes(this.guid);
            jq.each(attrs, function(i, attr) {
              if (attr.data_type == "datetime") {
                sort_attr = attr.original_name;
              }
            });
          }
        }
        if (sort_attr) url += '&sort='+sort_attr+'&order=descending'; //append attr to URL and sort descending 
        var filters = this.map.getFilters(this.guid);
        if (filters) url += '&' + this.filters_to_query_string(filters);
        return url;
      },

      /**
        Loads initial dynamic features, Adds event bindings to pan stop and zoom; 
        reload data with layer's dyncamic object
      */
      wire_dynamics: function(layer){
        if (layer) {
          this.options.data.dynamic = (layer.dynamic) ? layer.dynamic : null;
        }
        var self = this;
        // load the first features
        if (this.options.data.dynamic) {
          var url = this.build_dynamic_url();
          log('dynamics url',url)
          this.send_ajax(url, function(data){
            self.map.addFeatures(self.options.data.guid, data.features, true, false); 
            log('got dynamics features', data);
            self.finish_loading();
          });

          var cb = function(data){
            self.map.addFeatures(self.options.data.guid, data.features, true, false);
            log('got dynamics features', data);
          } 

          this.map_el.unbind('onMapZoomed onMapPanStop').bind('onMapZoomed onMapPanStop', function(){
            var url = self.build_dynamic_url();
            log('dynamics url',url)
            self.send_ajax(url, cb);
          });
        } else {
          this.map_el.unbind('onMapZoomed onMapPanStop');
        }
      },


      /**
        builds a url based on the layer's dynamic object
      */
      build_dynamic_url: function(){
        var url = F1.host + "/overlays/" + this.finder_id + "/features.json?";
        var dynamics = this.options.data.dynamic;
        var params = [];
        if (dynamics.extent) { 
          var extent = this.map.getExtent();
          params.push("bbox="+[extent.west, extent.south, extent.east, extent.north].join(',')+'&intersect=full');
        }
        if (dynamics.filters){
          var filters = this.map.getFilters(this.options.data.guid);
          if (filters) params.push(this.filters_to_query_string(filters));
        } 
        if (dynamics.sort){
          params.push('sort='+dynamics.sort);
          if (dynamics.order) params.push('order='+dynamics.order);
        }
        if (dynamics.limit){
          if (this.exceeds_limit()){
            var limit = (this.map.options.feature_render_limit < dynamics.limit) ? this.map.options.feature_render_limit: dynamics.limit;
          }
          var start = (dynamics.page) ? ((dynamics.page-1)*limit)+1 : 1;
          if (start) params.push('start='+start);
          params.push('limit='+limit);
        } else if (this.exceeds_limit()){
          var limit = this.map.options.feature_render_limit;
          var start = (dynamics.page) ? ((dynamics.page-1)*limit)+1 : 1;
          if (start) params.push('start='+start);
          params.push('limit='+limit);
        }
        url += (params.length >= 1) ? params.join('&') : '';
        url = this.add_auth(url, true);
        return url;
      },

    /**
      Add auth params to URL
      @param {String} url
      @param {Boolean} params - whether or not the url already has params added
      @type {String}
    */
    add_auth:function(url, params){
      var options = this.map.options;
      var hash =  (Math.round(Math.random() * 100000).toString(16)) + (new Date()).getTime().toString(16);
      if (options.api_key) {
       url += (params ? '&' : '') + 'api_key='+options.api_key;
       params = true;
      }
      if (options.f1_session_id && options.f1_auth) {
        url += '&'+options.f1_session_id + '=' + options.f1_auth + '&'+hash;
      } else {
        url += (params ? '&' : '') + hash ;
      }
      return url;
    },


      /* 
       * Attaches the click and mouse events to the layer pallete menu  
       */
      wire_layer_menu: function() {
        var self = this
        var el = this.element

        jq('h3', el)
          .live('click', function(){
            if (self.options.layers.edit_mode) {
              jq(self.element).f1_layer_menu('show');
            }
          }).live('mouseover mouseout',function(event){
            if (event.type == 'mouseover' && jq(document).f1_map_handler('is_edit_mode')){
              jq('.title', el).css({'text-decoration':'underline'});
            } else {
              jq('.title', el).css({'text-decoration':'none'});
            }
          });
       
        // if you click, set the active layer
        if (self.type != "basemap") {
          jq('.layer',el).live('click', function(){
            self.options.layers.set_active_layer(self.options.data.guid)
          });
        }
      },

      /**
       * Detects if this layer is a raster dataset
       * keyed on data.type and/or url_type being Tile or WMS
       */
      _is_raster: function() {
        var is = (
          (this.options.data.type == "FinderData" && this.options.data.url_type == "tile") || 
          (this.options.data.type == "FinderData" && this.options.data.url_type == "wms") || 
          (this.options.data.type == "tile") ||
          (this.options.data['data_type'] && this.options.data.data_type == "Tiles") ||
          (this.options.data.type == 'wms')
          );
        return is;
      },

      /*
       * Checks to see if the feature_count is greater than the allowed # of features 
       */
      exceeds_limit: function(){
        try {
          if (this.options.data.feature_count != undefined && this.map.options.feature_render_limit != undefined && (this.options.data.feature_count > this.map.options.feature_render_limit)) {
            return true;
          } else {
            return false;
          }
        } catch(e){
          return false;
        }
      },      

      /**
       * Detects if this layer is an acetate layer
       */
      _is_acetate: function() {
        var layer = this.options.data;
        return (layer["source"] && layer.source.match(/acetate/));
      },

      /**
       * Detects if this layer has a dynspagg "levels" object
      */
      _is_dynspagg: function(){
        if (this.options.data.levels != undefined && !this.element.hasClass('basemap_layer')){
         return true;
        } else {
         return false;
        }
      },

      /**
        Resets the correct DynSpagg Data Source for the current zoom level
      */
      refresh_dynspagg_ds: function(){
        this.current_zoom = this.map.getZoom();
        this.dynspagg_ds = this.getCurrentLevel();
        if (!this.dynspagg_ds) this.dynspagg_ds = this.options.data;
      },

      /** 
        Retreive the current level overlay for the current
      */
      getCurrentLevel: function(){
        var zoom = this.map.getZoom();
        for (var l in this.levels){
          var level = l.split(',');
          if  (zoom >= level[0] && zoom <= level[1]) {
            var ds = this.levels[l];
          }
        }
        return (ds) ? ds : this.options.data;
      },

      /** 
        Retreive the current level overlay for the current
      */
      getCurrentLevelKey: function(){
        var zoom = this.map.getZoom();
        var key;
        for (var l in this.levels){
          var level = l.split(',');
          if  (zoom >= level[0] && zoom <= level[1]) {
            key = l;
          }
        }
        return key;
      },

      /**
       * Sets up bindings to map Zoom and Pan and routes approp. calls to the server
       */
      wire_dynspagg: function(){
        var self = this;
        self.map_el.bind('onMapPanStop', function(){
          self.refresh_dynspagg_ds();
          //log('pan dysnpagg refresh', self.dynspagg_ds)
          if (!self.dynspagg_ds.tiles) self.load_dynspagg();
        });

        self.map_el.bind('onMapZoomed', function(){
          current_ds = self.dynspagg_ds;
          if ((self.map.getZoom() < self.current_zoom && !self.dynspagg_ds.tiles) || (self.dynspagg_ds.source != self.getCurrentLevel().source)) {
            if (self.dynspagg_ds.tiles) self.map.showLayer(self.dynspagg_id_list[self.dynspagg_ds.source], false); // hide tile layers
            self.refresh_dynspagg_ds();
            self.load_dynspagg();
          }
        });
      },     
      
       /**
       * Calls the server to get the current dynspagg level datasource
       * gets the agg layer features and overrides the attributes for the layer
       */
      load_dynspagg:function(first){
        log('loading dynspagg', this.guid);
        var self = this;
        if (!this.dynspagg_ds) this.refresh_dynspagg_ds();
        //if (this.map.getLayer(this.guid).visible){
          
          if (this.dynspagg_ajax) this.dynspagg.abort();
          
          if (this.map.swf && !first) { 
            this.map.swf.showHideZoomStatus(true, this.map.getZoom(), "Loading this zoom level", 0x555555);
          }
            var extent = self.map.getExtent();
            var bbox = [extent.west, extent.south, extent.east, extent.north];
            var url = self.add_auth(F1.host + "/overlays/" + this.dynspagg_ds.source + ".json?bbox="+bbox.join(',') , true);
            url += "&intersect=full&include_attributes=1&include_features=1&include_geometry=1&hex_geometry=1&include_ids=1&callback=?";
            log('dynspagg url', url); 
            this.dynspagg_ajax = jq.getJSON(url, function(data) {
              if (data.data_type == 'Tiles' || data.data_type == 'WMS'){
                // check to see if we have the layer already in the map - local dynspagg finder ID lookup
                // if new ID add to map and add to dynspagg_id_list
                self.dynspagg_ds.tiles = true;
                self.map.addFeatures(self.guid, [], true); // remove all features
                if (self.dynspagg_id_list[self.dynspagg_ds.source]) {
                  self.map.showLayer(self.dynspagg_id_list[self.dynspagg_ds.source], true);
                } else {
                  self.dynspagg_id_list[self.dynspagg_ds.source] = self.map.addLayer({
                    source:'finder:'+data.id, 
                    dynspagg_level: { parent_guid: self.options.data.guid, level: self.getCurrentLevelKey()}
                  }); 
                }
              } else {
                if (F1.Maker.current_map.options.view == 'javascript'){
                  self.map.setLayerAttributes(self.guid, {data_attributes:data.data_attributes});
                  if (self.map._layers[self.guid]) self.map._layers[self.guid].data_attributes = data.data_attributes;
                  self.map.addFeatures(self.guid, data.features, true);
                  self.map.setLayerStyle(self.guid, self.dynspagg_ds.styles);
                } else {
                  self.map_el.one('onLayerRendered', function(){
                    if (self.map._layers[self.guid]) self.map._layers[self.guid].data_attributes = data.data_attributes;
                      self.map_el.one('onLayerRendered', function(){
                        self.map.setLayerAttributes(self.guid, {data_attributes:data.data_attributes});
                        self.map.setLayerSubTitle(self.guid, 'by '+self.dynspagg_ds.styles.fill.selectedAttribute);
                      });
                      self.map.setLayerStyle(self.guid, self.dynspagg_ds.styles);
                    });
                  setTimeout(function(){
                    self.map.addFeatures(self.guid, data.features, true);
                  }, 100);
                  //log('got data', data.features);
                  //f  = data.features;
                }
              }
              self.dynspagg_ajax = undefined;
              if (!self.loaded) self.finish_loading();
              if (self.map.swf) self.map.swf.showHideZoomStatus(false);

            }).error(function(e) {
              self.map_el.trigger("onLayerWarning", 
                [{ 
                  layer: {guid: self.guid}, 
                  message: F1.Errors.message_for(e.status), processing: false 
                }]);
            });
          //}
      },


      wire_visibilty: function() {
        var self = this
        jq('.visible', this.element)
          .live('click', function(e) {
            e.stopImmediatePropagation()
            if (jq(this).closest('li').hasClass('on')) {
              self.map.showLayer(self.guid, false)
              jq(this).closest('li').removeClass('on')
              return false;
            } else {
              self.map.showLayer(self.guid, true)
              jq(this).closest('li').addClass('on')
              return false;
            }
          })
      },
      
      
      append_styles: function() {
        var layer = this.options.data;
        if (this._is_raster() && layer.styles) layer.styles["type"] = "raster";
        
        if (!layer.styles || !layer.styles.type) return;

        if (this._is_acetate()) layer.styles.type = "acetate";
          
        var layer_type = layer.styles.type.toLowerCase();
        
        var style_ui = tmpl("\
  		    <<%= elem %> class='style clearfix <%= css_class %> f1'><div class='icon f1'></div><h4><%= title %></h4></<%= elem %>>\
  		  ")

        if (layer_type == "primitives")
        {
          if (layer["geometry_types"] && layer.geometry_types.length == 1) {
            layer_type = layer.geometry_types[0];
          } else {
            layer_type = "point"
          }
        } else if (layer_type.match(/^choropleth/)) {
          layer_type = "choropleth";
        }

        var layer_icon = style_ui({
            title: null,
            css_class: layer_type,
            elem: "div"
        });

        var attr_el = jq('.layer_icon', this.element).append(layer_icon);
        if (jq('.icon', attr_el).length > 0) {
          jq('.icon', attr_el).show();
          jq('.icon', attr_el).replaceWith( this.icons[layer_type].call( this, layer.styles ) );
        }
        
        var title = (layer.subtitle || layer.styles.fill.selectedAttribute || layer.styles.icon.selectedAttribute || "");
        //var title = layer.subtitle;
        
        if (title.length == 0) {
          jq('div.subtitle', attr_el).hide();
        } else {	
          jq('.subtitle', this.element).append('<span>'+title+'</span>').css({'padding-bottom':'3px', 'margin-top': '7px'});
        }
      },

      find_attribute: function(name){
        var attributes = this.map.getAttributes(this.guid);
        var name;
        if (attributes) {
          jq.each(attributes, function(i, attr){
            if (name == attr.original_name) name = attr.name;
          });
        }
        return name;
      },

      _can_animate: function(layer_id) {
        var self = this;
        var attrs = self.map.getAttributes(layer_id);
        var can_animate = false;
        jq.each(attrs, function(i, attr) {
          if (attr.data_type == "datetime")
          {
            can_animate = true;
          }
        });
        return can_animate;
      },

      /**
        builds the menu item for the flyout menu 
      */
      get_menu_items: function(layer_id) {
        var self = this
        var items = {} 
        if (self.loaded){
          items["<li class='icon_style f1'>Style</li>"] = function(elem) { self.open_palette('stylist', false); }
          //items["<li class='icon_data'>View Data</li>"] = function(elem) { alert('not yet implemented: creating and displaying data grids')  }
          items["<li class='icon_rename f1'>Rename</li>"] = function(elem) { self.rename_show(); }
          //if (self.has_histogram == true){
            //items["<li class=''>View Histogram</li>"] = function(elem) { self.map.showControl("histogram", true, self.guid); }
          //}
          if (!this._is_raster()) {
            items["<li class='icon_filter f1'>Filter</li>"   ] = function(elem) { self.open_filters(false); }

            // show analyze option     
            items["<li class='icon_analysis f1'>Analyze</li>"   ] = function(elem) {
              if (self.options.can_analyze && self.options.can_analyze_right_now){
                self.open_expert(layer_id);
              } else {
                jq('#upsell_prompt').dialog('open');
              }
            }
          }
          if (self.can_animate) {
            items["<li class='icon_animate f1'>Animate</li>"  ] = function(elem) {
            if (!jq('.f1_panel').is(':visible')){
              jq('.stylist').f1_stylist({
                map: self.map,
                filters_el: jq('#filters'),
                layers_el: jq('.layers')
              })
              self.map_el.trigger('on_active_layer_change', {   guid:self.guid,   type:self.map.getGeometries(self.guid)[0] })
            }
            
              self.options.layers.set_active_layer(self.guid)
              jq('.f1_panel').f1_panel('switch_to','temporal')
            }
          }
          if (!this._is_raster() && jq(document).f1_map_handler && jq(document).f1_map_handler('chart_creation_enabled')) {
            items["<li class='icon_charts f1'>Chart</li>"  ] = function(elem) {
              self.open_palette('charts', false);
              jq('.palette .charts').f1_chart_creator('new_chart');
            }
          }
        } 
        items["<li class='icon_remove f1'>Remove</li>"   ] = function(elem) {  
          if (confirm("Remove layer '" +self.options.data.title+ "'?")) {
            self.map.removeLayer(layer_id)
            self.options.onLayerRemoved()
          }
        }
        return items;
      },
      
      
      get_color: function(styles) {
        if (styles.fill) {
          return styles.fill.colors || [styles.fill.color]
        } else {
          return styles.icon.colors || [styles.icon.color]
        }
      },
      
      
      icons: {

        raster: function(styles) {
          var el = jq("<div class='icon icon_point f1'><div/><div/><div/></div>")
          var icon_mg = jq('<img src="'+F1.host+'/images/icon.map.png" height="16" width="16" />').appendTo(el);
          return el;
        },
        
        acetate: function(styles) {
          var el = jq("<div class='icon icon_point f1'><div/><div/><div/></div>")
          var icon_mg = jq('<img src="'+F1.host+'/images/icon.map.bw.png" height="16" width="16" />').appendTo(el);
          return el;
        },
  		  
  		  choropleth: function(styles) {
          var colors = this.get_color(styles);
    		  var el = jq("<div class='icon icon_choropleth'><div/><div/><div/></div>")
    		  el.css({width: 12, height: 10})
          var color = Colorify.decimal_to_color(colors[0]);
    		  jq('div',el).eq(0).css({
    		    width:4, height: 10, position:'absolute', left:0, top:0, 
    		    backgroundColor: color
    		  })
          color = Colorify.decimal_to_color(colors[Math.round(colors.length/2)-1]);
    		  jq('div',el).eq(1).css({
    		    width:4, height: 10, position:'absolute', left:4, top:0, 
    		    backgroundColor: color
    		  })
          color = Colorify.decimal_to_color(colors[colors.length-1]);
    		  jq('div',el).eq(2).css({
    		    width:4, height: 10, position:'absolute', left:8, top:0, 
    		    backgroundColor: color
    		  })
    		  return el
  		  },

        point: function(styles) {
          delete styles.fill.colors; 
          var colors = this.get_color(styles);
          var el = jq("<div class='icon icon_point'><div/><div/><div/></div>")
          var p = Raphael(el.get(0), 16, 16)
          var color = Colorify.decimal_to_color(colors[Math.round(colors.length/2)-1]);
          var stroke = color;
          if (styles && styles["stroke"] && styles.stroke.color)
            stroke = Colorify.decimal_to_color(styles.stroke.color);
          var shadow;
          if (!styles.icon.symbol) styles.icon.symbol = 'outlineCircle';
          switch(styles.icon.symbol) {
            case "outlineSquare":
              shadow = p.rect(1,1,8,8).attr({ stroke: "#000", translation: "2,2", "stroke-opacity": 0.75});
              shadow.blur(1);
              p.rect(0,0,10,10).attr({ fill: color, stroke: stroke });
              
              shadow = p.rect(5,5,8,8).attr({ stroke: "#000", translation: "2,2", "stroke-opacity": 0.75});
              shadow.blur(1);
              p.rect(4,4,10,10).attr({ fill: color, stroke: stroke });
              break;
            case "propSquare":
              shadow = p.rect(1,1,8,8).attr({ stroke: "#000", translation: "2,2", "stroke-opacity": 0.75});
              shadow.blur(1);
              p.rect(0,0,10,10).attr({ fill: color, 'stroke-opacity': 0 });

              shadow = p.rect(5,5,8,8).attr({ stroke: "#000", translation: "1,1", "stroke-opacity": 0.75});
              shadow.blur(1);
              p.rect(4,4,10,10).attr({ fill: color, 'stroke-opacity': 0 });
              break;
            case "hollowSquare":
              shadow = p.rect(1,1,8,8).attr({ stroke: "#000", translation: "1,1", "stroke-opacity": 0.75});
              shadow.blur(1);
              p.rect(0,0,10,10).attr({ stroke: stroke });
              
              shadow = p.rect(5,5,8,8).attr({ stroke: "#000", translation: "1,1", "stroke-opacity": 0.75});
              shadow.blur(1);
              p.rect(4,4,10,10).attr({ stroke: stroke });
              break;
            case "outlineCircle":
              shadow = p.circle(5,5,5).attr({ stroke: "#000", translation: "1,1", "stroke-opacity": 0.75});
              shadow.blur(1);
              p.circle(5,5,5).attr({fill: color, stroke:stroke})

              shadow = p.circle(9,9,5).attr({ stroke: "#000", translation: "1,1", "stroke-opacity": 0.75});
              shadow.blur(1);
              p.circle(9,9,5).attr({fill: color, stroke:stroke})
              break;
            case "propCircle":
              shadow = p.circle(5,5,5).attr({ stroke: "#000", translation: "1,1", "stroke-opacity": 0.75});
              shadow.blur(1);
              p.circle(5,5,5).attr({fill: color, 'stroke-opacity': 0})

              shadow = p.circle(9,9,5).attr({ stroke: "#000", translation: "1,1", "stroke-opacity": 0.75});
              shadow.blur(1);
              p.circle(9,9,5).attr({fill: color, 'stroke-opacity': 0})
              break;
            case "hollowCircle":
              shadow = p.circle(5,5,5).attr({ stroke: "#000", translation: "1,1", "stroke-opacity": 0.5});
              shadow.blur(1);
              p.circle(5,5,5).attr({stroke:stroke})

              shadow = p.circle(9,9,5).attr({ stroke: "#000", translation: "1,1", "stroke-opacity": 0.5});
              shadow.blur(1);
              p.circle(9,9,5).attr({stroke:stroke})
              break;
            default:
              jq('svg', el).hide();
              if (styles.icon.symbol.search('http') == 0) {
                var icon_mg = jq('<img src="'+styles.icon.symbol+'" height="16" width="16" />').appendTo(el);
              } else {
                var icon_mg = jq('<img src="'+F1.host+'/images/icons/'+styles.icon.symbol+'.png" height="16" width="16" />').appendTo(el);
              }
          }
          return el
        },

        area: function(styles) {
          /*
          "m1.70313,7.15625l-0.95313,2.875l2.375,2.78125l3.9375,0.4375l1.84375,-2.71875l-6.15625,-2.53125l-1.04688,-0.84375z"
          "m3.42188,8.1875l5.35938,2.34375l-0.96875,1.78125l3.96875,0.8125l1.40625,-3.125l-1.625,-2.1875l-4.34375,-1.84375l-3.79688,2.21875z"
          "m1.76563,7.34375l-0.67188,-3.34375l1.34375,-3.21875l5.96875,1.625l4.25,-1.25l0.5,2.84375l-2.15625,3.5625l-3.75,-1.5l-3.59375,2.15625l-1.89062,-0.875z"

          "m1.62376,6.31359l2.35619,-4.73562l6.87544,-0.60767l1.71886,5.76238l-5.65872,-1.2782l-5.29177,0.85912z"
          "m1.64356,6.33663l-0.75248,3.28713l2.17822,3.30693l3.0099,0.0198l1.58416,-3.20792l-0.77228,-4.25743l-5.24752,0.85149z"
          "m12.55446,6.77228l-1.14851,3.0495l0.47525,3.28713l-5.0297,-1.68317l0.83168,-1.70297l-0.79208,-4.27723l5.66337,1.32673z"

          path = "m0.25,4.63462l2.46047,-4.29087l4.7159,1.30409l8.16739,-0.79928l-0.95685,4.03846l-7.41558,2.01923l-6.97132,-2.27163z"
          path = "m0.28125,4.71875l6.96875,2.1875l7.375,-2l0.5,3.15625l-0.5,3.15625l-6.9375,-0.90625l-5.65625,0.3125l-1.75,-5.90625z"
          path = "m2.0625,10.6875l-1.1875,4.3125l5,-1.0625l6.9375,0.90625l1.78125,-3.59375l-6.96875,-0.90625l-5.5625,0.34375z"
                    
          */
          var colors = this.get_color(styles);
          var el = jq("<div class='icon icon_point'><div/><div/><div/></div>")
          var p = Raphael(el.get(0), 18, 18)
          if (colors.length > 1)
          {
            var color_array = [Colorify.decimal_to_color(colors[0]), Colorify.decimal_to_color(colors[Math.round(colors.length/2)-1]), Colorify.decimal_to_color(colors[colors.length-1])];
          } else {
            var color_array = [Colorify.decimal_to_color(colors[Math.round(colors.length/2)-1]),Colorify.decimal_to_color(colors[Math.round(colors.length/2)-1]),Colorify.decimal_to_color(colors[Math.round(colors.length/2)-1])];
          }
          var stroke = Colorify.decimal_to_color(styles.stroke.color) || "#999";
          var path;
          path = "m0.25,4.63462l2.46047,-4.29087l4.7159,1.30409l8.16739,-0.79928l-0.95685,4.03846l-7.41558,2.01923l-6.97132,-2.27163z"
          p.path(path).attr({ fill: color_array[0], stroke: stroke, 'stroke-width': 0.75 });
          path = "m0.28125,4.71875l6.96875,2.1875l7.375,-2l0.5,3.15625l-0.5,3.15625l-6.9375,-0.90625l-5.65625,0.3125l-1.75,-5.90625z"
          p.path(path).attr({ fill: color_array[1], stroke: stroke, 'stroke-width': 0.75 });
          path = "m2.0625,10.6875l-1.1875,4.3125l4.90625,0.375l7.03125,-0.53125l1.78125,-3.59375l-6.96875,-0.90625l-5.5625,0.34375z"
          p.path(path).attr({ fill: color_array[2], stroke: stroke, 'stroke-width': 0.75 });
          return el
        },

        line: function(styles) {
          //var colors = this.get_color(styles);
          var colors = styles.stroke.colors || [styles.stroke.color];
          var color = Colorify.decimal_to_color(colors[Math.round(colors.length/2)-1]);
          var el = jq("<div class='icon icon_line'><div/><div/><div/></div>");
          var p = Raphael(el.get(0), 16, 16);
          if (colors.length > 1) {
            var path;
            color = Colorify.decimal_to_color(colors[0]);
            path = [["M", 3, 0], ["c", -5, 4, 5, 8, 0, 12]];
            p.path(path).attr({ stroke: color, 'stroke-width': 1 });
            
            color = Colorify.decimal_to_color(colors[Math.round(colors.length/2)-1]);
            path = [["M", 7, 0], ["c", -5, 4, 5, 8, 0, 12]];
            p.path(path).attr({ stroke: color, 'stroke-width': 1 });
            
            color = Colorify.decimal_to_color(colors[colors.length-1]);
            path = [["M", 11, 0], ["c", -5, 4, 5, 8, 0, 12]];
            p.path(path).attr({ stroke: color, 'stroke-width': 1 });
          } else {
            var path = [["M", 7, 0], ["c", -5, 4, 5, 8, 0, 12]];
            shadow = p.path(path).attr({ stroke: "#000", translation: "1,1", "stroke-opacity": 0.5, 'stroke-width': 1});
            shadow.blur(1);
            p.path(path).attr({ stroke: color, 'stroke-width': 1 });
          }
          el.css('background', 'none');
          return el

        },
  		  
  		  graduated: function(styles) {
  		    delete styles.fill.colors; 
          var colors = this.get_color(styles);
  		    var symbol = this.options.data.styles.icon.symbol;
          if (symbol && symbol.match(/circle/ig)) {
  		      return this.icons.graduated_shape.propCircle.apply(this,arguments);
          } else {
  		      return this.icons.graduated_shape.propSquare.apply(this,arguments);
  		    }
  		  },
  		  
  		  graduated_shape: {
  		    propCircle: function(styles) {
            var colors = this.get_color(styles);
  		      var el = jq("<div class='icon icon_graduated'><div/><div/><div/></div>")
    		    var p = Raphael(el.get(0), 14, 14)
            var color = Colorify.decimal_to_color(colors[Math.round(colors.length/2)-1]);
    		    p.circle(3,3,2.5).attr({fill: color, stroke:'none'})
    		    p.circle(8,8,5).attr({fill: color, stroke:'#fff'})
    		    return el
  		    },
  		    propSquare: function(styles) {
            var colors = this.get_color(styles);
  		      var el = jq("<div class='icon icon_graduated'><div/><div/><div/></div>")
    		    var p = Raphael(el.get(0), 14, 14)
            var color = Colorify.decimal_to_color(colors[Math.round(colors.length/2)-1]);
    		    p.rect(1,1.5,5,5).attr({fill: color, stroke:'none'})
    		    p.rect(3,3.5,10,10).attr({fill: color, stroke:'#fff'})
    		    return el
  		    }
  		  }
  		},

      /**
        Make a request to overlays/ID/refresh - updates the overlay core_metadata (bbox, and stats)
      */
      refresh_overlay_metadata: function(){
        var self = this;
        if (this.is_finder()) {
          var url = F1.host + "/overlays/"+this.finder_id+"/refresh";
          jq.ajax({
            url: url,
            type: 'PUT',      
            success: function(data){
              log('refreshed overlay metadata', self.guid, data); 
              //if (F1.Maker.current_map.getLayerTemporalAttribute(self.guid)) {
              //  jq('#bottom_overlays').f1_temporal_handler('update_timeline');
              //}
              self.map.setLayerAttributes(self.guid, {data_attributes:data.data_attributes});
            }
          })
        }
        
      }
      
    })
    
    
    
    // ---------------------------------------------------------------------------------------- F1 Basemap Layer
    jq.widget("ui.f1_basemap_layer", jq.ui.f1_layer, {
      
      _init: function() {
        var self = this;
        jq.ui.f1_layer.prototype._init.call(this);
        this.map_el = jq('#'+this.options.map.options.dom_id);

        this.map_el.bind('on_wms_basemap_change', function(e, obj){
          self.set_wms_basemap_layers(obj)
          // jq('.f1_panel').f1_panel('hide');
        });
      },

      draw: function() {
        jq.ui.f1_layer.prototype.draw.call(this);
        this.change_button = jq('<a href="#" class="green button change" style="display: none;">Change</a>').appendTo(this.element);
        if (this.options.layers.edit_mode) this.change_button.show();
      },

      wire: function() {
        var self = this;
        jq.ui.f1_layer.prototype.wire.call(this);
        this.change_button.bind('click', function(e) {
          self._open_welcome();
          jq('.f1_panel').f1_panel('hide');
          return false;
        });
        this.wire_style();

      },

      wire_visibilty: function() {
        var self = this
        jq('.visible', this.element).hide();
      },

      _open_welcome: function () {
        var opts = {start:false, selected_tab:0, close_on_add: true}
        jq('#welcome').map_welcome('open', opts);
      },
      
      refresh: function(data) {
        var self = this;
        this.options.data = data;
        if (data.name) this.set_title(data.name);
        this.wire_style();
      },

      wire_style: function(){
        var self = this;
        var el = this.element;
        if (this.options.data.data_type == "WMS" || this.options.data.wms){
          jq('h3', el)
            .live('click', function(){
              if (jq(document).f1_map_handler('is_edit_mode')) {
               self.open_wms_style();
              }
            }).live('mouseover mouseout',function(event){
              if (jq(document).f1_map_handler('is_edit_mode')) {
                if (event.type == 'mouseover'){
                  jq('.title', el).css({'text-decoration':'underline'});
                } else {
                  jq('.title', el).css({'text-decoration':'none'});
                }
              }else {
                  jq('.title', el).css({'text-decoration':'none'});
                }
            });
        } else {
          jq('h3', this.element).die('click mouseover mouseout');
        }
      },

      set_title: function(title){
        jq('h3',this.element).html(title);
      },

      open_wms_style: function(){
        if (!jq('.f1_panel').is(':visible')){
          jq('.stylist').f1_stylist({
            map: F1.Maker.current_map,
            filters_el: jq('#filters'),
            layers_el: jq('.layers')
          })
          jq('.f1_panel').f1_panel('switch_to', 'stylist');
          jq('.stylist').f1_stylist('enable_wms_basemap', this.options.data);
        } else {
          jq('.f1_panel').f1_panel('switch_to', 'stylist')
          jq('.stylist').f1_stylist('enable_wms_basemap', this.options.data);
        }
                
        jq('.active_style_layername').html(Textify.elide_after(this.options.data.name, 25));
       
      },

      // sets the wms basemap layer array and srs array so it can be accessed easily.
      // 1. when a wms basemap is loaded in the map for the first time, no object is passed and and this should look in the map json for the
      // layer list called from add_basemap_layer function
      // 2. On basemap change, called from a listener. gets passed in the layer list and srs list from the overlay json
      // It's parent activity is from the setbasemap method in f1.maker.map
      // object has two arrays {layers: ["nicemap", "landsat"], srses: ["EPSG:900913","EPSG:4326"]
      set_wms_basemap_layers: function(basemapLayerObj){
         if (basemapLayerObj == null){ // if there is nothing passed in, get list from map json
           var layers  = this.map.map_json.show_state.basemap.all_layers;
           var srses = this.map.map_json.show_state.basemap.all_srs;
           basemapLayerObj = {layers:layers, srses:srses};
          }
          this.wms_basemap_layers = basemapLayerObj;
      },

      get_wms_basemap_layers : function(){
        return this.wms_basemap_layers || null;
      }
    
            
    })
 
    
    // ---------------------------------------------------------------------------------------- F1 Layer Menu
    jq.widget("ui.f1_layer_menu", {
      
      options: {
        position: 'left',
        wrap: '<div class="layer_menu_div f1"/>'
      },
      
      _init: function() {
        this.create_menu()
      },
      
      
      create_menu: function() {
        var self = this

        self.menu = jq(this.options.wrap).appendTo(self.element).addClass('f1_layer_menu')
        
        jq.each(this.options.items, function(el, callback) {
          jq(el).appendTo(self.menu)
            .click(function(){
              callback.apply(self)
              self.dismiss()
            })
        })
      },

      _wire_menu: function() {
        var self = this;
        // If you leave the menu, dismiss it after a few moments
        // If you move back into the menu, cancel it's dismissal.
        jq(self.menu).one('mouseleave', function(){
          self.dismiss_soon();
        })
        .one('mouseenter', function(){
          self.cancel_dismissal();
        })

      },
      
      
      position: function() {
        if (!this.menu.parent().is('body')) {this.menu.appendTo('body')}  // move the menu up in the DOM to fix z-index issues

        var offset = jq(this.options.near).offset(),
            x = offset.left,
            y = offset.top
    
        this.menu.css({ top:  y })

        if (this.options.position == 'left') {
          //this.menu.css({ left: x })
          this.menu.css({ left: x - this.menu.width() })
        } else {
          this.menu.css({ left: x})
          //this.menu.css({ left: x - this.menu.width() })
        }
        this._wire_menu();
      },
      
      
      show: function() {
        this.position();
        this.menu.show();
        this.dismiss_in(5000);
      },
      
      
      hide: function() {
        this.menu.hide();
      },
      
      
      reveal: function() {
        this.position();
        this.menu.show('blind', 100);
      },
      
      
      dismiss: function() {
        this.menu.hide('blind', 200);
      },
      
      
      dismiss_soon: function() {
        this.dismiss_in(500);
      },

      dismiss_in: function(ms) {
        var self = this
        clearTimeout(this.dismisser);
        this.dismisser = setTimeout(function(){self.hide()}, ms);
      },

      
      cancel_dismissal: function() {
        clearTimeout(this.dismisser);
      },

      
      // accessor for the menu element
      get_menu: function() {
        return this.menu;
      }
      
      
    });


/****************************** ( f1_warning_display )***********************/
    
    jq.widget("ui.f1_warning_display", {
      
      options: {
        speed: 500,
        warnings: []
      },

      _init: function() {
        this.warnings = this.options.warnings;
        this.create_display();
        this.index = 0;
        this.wire();
        this.state = 'closed'; // closed, minimized, maximized
      },

      remove: function() {
        this.display.remove();
      },

      reorder: function() {
        var offset = this.element.offset();

        var panelOffset = jq('.layer_panel').offset();
        var topToPanel = offset.top - panelOffset.top + 7
        this.display.css('top', topToPanel);

        var y = this.element.offset().top;
        var min_y = jq('.layers').offset().top;
        var max_y = min_y + jq('.layers').outerHeight();
        var outside = false;
        if (y < min_y) {
          y = min_y;
          outside = true;
        }
        if (y > max_y) {
          y = max_y;
          outside = true;
        }
        if (outside) {
        
          this.display.css('opacity', 0);
        } else {
          this.display.css('opacity', 1);
        }

      },

      add_warning: function(message) {
        var self = this;
        var offset = this.element.offset();

        var panelOffset = jq('.layer_panel').offset();
        var topToPanel = offset.top - panelOffset.top + 7;
        this.display.css('top', topToPanel);
       
        if (this.state == 'closed')
        {
          jq('.warning_icon', this.display).show();
          this.display.show().animate( { left: '-45' }, self.options.speed );
          this.state = 'minimized';
        } else if (this.state == 'minimized')
        {    
          this.display.show().animate( { left: '-45' }, self.options.speed );
          jq('.warning_icon', this.display).effect('bounce');
        } else if (this.state == 'maximized'){
          self.maximize();
        }
        this.warnings.push(message);
        this.index = this.warnings.length - 1;
        this.show_count();
        jq('.warning_text', this.display).html(message);
      },

      create_display: function() {
        this.display = jq('<div id="warning_'+ this.options.guid +'" class="warning_display f1" >\
          <div class="warning_icon f1"><span class="f1_icon"></span><span class="warning_count">' + this.warnings.length + '</span><div class="warning_pagination">\
            <div class="page_left f1">left</div><div class="page_right f1">right</div></div>\
          </div>\
          <div class="warning_body f1">\
            <div class="warning_text f1"></div>\
            <a href="#" class="remove_warning f1">Remove this warning?</a>\
          </div></div>').appendTo('.layer_panel');
        var offset = this.element.offset();
        
        var panelOffset = jq('.layer_panel').offset();
        var topToPanel = offset.top - panelOffset.top + 7 ;
      
        this.display.css('top', topToPanel);
      },

      show_count: function() {
        var self = this;
        if (this.is_expanded()) {
          jq('.warning_count', this.display).html((self.index+1) + " of " + self.warnings.length);
        } else {
          jq('.warning_icon .warning_count', this.display).html(this.warnings.length);
        }
      },

      is_expanded: function() {
        return jq('.warning_body', this.display).is(':visible');

      },

      show_message: function() {
        var self = this;
        if (self.index >= self.warnings.length) self.index = 0;
        if (self.index < 0) self.index = self.warnings.length - 1;

        jq('.warning_text', self.display).fadeOut('fast', function() {
          jq(this).html(self.warnings[self.index]);
          jq(this).fadeIn('fast');
        });
        self.show_count();
      },

      remove_warning: function()
      {
        this.warnings.splice(this.index, 1);
        if (this.warnings.length < 1)
        {
          this.state = 'closed';
          this.hide();
        }
        jq('.warning_icon .warning_count', this.display).html(this.warnings.length);
        this.show_message();
      },

      hide: function() {
        var self = this;
        var offset = self.element.offset();
        self.display.animate( { left: offset.left }, self.options.speed, function() {
          jq('.warning_icon', self.display).hide();
          jq('.warning_body', self.display).hide();
          self.display.hide();
        });
      },

      minimize: function() {
        var self = this;
        self.state = 'minimized';
        var offset = self.element.offset();
        jq('.warning_body', self.display).animate( { height: 13 }, self.options.speed );
        self.display.animate( { left: -45 }, self.options.speed, function() {
          jq('.warning_body', this).hide();
          self.show_count();
        });
      },

      maximize: function() {
        var self = this;

        self.state = 'maximized';
        var offset = self.element.offset();
        jq('.layer').not(this.element).f1_warning_display('minimize');

        jq('.warning_body', self.display).show();
        
        jq('.warning_body', self.display).animate( { 'height': 150 }, self.options.speed );
        self.display.animate( { left:  -210 }, self.options.speed, function() {
          self.show_count();
        });
      },

      wire: function() {
        var self = this;
        jq('.warning_icon', this.display).click(function(e) {
          if (self.state == 'maximized')
          {
            self.minimize();
          } else {
            self.maximize();
          }
        });

        jq('a.remove_warning', this.display).click(function(e) {
          self.remove_warning();
          return false;
        });

        jq('.page_left', this.display).click(function(e) {
          self.index -= 1;
          self.show_message();
          return false;
        });
        jq('.page_right', this.display).click(function(e) {
          self.index += 1;
          self.show_message();
          return false;
        });

      }
      

    })

})(jQuery);



// Simple "expert system" style UI for asking questions and getting answers.
// Developed for inital use in the analysis UI

(function(jq) {

    jq.widget("ui.f1_filter", {

		options: {
		  map: F1.Maker.current_map,
		  type: "numeric"
		},
				
		_init: function() {
		  var self = this, el = self.element;
		  if (self.loaded) return;
		  self.loaded = false;
      self._trigger("added", null, el);
      this.model = {};
      this.create_add_ui();
      
      this.map = this.options.map;
      this.map_el = jq('#'+this.options.map.options.dom_id);
      this.can_edit_mode = this.options.edit_mode;
      this.current_map_mode = "show";
      this.filter_count  = 0;
      this.map_loaded = false;
      this.loaded_layers = {};

      this.map_el.bind('onLayerRemoved',function(e, obj){
       if (obj.guid){
          self.map.clearFilters(obj.guid);
       }
        self.load_filters();
        self._get_options();
      })

      // listener for active layer change
      this.map_el.bind('on_active_layer_change',function(event, data){
        if (self.active_layer != data.guid) {
          self.active_layer = data.guid
          self.add_filter()
          self.show_active_layer_filter()
        }
        self.load_filters();
      });

      this.map_el.bind('onLayerLoaded', function(e, obj) {
        if (self.map_loaded && !self.layer_loaded(obj.layer)){
           self.load_filters();
        }
      });

      this.map_el.bind('onMapModeChange', function(e, obj){
         self.load_filters();
         self.current_map_mode = obj.mode;

         if (obj.mode == "edit"){
           self.toggle_show_filters(false);
           jq(".show_filters_panel .minimized_header_filters").hide();
         } else if (obj.mode == "show" && self.filter_count > 0){
           self.toggle_show_filters(true);
         }
      });

     
      this.map_el.bind('onMapLoaded', function(e, obj) {
        self.load_filters();
        if ((jq(document).f1_map_handler('is_edit_mode') == false || (self.options.map && self.options.map.options.embed)) && self.filter_count > 0){
           self.toggle_show_filters(true);
        }
        self.map_loaded = true;
      });

      jq('.show_filters_panel .hide_icon_filters', self.map_el).click(function(){
        self.toggle_show_filters(false);
      });
      
      jq('.show_filters_panel .minimized_header_filters', self.map_el).click(function(){
         self.toggle_show_filters(true);
      });

		},

    toggle_show_filters: function(show) {
      if (show) {
        jq(".show_filters_panel .minimized_header_filters", this.map_el).hide();
        jq('.show_filters_panel .show_filters_palette', this.map_el).show();
        jq('.show_filters_panel .hide_icon_filters', this.map_el).show();
        jq('.show_filters_panel').show();
        var palette_width = jq('.show_filters_panel').width();
        this.options.map.setMapStyle({zoom: {offset: {x:palette_width + 20, y:(this.map.options.embed) ? 15 : 27}}});
        
      }else{
        jq(".show_filters_panel .minimized_header_filters", this.map_el).show();
        jq('.show_filters_panel .show_filters_palette', this.map_el).hide();
        jq('.show_filters_panel .hide_icon_filters', this.map_el).hide();
        this.options.map.setMapStyle({zoom: {offset: {x:10, y:(this.map.options.embed) ? 15 : 27}}});
      }

    },

    show: function() {
      jQuery('.f1_panel').f1_panel('switch_to', 'filters')
    },

    // function for embeds to prevent layers from being loaded twice (via multiple maps)
    layer_loaded: function(obj){
      if (this.loaded_layers[obj.guid]){
        return true;
      } else {
        this.loaded_layers[obj.guid] = obj;
        return false;
      }
    },


		// Convert filters into ranges and then use the ranges to rebuild the UI's controls.
		//    attrs looks like: {0: [{ id:601, ...}, { id:602, ...}], 1: ...}
		//    layer_attrs looks like: [{ id:601, ...}, { id=602, ...}]
		//    attr_index looks like: {"sales" : {id:601, data_type:..}}
		//    filters looks like: [ { expression:"$[sales] > 1800"}, { expression="$[sales] < 3000"}, 
		//                          { expression:"$[customers] > 100"}, { expression: "$[customers] < 900"}]
		//    ranges looks like: {0: {sales: {'>':1800, '<':3000}, customers: {}}  , 1:...}
		load_filters: function() {
		  var self = this
		  var attrs = [] //this.parseJSON(unescape(F1.Maker.current_map.swf.getAllAttributes()))
		  var matchers = {
		        integer:  /([<=>]{1,2}) (-?[0-9]+)/,
		        decimal:  /([<=>]{1,2}) (-?[0-9.]+)/,
		        datetime: /([<=>]{1,2}) '(.*)'/,
		        string:   /(==) '(.*)'/
		      }
      attrs = this.map.getAllAttributes();
      jq('.filters_list', self.element).html("");
      jq('.show_filters_panel .filters_list', self.map_el).html("");

      var count = 0;

		  jq.each(attrs, function(layer_index, layer_attrs) {
        var layer_title = self.map.getLayer(layer_index).title;
        var layer_filters = '<div id="filters_'+layer_index+'"><span class="layer_title">'+layer_title+'</span></div>'
        var show_layer_filters = '<div class="filters_'+layer_index+'"><span class="layer_title">'+layer_title+'</span></div>'
        jq(layer_filters, self.map_el).prependTo(jq('.filters_palette .filters_list', self.map_el))

        jq(show_layer_filters, self.map_el).prependTo(jq('.show_filters_panel  .show_f .filters_list', self.map_el))

          var filters = self.map.getFilters(layer_index),
              ranges = {},
              layer_index = layer_index

          var attr_index = {};
          layer_attrs && jq.each(layer_attrs, function(i,x) {attr_index[x.original_name] = x} )

          if (!filters || filters.length < 1) {
            var filter_title = ".filters_"+ layer_index + " span.layer_title"
            jq(filter_title, self.map_el).hide()
            return true;
          }

          jq.each(filters, function(i,filter) {
            var attr_name = filter.expression.match(/\$\[(.+)\]/)[1]
            var attr = attr_index[attr_name]
            attr = self.convert_attribute_datatype(attr)

            var match = filter.expression.match(matchers[attr.data_type])
            if (match){
              var method = match[1],
              value = match[2];
            }
            if (!ranges[attr_name]) ranges[attr_name] = {}
            ranges[attr_name][method] = value
          })

          jq.each(ranges, function(attr_name, range){
            count = count + 1;
            var attr = attr_index[attr_name]
            attr.layer_index = layer_index
            attr.key = [attr.layer_index, attr.original_name].join('|')
            if (range['==']) {
              self.add_control( attr, range["=="] )
            } else {
              self.add_control( attr, [ range[">="], range["<="] ] )
            }
          })

		  })

		  if (self.can_edit_mode) {
        jq('.intro', self.element)[count > 1 ? 'hide' : 'show']()
      }
      
      self.filter_count = count;
      self.loaded = true;
		},

    show_filters: function(){
      var self = this;
      self.show_active_layer_filter();
      jq('.filters', self.element).show();
    },

    show_active_layer_filter: function() {
      var self = this;
      var divs = jq("div[id^='filters_']");
      jq.each(divs, function(i, div){

        if (jq(div).attr('id') == "filters_"+self.active_layer){
          jq(div).show();
        }else {
          jq(div).hide(); 
        }
      });

    },

		
		create_add_ui: function() {
		  var self = this
      jq(self.element).addClass('full_height')
      log('create addUI');

      var ui = jq('\
          <div class="attributes" style="display:none">\
          <div class="header noerror" style="display:none">\
          <p class="filter_description">Select an attribute to limit by:</p>\
          </div>\
          <div class="header haserror" style="display:none">\
          <h3 class="error_title">No filters available</h3>\
          <p class="error_text"></p>\
          </div>\
          <div class="attributes_list" />\
          <a href="#edit" class="back">&laquo; back</a>\
          </div>\
          <div class="filters">\
          <div class="filters_list" />\
          <div class="intro">Filters make it easy for you and others to interactively explore and focus data.</div>\
          <div class="add_filter_link">\
            <a href="#edit" class=""><span class="add_filter">Add Filter</span></a>\
            <span id="loading_filter" style="display:none">\
              <!--img src="'+F1.host+'/images/bg.ajax-large-999.gif" height="15" width="15"/--> Loading...</span>\
          </div>\
          </div>\
		  ');

      if (!self.options.map.options.embed){
        ui.appendTo(self.element);
      }

      var show_ui = jq('<div class="filters">\
          <div class="intro"></div>\
          <div class="filters_list" />\
          </div>\
		  ').appendTo(jq('.show_filters_palette  .show_f', self.map_el))
		  
      this.attr_list = jq('.attributes_list', self.element)
        .f1_picklist({
           on_selected: function(ev,el) {
             var attr = jq(el).data('object');
             self.add_control(attr);
             var filter_div = "#filters_"+ attr.layer_index;
             jq('.intro', self.element)[jq(filter_div, self.element).children().size() > 1 ? 'hide' : 'show']()
             jq('.attributes', self.element).hide();
             log('show_filters')
             self.show_filters();
           }
        })

      jq(".add_filter", self.element)
        .click(function() {
          self.add_filter()
          return false
        })
        
      jq(".attributes .back").click(function() {
        jq('.attributes', self.element).hide()
        self.show_filters()
        return false;
      })
           
		},
		
		add_filter: function() {
           // this.show();
            var options = this._get_options()
            this.attr_list.f1_picklist('set_options', options)
            jq('.attributes', this.element).show()
            jq('.filters', this.element).hide()

            if (options.length) {
                jq('.attributes .noerror').show()
                jq('.attributes .haserror').hide()
            } else {
                if (this.wms_layer_present) {
                    jq('.attributes .haserror .error_text').html("Filters for WMS and Tiles layers are not yet supported.")
                } else {
                    jq('.attributes .haserror .error_text').html("Please add a layer before adding a filter.")
                }
                jq('.attributes .haserror').show()
                jq('.attributes .noerror').hide()
            }
        },

    convert_attribute_datatype: function(attr) {
        var self = this;
        if (attr.data_type == "latitude" || attr.data_type == "longitude") {
          attr.data_type = "decimal"
        } else if (attr.data_type == "geometry" || attr.data_type == "ewkb" || attr.data_type == "ewkt") {
          attr.data_type = "string"
        } else if (attr.data_type != "integer" && attr.data_type != "decimal" && attr.data_type != "datetime"){
          attr.data_type = "string"
        }
        return attr;
      },

    // outputs: [["layer name",attribute], ...] where attribute is the attribute object flash gave us except with a layer_index key added on
    _get_options: function() {
      var self = this
      var attrs = []

      var all_attributes = this.map.getAllAttributes();

      jq.each(all_attributes, function(layer_index, layers) {
        if (self.active_layer == layer_index){
        var layer = self.map.getLayer(layer_index);
        log(layer, layer_index);
        if (layer.type == "wms" || !layers) {
          self.wms_layer_present = true
          return true; // skip wms layers and empty layers
        }
        jq.each(layers, function(i, attr) {
          
            attr.layer_index = layer_index;
            attr = self.convert_attribute_datatype(attr);
            attr.key = [attr.layer_index, attr.original_name].join('|')
            if (self.controls[attr.data_type]) { 
              if (attr.data_type == 'string'){  // only include data_types we explicitly handle
                attrs.push([attr.name, attr])
              } else if (attr.statistics && attr.statistics.min !== null) {
                // only add it if the stats are in tact
                attrs.push([attr.name, attr])
              }
            }
          //}
        })
        }
      })
      return attrs
    },
    
    add_control: function(attr, values) {
      var self = this
      var duplicates = false;
      // only have one added control per attribute per layer
      if (!values){
       
        if (attr.data_type == "string"){
          jq.each(jq('h3', self.element), function(i, val){
            if (attr.name == jq(val).text()) {
              duplicates = true;
            }
         } );
        };

        jq.each(this.model, function(filter_string) {
            var  filter_key = filter_string.split('|',2).join('|')
            if (attr.key == filter_key){
             duplicates = true;
             return false;
            }
           return true;
        });
      };
    
      if (duplicates){
        return false;
      }else{
        this.controls[attr.data_type].call(this, attr, values, false );
        this.controls[attr.data_type].call(this, attr, values, '.show_filters_panel .show_f' + ' .filters_' + attr.layer_index);
        return true;
      }
    },
  
    // just parses date and hour for now
    parse_date: function(string) {
      if (string.getHours) return string
      var match = string.match(/([0-9]{4}-[0-9]{2}-[0-9]{2}) ?T?([0-9]{1,2}):[0-9]{2}/),
          date_part = match[1],
          hour = match[2],
          date =jq.datepicker.parseDate('yy-mm-dd', date_part)
      date.setHours(hour)
      return date
    },
    
    format_date: function(date) {
      if (!date) return ""
      return jq.datepicker.formatDate('yy-mm-dd', date) + " " +this.zeroFill(date.getHours(),2)+ ":00"
    },
    
    // from http://stackoverflow.com/questions/1267283/how-can-i-create-a-zerofilled-value-using-javascript
    zeroFill: function( number, width ) {
      width -= number.toString().length;
      if ( width > 0 ) {return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number}
      return number;
    },
    
    
    
    controls: {
      
      decimal: function(attr, values, ele) {
        return this.controls.integer.call(this, attr, values, ele)
      },
      
      integer: function(attr, values, ele) {
        var self = this,
            min = parseFloat(attr.statistics.min),
            max = parseFloat(attr.statistics.max),
            current_min = values && values[0] || min,
            current_max = values && values[1] || max

        var step =  parseFloat(Number((max - min) / 200).toPrecision(1));
        if (attr.data_type == "integer" || (step >= 1)) step = 1;
          
        attr.host = F1.host; 
 
        var view = tmpl('\
  		    <div class="numeric filter">\
  		      <h3><%= name %></h3>\
  		      <a href="#edit" class="remove"><img src="<%= host %>/images/cross-circle-gray.png" /></a>\
  		      <div class="map_filter_histogram"><div class="slider-tint left"></div><div class="slider-tint right"></div></div>\
            <div class="text_input" style="display:none">\
  		        <input type="text" class="lower"/> to \
  		        <input type="text" class="upper"/>\
  		        <a href="#edit" class="toggle" title="Toggle slider input"><img src="<%= host %>/images/sort-number.png" /></a>\
  		      </div>\
  		      <div class="slider_input">\
  		        <div class="slider" />\
  		        <label><span class="lower"></span> to <span class="upper"></span></label>\
  		        <a href="#edit" class="toggle" title="Toggle numeric input"><img src="<%= host %>/images/sort-number.png" /></a>\
  		      </div>\
  		    </div>\
  		  ');

        var filter_div = "#filters_"+ attr.layer_index;
        var control;
        if (ele && jq(ele, self.map_el).length > 0) {
          var show_filter_div = ele;
          control = jq(view(attr), self.map_el).appendTo(jq(show_filter_div, self.map_el), self.map_el);
         } else {
          control = jq(view(attr)).appendTo(filter_div, this.element);
         }

        jq('div.map_filter_histogram', control).css({
          'height':'22px',
          'overflow':'hidden',
          'margin-left': '1px',
          'background-image':'url('+F1.host+'/overlays/'+attr.overlay_id+'/attribute.png?height=22&width=218&async=false)',
          'background-repeat':'no-repeat',
          'background-position':'0 -'+ attr.hist_offset +'px'
        })
        jq('span.lower', control)
          .html( self.nice_number(current_min) )
          
        jq('span.upper', control)
          .html( self.nice_number(current_max) )
        
        jq('input.lower', control)
          .change(function() {
            if (isNaN(this.value)) {
              this.value = parseFloat(attr.statistics.min);
            }
            jq('.slider', control).slider('values', 0, this.value)
            jq( 'span.lower', control ).html( self.nice_number(this.value) )
            self._set_field(attr.key + '|>=', this.value)
          })
          .val( current_min )
        
        jq('input.upper', control)
          .change(function() {
            if (isNaN(this.value)) {
              this.value = parseFloat(attr.statistics.max);
            }
            jq('.slider', control).slider('values', 1, this.value)
            jq( 'span.upper', control ).html( self.nice_number(this.value) )
            self._set_field(attr.key + '|<=', this.value)
          })
          .val( current_max )
        
        jq('.slider', control)
          .slider({
            range: true,
            step: step,
            min: parseFloat(attr.statistics.min),
            max: parseFloat(attr.statistics.max),
            values: values || [ current_min, current_max],
            slide: function(event, ui){
              jq( 'span.lower', control ).html( self.nice_number(ui.values[0]) )
              jq( 'span.upper', control ).html( self.nice_number(ui.values[1]) )
              jq( 'input.lower', control ).val( ui.values[0] )
              jq( 'input.upper', control ).val( ui.values[1] )
            },
            stop: function( event, ui ) {
              self._set_field(attr.key + '|>=', ui.values[0])
              self._set_field(attr.key + '|<=', ui.values[1])
              jq( 'span.lower', control ).html( self.nice_number(ui.values[0]) )
              jq( 'span.upper', control ).html( self.nice_number(ui.values[1]) )
              jq( 'input.lower', control ).val( ui.values[0] )
              jq( 'input.upper', control ).val( ui.values[1] )
            }
          })
        
        jq('.toggle', control)
          .click(function() {
            jq('.text_input, .slider_input', control).toggle()
            return false;
          })
          
        jq('.remove', control)
          .click(function() {
            var guid = attr.key.split('|')[0],
              layer_el = jq('#layer_' + guid);
            self._set_field( attr.key + '|>=', null )
            self._set_field( attr.key + '|<=', null )

            self._clear_field(attr.key + '|>=' )
            self._clear_field(attr.key + '|<=' )

            jq(control).remove()
         
            jq('.intro', self.element)[jq(filter_div, self.element).children().size()> 1 ? 'hide' : 'show']()
            
            var exceeds = layer_el.f1_layer('exceeds_limit');
            var filters = self.map.getFilters( guid ); 
            
            if (exceeds && filters && filters.length) {
              self.show_loading();
              layer_el.f1_layer('get_expression_features', null);
            } else if (exceeds){
              layer_el.f1_layer('feature_limit_warning');
            }
            return false;
          })
       
        // added a check for layers that exceed the limit
        // this is needed so we dont make a filter request instantly
        if (!jq('#layer_'+attr.key.split('|')[0]).f1_layer('exceeds_limit')) { 
          self._set_field(attr.key + '|>=', current_min);
          self._set_field(attr.key + '|<=', current_max);
        }
        return control;
      },
      
      
      datetime: function(attr, values, ele) {
        var self = this,
            attr = attr,
            min = new Date(attr.statistics.min),
            max = new Date(attr.statistics.max),
            current_min = values && values[0] || min,
            current_max = values && values[1] || max
        
        current_min_date = current_min ? this.parse_date(current_min) : null
        current_max_date = current_max ? this.parse_date(current_max) : null
        current_min_hour = current_min_date ? current_min_date.getHours() : 0
        current_max_hour = current_max_date ? current_max_date.getHours() : 23

        attr.host = F1.host;

        var view = tmpl('\
  		    <div class="datetime filter">\
  		      <h3><%= name %></h3>\
  		      <a href="#edit" class="remove"><img src="<%= host %>/images/cross-circle-gray.png" /></a>\
  		      <div class="date_input">\
  		        <input type="text" class="lower"/>\
  		        <div class="hours_lower" />\
  		        <span class="to">to</span>\
  		        <input type="text" class="upper"/>\
  		        <div class="hours_upper" />\
  		      </div>\
  		    </div>\
  		  ');
        
        var update_model = function(method, value) {
          self._set_field( [attr.key,method].join('|') , value )
        }

        var filter_div = "#filters_"+ attr.layer_index;
        var control;
        if (ele && jq(ele).length > 0) {
          var show_filter_div = ele;
          control = jq(view(attr)).appendTo(jq(show_filter_div))
         } else {
          control = jq(view(attr)).appendTo(filter_div, this.element)
         }

		    var jq_lower = jq('input.lower', control)
          .val(self.format_date(current_min_date))
          .datepicker({
            defaultDate: current_min_date,
            dateFormat: 'yy-mm-dd',
            changeMonth: true,
            changeYear: true,
            onSelect: function(dateText, ui) {
              current_min_date = jq(this).datepicker('getDate')
              jq(this).trigger('refresh')
            }
          })
          .bind("refresh", function(ui) {
            current_min_date && current_min_date.setHours(current_min_hour)
            jq_lower.val( self.format_date(current_min_date) )
            update_model(">=", '\''+self.format_date(current_min_date)+'\'' )
          })
          
        jq('.hours_lower', control)
          .slider({
            min: 0,
            max: 23,
            value: current_min_hour,
            slide: function( event, ui){
              if (!current_min_date) current_min_date = new Date
              current_min_hour = ui.value
              current_min_date && current_min_date.setHours(current_min_hour)
              jq_lower.val( self.format_date(current_min_date) )
            },
            stop: function( event, ui ) {
              if (!current_min_date) current_min_date = new Date
              current_min_hour = ui.value
              jq_lower.trigger('refresh')
            }
          })
  		  
  		  
		    var jq_upper = jq('input.upper', control)
          .val(self.format_date(current_max_date))
          .datepicker({
            defaultDate: current_max_date,
            dateFormat: 'yy-mm-dd',
            changeMonth: true,
            changeYear: true,
            onSelect: function(dateText, ui) {
              current_max_date = jq(this).datepicker('getDate')
              jq(this).trigger('refresh')
            }
          })
          .bind("refresh", function(ui) {
            current_max_date && current_max_date.setHours(current_max_hour)
            jq_upper.val( self.format_date(current_max_date) )
            update_model("<=", '\''+self.format_date(current_max_date)+'\'' )
          })

        jq('.hours_upper', control)
          .slider({
            min: 0,
            max: 23,
            value: current_max_hour,
            slide: function( event, ui) {
              if (!current_max_date) current_max_date = new Date
              current_max_hour = ui.value
              current_max_date && current_max_date.setHours(current_max_hour)
              jq_upper.val( self.format_date(current_max_date) )
            },
            stop: function( event, ui ) {
              if (!current_max_date) current_max_date = new Date
              current_max_hour = ui.value
              jq_upper.trigger('refresh')
            }
          })

        jq('.remove', control)
          .click(function() {
            self._set_field( attr.key + '|>=', null )
            self._set_field( attr.key + '|<=', null )

            self._clear_field(attr.key + '|>=' )
            self._clear_field(attr.key + '|<=' )

            jq(control).remove()
 
            jq('.intro', self.element)[jq(filter_div, self.element).children().size() > 1 ? 'hide' : 'show']()
            return false;
          })        

        var parse_date = function(string) {
            if (string.getHours) return string
            var match = string.match(/([0-9]{4}-[0-9]{2}-[0-9]{2}) ?T?([0-9]{1,2}):[0-9]{2}/),
                date_part = match[1],
                hour = match[2],
                date =jq.datepicker.parseDate('yy-mm-dd', date_part)
            date.setHours(hour)
            return date
          }

        var on_change_upper = function(evt) {
         if (jq('.upper').val() != "") {
           current_max_date = parse_date(jq('.upper').val())
           current_max_hour = current_max_date.getHours()

           jq('.hours_upper', control).slider('value', current_max_hour)
           jq_upper.trigger('refresh')
         }
        }

       var on_change_lower = function(evt) {
         if (jq('.lower').val() != "") {
           current_min_date = parse_date(jq('.lower').val())
           current_min_hour = current_min_date.getHours()

           jq('.hours_lower', control).slider('value', current_min_hour)
           jq_lower.trigger('refresh')
         }
        }

        jq('.upper', control).keyup(on_change_upper)
        jq('.lower', control).keyup(on_change_lower)

        jq_lower.trigger('refresh')
        jq_upper.trigger('refresh')
        
      },
      
      
      string: function(attr, value, ele) {
        var self = this
        attr.host = F1.host;
        var view = tmpl('\
  		    <div class="string filter">\
  		      <h3><%= name %></h3>\
  		      <a href="#edit" class="remove"><img src="<%= host %>/images/cross-circle-gray.png" /></a>\
  		      <div class="string_input">\
  		        <input type="text" class="match"/>\
  		      </div>\
  		    </div>\
  		  ')
  		  
  		  var update_model = function(method, value) {
  		    self._set_field( [attr.key,method].join('|') , value )
  		  }

       var filter_div = "#filters_"+ attr.layer_index;
        var control;
        if (ele && jq(ele).length > 0) {
          var show_filter_div =  ele;
          control = jq(view(attr)).appendTo(jq(show_filter_div))
         } else {
          control = jq(view(attr)).appendTo(filter_div, this.element)
         }
  		  
  		  jq('.match', control)
  		    .keyup(function(){
            jq(this).trigger('refresh');
          })
          .bind("refresh", function() {
  		      var val = jq(this).val()
  		      if (val != "") {
  		        update_model("==", '\''+val+'\'' )
  		      } else {
  		        update_model("==", null)
  		      }
  		    })
  		    .val(value)
        
        jq('.remove', control)
          .click(function() {
            self._set_field( attr.key + '|==', null )

            self._clear_field(attr.key + '|==' )

            jq(control).remove()

            jq('.intro', self.element)[jq(filter_div, self.element).children().size() > 1 ? 'hide' : 'show']()
            return false;
          })        
        
        jq('.match', control).trigger('refresh')
        
      }
      
    },
    

    _set_field: function(field, value) {
      if (this.model[field] != value) {
        var last_value = this.model[field]
        this.model[field] = value;
        this._refresh_field(field, value, last_value);
        // this.store_state_in_url()
      }
    },

    _clear_field: function(field){
      if (this.model.hasOwnProperty(field))
        {
           delete this.model[field];
        }
    },
    
    
    _refresh_field: function(field, value, last_value) {
      var self = this;
      var fields = field.split('|'),
          layer_index = fields[0],
          attr_name = fields[1],
          method = fields[2],
          expression =      "$[" +attr_name+ "] " +method+ " " +value,
          last_expression = "$[" +attr_name+ "] " +method+ " " +last_value;
      if (last_value != null) {
        F1.Maker.current_map.removeFilter(layer_index, {expression: last_expression});
      }
      if (value != null) {
        var layer_el = jq('#layer_'+layer_index);
        if ( layer_el.f1_layer('exceeds_limit') ) {
          this.show_loading();
          layer_el.f1_layer('get_expression_features', expression);
        } else {
          self.map.addFilter(layer_index, {expression: expression});
        }
      }
    },
    
    show_loading: function(){
      var el = jq('.add_filter_link', this.map_el);
      jq('.add_filter', el).hide();
      jq('#loading_filter', el).show();
    },

		_setOption: function(option, value) {
			jq.Widget.prototype._setOption.apply( this, arguments );
			var el = this.element;
		},
		
		nice_number: function(x) {
		  return parseFloat(x)
		    .toFixed(2)
		    .replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,")
		    .replace(/\.00$/,"");
		},
		
		parseJSON: function(s) {
		  return typeof JSON != 'undefined' ? JSON.parse(s) : jq.parseJSON(s)
		}
		
	});
	
	
	
	// -------------------------------------------------------------------------------------------- f1_picklist, here for now 
	jq.widget("ui.f1_picklist", {

	_init: function() {
	  var self = this, el = self.element
	  el.addClass('f1_picklist')
	},
	
	set_options: function(options_array) {
	  var self = this
    this.element.empty()
	  jq.each(options_array, function() {
      jq('<a href="#edit" />')
        .html('<span class="'+this[1].data_type+'" >'+this[0]+'</span>')
        .data('object',this[1])
        .appendTo(self.element)
        .click(function(){
          self._trigger("on_selected", null, this)
          return false;
        })
	  })
	},
	
	show: function() {
	  this.element.show()
	},
	
	destroy: function() {			
		this.element.remove();
	},
	

	_setOption: function(option, value) {
		jq.Widget.prototype._setOption.apply( this, arguments );
		
		var el = this.element
		
	}
	
});
	
})(jQuery);

// How about we not upgrade to jquery 1.4 right now but use 1.4's parseJSON.
jq.extend({
    parseJSON: function( data ) {
        if ( typeof data !== "string" || !data ) {
            return null;
        }    
        data = jQuery.trim( data );    
        if ( /^[\],:{}\s]*$/.test(data.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@")
            .replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]")
            .replace(/(?:^|:|,)(?:\s*\[)+/g, "")) ) {    
            return window.JSON && window.JSON.parse ?
                window.JSON.parse( data ) :
                (new Function("return " + data))();    
        } else {
            jQuery.error( "Invalid JSON: " + data );
        }
    }
});


// temporal map control

(function(jq) {

	jq.widget("ui.f1_temporal", {
		
		// pre-set options for this widget
		options : {
			showingOverview : true,
			maxOverviewBins : 500,
			maxFocusBins : 500,
			stepPercentage : .015,
			playInterval : 300,
			allowOverview : true,
			playMode : "range"
		},
		
		// years, months, days, hours, minutes
		_resolutions: {
			"second"  : 1000,
      "minute"  : 1000*60,
      "hour"    : 1000*60*60,
      "day"     : 1000*60*60*24,
      "month"   : 1000*60*60*24*30,
      "year"    : 1000*60*60*24*365
		},
		
		/**
		 * automatically called on a new instance of this widget
		 */
		_create : function()
		{
			
		},
		
		/**
		 * automatically called on a new instance of this widget, AFTER _create()
		 */
		_init : function()
		{
			this._isPlaying = false;
			this._isDragging = false;
			this.map = this.options.map;
      this.map_el = jq('#'+this.options.map.options.dom_id);
			this._playMode = this.options.playMode;
			this._bins = {};
			this._maxCounts = {};
			
			this._resolutionDirty = true;
			this._timespanDirty = true;
			
			// crete the widget content
			this._createMarkup();
			this._finishUI();
			this._wire();
			this._initCharts();
		  this.loaded = false;	
		},
		
		/**
		 * add all elements and instantiate any jquery UI elements
		 */
		_createMarkup : function()
		{
			this.element.html("");
       		var controls = jq("<div id='temporal_controls'></div>").appendTo(this.element);
       		
       		// focus / header
			controls.append(
				'<div id="focusControls" class="header">\
					<button class="play" id="play">\
					  <div id="playInternal"></div>\
					</button>\
					<h1 id="temporalTitle" class="play" style="">PLAY</h1>\
					<div id="playModeChooser" class="fg-buttonset fg-buttonset-single">\
						<button class="fg-button ui-state-default ui-priority-primary ui-corner-left ui-state-active" value="range">range</button>\
						<button class="fg-button ui-state-default ui-priority-primary ui-corner-right" value="cumulative">cumulative</button>\
					</div>\
					<button id="show_hide" class="hide"></button>\
					<div id="focusRange"></div>\
				</div>'
			);
			
			var chartsContainer = jq( '<div id="chartsContainer"></div>' ).appendTo( controls );
			
			chartsContainer.append(
				'<div id="focusContainer">\
					<div id="pageHolder_left">\
						<button id="page_left"></button>\
					</div>\
					<div id="focusChartHolder">\
						<div id="focusAnnotation"></div>\
						<div id="focus"></div>\
						<div id="resolutionChooser" class="fg-buttonset fg-buttonset-single">\
							<button id="second" class="fg-button ui-state-default ui-priority-primary ui-corner-left" value="second">sec</button>\
							<button id="minute" class="fg-button ui-state-default ui-priority-primary" value="minute">min</button>\
							<button id="hour" class="fg-button ui-state-default ui-priority-primary" value="hour">hh</button>\
							<button id="day" class="fg-button ui-state-default ui-priority-primary" value="day">dd</button>\
							<button id="month" class="fg-button ui-state-default ui-priority-primary" value="month">mm</button>\
							<button id="year" class="fg-button ui-state-default ui-priority-primary ui-corner-right" value="year">yy</button>\
						</div>\
						<div id="focusTip"></div>\
					</div>\
					<div id="pageHolder_right">\
						<button id="page_right"></button>\
					</div>\
				</div>'
			);
			
			// overview
			chartsContainer.append( 
       			'<div id="overviewContainer">\
       				<div id="overviews">\
       					<div id="overviewAnnotation"></div>\
       					<div id="overview"></div>\
       					<div id="overviewBlockers"></div>\
       					<div id="overviewSlider"></div>\
       				</div>\
				</div>\
				<div id="overviewControls">\
					<button id="hideOverview" class="hide"></button>\
					<h1 id="overviewTitle">OVERVIEW</h1>\
					<p id="overviewRange">(full range: <span id="overviewRangeSpan"></span>)</p>\
				</div>'
			);
		 
		},
		
		/**
		 * apply jQuery behaviors and UI elements
		 */
		_finishUI : function()
		{
			var self = this;
			
			// behavior for toggle button bar
      
			jq(".fg-button:not(.ui-state-disabled)")
				.hover(
					function(){ 
						jq(this).addClass("ui-state-hover"); 
					},
					function(){ 
						jq(this).removeClass("ui-state-hover"); 
					}
				)
				.mousedown(
					function(){
						if ( jq(this).hasClass( 'ui-state-disabled' ) ) return;
						
						jq(this).parents('.fg-buttonset-single:first').find(".fg-button.ui-state-active").removeClass("ui-state-active");
						if( jq(this).is('.ui-state-active.fg-button-toggleable, .fg-buttonset-multi .ui-state-active') ){ jq(this).removeClass("ui-state-active"); }
						else { jq(this).addClass("ui-state-active"); }	
					}
				)
				.mouseup(
					function(){
						if(! jq(this).is('.fg-button-toggleable, .fg-buttonset-single .fg-button,  .fg-buttonset-multi .fg-button') ){
							jq(this).removeClass("ui-state-active");
						}
					}
			);	

			jq( "div#overviewSlider" ).slider(
			{
				range : true,
				min : 0,
				max : 100,
				values : [10, 50],
				step : this._resolutions[ 'minute' ],
				slide : function(event, ui)
				{
					if ( (ui.values[1] - ui.values[0] ) < self._resolutions[ 'minute' ] )
					{
						return false;
					}
					
					self.focusTimespan.min = ui.values[0];
					self.focusTimespan.max = ui.values[1];
					
					self._updateFocusIndicators();
					
					self._timespanDirty = true;
					self._updateFocusRepresentations( true );
				},
				
				stop : function(event, ui)
				{
					self._timespanDirty = true;
					self._updateFocusRepresentations( true );
          self.map_el.trigger('onTemporalChange');
				}
			});
			
			jq( "div#overviewSlider" ).css( "visibility", "hidden" );
			
			// what can we do with the ui-slider-range?
			jq( "div#overviewSlider div.ui-slider-range" ).mousedown( function( event )
			{
				event.stopPropagation();
			});
			
			jq( "div#overviewSlider div.ui-slider-range" ).draggable( {
				containment: 'parent',
				axis: 'x',
				drag: function( e, ui )
				{
					var x = ui.position.left;
					var fullWidth = jq( "div#overviewSlider" ).width();
					var rangeWidth = jq( "div#overviewSlider div.ui-slider-range" ).width();
										
					self.focusTimespan.min = self.overviewTimespan.min + ( x / fullWidth ) * ( self.overviewTimespan.max - self.overviewTimespan.min ); 
					self.focusTimespan.max = self.overviewTimespan.min + ( ( x + rangeWidth ) / fullWidth ) * ( self.overviewTimespan.max - self.overviewTimespan.min ); 
					
					self._updateSlider();
					self._updateFocusIndicators();
					
					self._timespanDirty = true;
					self._updateFocusRepresentations( false );
				},
				stop: function(e, ui )
				{
					self._timespanDirty = true;
					self._updateFocusRepresentations( false );
          self.map_el.trigger('onTemporalChange');
				}
			});
			
		},
		
		highlightFeatureBars : function( features )
		{
			var att = this.map.getLayerTemporalAttribute(2);
			var bins = this._bins[this.focusResolution];
			var date, ind;
			var highlightedBins = [];
			for ( var i=0; i<features.length; i++)
			{
				date = new Date(features[i][att].time);
				ind = Math.round( ( date.getTime() - this.overviewTimespan.min ) / this._resolutions[ this.focusResolution ] );
				
				highlightedBins.push(bins[ind]);
				bins[ind].bar.attr({fill : "#fefe00", 'stroke' : '#666' });
			}
			
			self.map_el.one( 'mousedown', { 'self' : this, 'bins' : highlightedBins }, this.onMouseDownWhileHighlighted );
		},
		
		/**
		 * binds behaviors to UI interactions
		 */
		_wire : function()
		{
			var self = this;
			
	    self.map_el.one("onTemporalReady", function() { self._onTemporalReady(); });
	    
	    /*self.map_el.bind("onFeatureSelected", function(event, featureText)
	    {
	    	self.highlightFeatureBars( JSON.parse(featureText) );
	    });*/
	    
	    self.map_el.bind("onLayerRemoved", function(e, obj) {
        if (self.map.getLayerTemporalAttribute(obj.layer.guid)){ 
          self._delete();
        }
      });
	       
	    // hide/show overview histogram
			jq( "button#hideOverview" ).click( function() {
				if ( jq( "button#hideOverview" ).hasClass( "show" ) )
				{
					jq( "div#overviewContainer" ).slideDown(500);
					jq( "div#temporal" ).animate( { 'height' : '189px' }, 500 );
					jq( "button#hideOverview" ).removeClass( "show" );
				}
				else
				{
					jq( "div#overviewContainer" ).slideUp(500);
					jq( "div#temporal" ).animate( { 'height' : '144px' }, 500 );
					jq( "button#hideOverview" ).addClass( "show" );
				}
			});
			
			// page right
			jq( "button#page_right" ).click( function(event)
			{
				self.pageRight();
			});
			
			// page left
			jq( "button#page_left" ).click( function(event)
			{
				self.pageLeft();
			});
			
			// play/pause
			jq( ".play" ).click( function( event )
			{
				if ( self._isPlaying ) {
					self.pause();
					jq( 'h1#temporalTitle' ).html( 'PLAY' );
				}
				else 
				{
					self.play();
					jq( 'h1#temporalTitle' ).html( 'PAUSE' );
				}
			});

			
			jq( "div#playModeChooser button" ).click( function( event )
			{
				self.setPlayMode( event.target.value );
			});
			
			jq( "div#resolutionChooser button" ).click( function( event )
			{
				if ( jq( event.target ).hasClass( 'ui-state-disabled' ) ) return;
				
				// hide the current set
				self.focusBarSets[ self.focusResolution ].hide();
				
				self.focusResolution = event.target.id;
				
				self._resolutionDirty = true;
				
				// if we have the bins, just set resolution and draw
				if ( self._bins[ self.focusResolution ] )
				{
					self._updateFocusChart();
				}
				
				// if not, set temporal resolution on the map and wait
				else
				{
					self.map_el.one("onTemporalReady", function() { self._onFocusBins();  self._updateFocusChart(); });
    		  self.map.setTemporalResolution( self.focusResolution );
				}
			});
		
	
			jq( "div#resolutionChooser" ).hide();
			jq( "div#focusChartHolder" ).mouseover( function()
			{
				jq( "div#resolutionChooser" ).show();
			});
			jq( "div#focusChartHolder" ).mouseout( function()
			{
				jq( "div#resolutionChooser" ).hide();
			});
			
			jq( "button#show_hide" ).click( function( event )
			{
				var $button = jq( event.target );
				
				if ( $button.hasClass( 'hide' ) )
				{
					self.collapse();
				}
				else
				{
					self.expand();
				}
			});
			
			jq( "div#overviewContainer" ).mouseover( function()
			{
				jq( "div#overviewSlider" ).css( "visibility", "visible" );
			});
			
			jq( "div#overviewContainer" ).mouseout( function()
			{
				jq( "div#overviewSlider" ).css( "visibility", "hidden" );
			});


		},

   
    refresh: function(guid){
      var self = this;
      var timeslots = this.map.getTimeSlots().length;
      log('refreshing', timeslots);
      if (timeslots) {
        if (jq('.f1-layout-center-southcenter').is(':visible')) F1.Layout.instances['layout'].inner_center.close("south");
        jq(document).f1_map_handler('enable_overlay', 'temporal');
        jq(document).f1_map_handler('overlay_to', 'temporal', true);
        jq(self.element).fadeIn();
        if (self.loaded){
          // must reload the timeline
          this._resolutionDirty = true;
          this._timespanDirty = true;
          this._attributeDirty = true;
          this._createMarkup();
          this._finishUI();
          this._wire();
          this._initCharts(true);
          self.map_el.trigger('onTemporalReady');
        }
      } else {
        self._delete();
      }
    },

    /**
      Updates the time with new features
    */
    update: function(){
      self.map_el.one('onTemporalReady',function(){
        //this._onFocusBins();
        var slots = F1.Maker.current_map.getTimeSlots();
        log('slot length', slots.length);
        //this._addBins(slots, this.overviewResolution);
        //this._addBins(slots, this.focusResolution); 
        //this._timespanDirty = true;
        //this._updateFocusChart();
        //this._drawOverview();
        //this._updateFocusIndicators();
        //this._updateSlider();
        //this._updateFocusRepresentations(true);
      });
      //F1.Maker.current_map.setTemporalResolution(this.overviewResolution);
    },

    // hides the timeline element and re-inits the temporal controls
		_delete: function() {
      var self = this;
      log('deleting');
      if (self.options.allowOverview == true) {
        jq(self.element).fadeOut(function() {
          self.pause(); //temp
          jq(document).f1_map_handler('disable_overlay', 'temporal');
          jq('#temporal').f1_temporal({map:self.map});
        }); 
        return;
      }
    },
 	
		setPlayMode : function( mode )
		{
			this._playMode = mode;
			
			// style carets accordingly
			// otherwise we don't really have to do anything here (will only affect the paging methods)
		},
		
		/**
		 * set up the raphael objects and bar groups that we'll use later
		 */
		_initCharts : function(reload)
		{
			this.overviewAnnotationCanvas = Raphael("overviewAnnotation", jq( "#overviewAnnotation" ).width(), jq( "#overviewAnnotation" ).height() );
			this.overviewCanvas = Raphael("overview", jq("#overview").width(), jq("#overview").height());
	    this.overviewBars = this.overviewCanvas.set();
	    this.highlightBars = this.overviewCanvas.set();
	    
	    this.obscuringCanvas = Raphael("overviewBlockers", jq("#overviewBlockers").width(), jq("#overviewBlockers").height());
	    
	    this.obscuringBars = this.obscuringCanvas.set();
	    
	    this.obscuringBars.push( this.obscuringCanvas.rect(-1,0,10,jq("#overview").height()), this.obscuringCanvas.rect(300,0,10,jq("#overview").height()) );
	    this.obscuringBars.push( this.obscuringCanvas.rect( 0, jq( "#overview" ).height() - 1, 10, 10 ) );
	    
	    this.obscuringBars.attr( { fill: "#444", 'fill-opacity' : .1, stroke : "#666" } );
	    
	    this.focusAnnotationCanvas = Raphael( "focusAnnotation", jq( "#focusAnnotation" ).width(), jq( "#focusAnnotation" ).height() );
	   
	    this.focusCanvas = Raphael("focus", jq( "#focus" ).width(), jq( "#focus" ).height());
			if (!reload) {
        this.focusBarSets = {};
      }
		},
		
		/**
		 * returns the next _coarsest_ resolution compared to the passed-in resolution
		 */
		_next_resolution: function(resolution) {
        	var next = false;
        	var last_res;
        	jq.each(this._resolutions, function(name, val) {
          		last_res = name;
          		if (next) {
            		return false;            
          		}	
          		if (resolution == name)
          		{
            		next = true;
          		}
        	});
        	return last_res;
    	},
    	
    	/**
    	 * returns the next _finest_ resolution compared to the passed-in resolution
    	 */
    	_prev_resolution : function(resolution)
    	{
    		var prev_res;
    		jq.each( this._resolutions, function( name, val )
    		{
    			if ( resolution == name )
    			{
    				return false;
    			}
    			prev_res = name;
    		});
    		
    		return prev_res;
    	},
    

    	/**
    	 * called when overview bins are loaded (may be called again if too many bins)
    	 */
    	_onTemporalReady : function(bins)
    	{
    		var self = this;
    		// determine overview resolution
    		var bins = (bins) ? bins : this.map.getTimeSlots();
    		var res = this.map.getTemporalResolution();
    		
    		var timespan = {
	          min: bins[0].timestamp.getTime(),
	          max: bins[bins.length-1].timestamp.getTime() + this._resolutions[ res ]
	        };
    		
    		var numBins = ( timespan.max - timespan.min ) / this._resolutions[ res ];
    
    		
    		if ( numBins > this.options.maxOverviewBins )
    		{
    			var callMethod = function()
    			{
        		self.map_el.one("onTemporalReady", function() { self._onTemporalReady() });
	    			res = self._next_resolution( res );
	    			self.map.setTemporalResolution( res );
    			}
    			
    			window.setTimeout( function(){ callMethod() }, 100);
       		}
    		else
    		{
    			this.overviewResolution = res;
    			this.overviewTimespan = timespan;
    			
    			this._addBins( bins, res );
    			
    			// draw overview
    			this._drawOverview();
    			this._updateChartAnnotation( this.overviewAnnotationCanvas, this.overviewTimespan, 5, "#DDD" );
          
    			jq( '#overviewRangeSpan' ).html( this._getDateRangeText( this.overviewTimespan, false ) );
    			
    			// set the slider min, max, and step !!!
    			jq( "div#overviewSlider" ).slider( "option", {
    				min : this.overviewTimespan.min,
    				max : this.overviewTimespan.max
    			});
    			
    			// now for the focus bins
    			this.element.fadeIn('slow', function()
    			{
            //log('wtf?', res, self._prev_resolution( res ));
    				self.focusResolution = self._prev_resolution( res );
            if (!self.focusResolution) self.focusResolution = res;
    				jq( "div#resolutionChooser button#"+self.focusResolution ).addClass( "ui-state-active" );
					
    				self.focusTimespan = self._getInitialFocusTimespan();
    			
            if (!self.loaded) {
    				  self.map_el.one("onTemporalReady", function(){
    					  // process bins
    					  self._onFocusBins();  
    					  self._updateFocusIndicators();
    					  self._updateSlider();
    					  self._updateFocusRepresentations(true);
    			      jq(document).f1_map_handler('overlay_to', 'temporal', true);
                jq('#bottom_overlays').show();
    				  });
    				  self.map.setTemporalResolution( self.focusResolution );
              self.loaded = true;
            } else {
              setTimeout( function(){
                self._onFocusBins();  
                self._updateFocusIndicators();
                self._updateSlider();
                self._updateFocusRepresentations(true);
              }, 1000)
    				  //self.map.setTemporalResolution( self.focusResolution );
            }
    			});
          
    		}
    	},
    	
    	/**
    	 * process and store bins for a given resolution
    	 */
    	_addBins : function( bins, resolution )
    	{    		
    		var processedBins = [];
    		var ms = this._resolutions[ resolution ];
    		var minTime = this.overviewTimespan.min;
    		var max = -999;
    		var ind = 0;
    		// figure max
    		jq.each( bins, function( ind, bin )
    		{
    			if ( bin.count > max )
    			{
    				max = bin.count;
    			}
    			
    			bin.utc = bin.timestamp.getTime();
    			
    			ind = Math.round( ( bin.utc - minTime ) / ms );
    			
    			processedBins[ ind ] = bin;
    		});
    		
    		this._bins[resolution] = processedBins;
    		this._maxCounts[resolution] = max;
    	},
    	
    	/**
    	 * called whenever new focus bins are retrieved from the API
    	 */
    	_onFocusBins : function()
    	{
    		this._addBins( this.map.getTimeSlots(), this.map.getTemporalResolution() );
    	},
		
		/**
		 * draws the overview histogram
		 */
		_drawOverview : function(fill)
		{	
			var bins = this._bins[this.overviewResolution];
	        	        	        
	    var overviewRange = this.overviewTimespan.max - this.overviewTimespan.min;
	    // need to know the max count
	    var maxCount = this._maxCounts[this.overviewResolution];
	    
	    // bucket size in ms
	    var bucket_size = this._resolutions[ this.overviewResolution ];
	    var num_buckets = Math.ceil(overviewRange / bucket_size);
	    
	    var bucket_width = (bucket_size * this.overviewCanvas.width) / overviewRange;
	    var gap = bucket_width / 5;
	    var bin, x, y, h;
	 		for ( var i = 0; i < bins.length; i++ )
	 		{
	 			bin = bins[i];
	 			
	 			if ( !bin ) continue;
	 		
	 			x = ( bin.timestamp.getTime() - this.overviewTimespan.min ) / overviewRange * this.overviewCanvas.width;
	 			h = ( this.overviewCanvas.height - 5 ) * bin.count / maxCount;
        if(jq.browser.msie && (jq.browser.version == 7 || jq.browser.version == 8)){
          y = 30 - (30*(bin.count / maxCount));
        } else {
          y = this.overviewCanvas.height - h;
        }
	 			var bar = this.overviewCanvas.rect( x, y, bucket_width - gap, h ); // .attr({fill: "#ddd", 'stroke': 'none'});
	 			this.overviewBars.push( bar );
	 			bar.mouseover( function( event )
	 			{
	 				this.attr({fill : "#fefe00"});
	 			});
	 			bar.mouseout( function( event )
	 			{
	 				this.attr({fill : "#DDD"});
	 			});
	 			
	 			bar = this.overviewCanvas.rect( x, y, bucket_width - gap, h ); // .attr({fill: "#ddd", 'stroke': 'none'});
	 			this.highlightBars.push( bar );
	 			
	 			bar.mouseover( function( event )
	 			{
	 				this.attr({fill : "#fefe00"});
	 			});
	 			bar.mouseout( function( event )
	 			{
	 				this.attr({fill : "#084594"});
	 			});
	 			
	 		}
	 		this.overviewBars.attr({fill: "#ddd", 'stroke': 'none'});
	 		this.highlightBars.attr({fill: "#084594", 'stroke': 'none' });
	 		this.highlightBars.attr( { 'clip-rect' : '600,0,100,100' } );
		},
		
		/**
		 * updates the slider's values array to the current focusTimespan min and max
		 */
		_updateSlider : function()
		{
			jq( "div#overviewSlider" ).slider( "option", {
    			values : [this.focusTimespan.min,this.focusTimespan.max]
    		});
		},
		
		/**
		 * called as the user drags a caret or the range
		 */
		_updateFocusIndicators : function()
		{
			this._updateFocusHighlight();
			this._updateFocusDateRangeText();
		},
		
		/**
		 * called when the user releases a caret or the range
		 */
		_updateFocusRepresentations : function( rangeSizeChanged )
		{
			this._updateMap();
			if ( rangeSizeChanged )
			{
				this._checkCurrentFocusResolution();
				this._updateFocusResolutions();
			}
			
			this._updateFocusChart();
			this._updateChartAnnotation( this.focusAnnotationCanvas, this.focusTimespan, 10 );
		},
		
		/**
		 * ensure that the current focus resolution is allowed (not showing too few or too many focus bars)
		 */
		_checkCurrentFocusResolution : function()
		{
			var binsInFocus = ( this.focusTimespan.max - this.focusTimespan.min ) / this._resolutions[ this.focusResolution ];
			
			if ( binsInFocus < 1 )
			{
				this.focusBarSets[ this.focusResolution ].hide();
				while ( binsInFocus < 1 )
				{
					this.focusResolution = this._prev_resolution( this.focusResolution );
					binsInFocus = ( this.focusTimespan.max - this.focusTimespan.min ) / this._resolutions[ this.focusResolution ];
				}
				this._resolutionDirty = true;
			}
			else if ( binsInFocus > this.options.maxFocusBins )
			{
				if ( this.focusBarSets[ this.focusResolution ] )
				{
					this.focusBarSets[ this.focusResolution ].hide();
				}
				
				while ( binsInFocus > this.options.maxFocusBins )
				{
					this.focusResolution = this._next_resolution( this.focusResolution );
					binsInFocus = ( this.focusTimespan.max - this.focusTimespan.min ) / this._resolutions[ this.focusResolution ];
				}
				this._resolutionDirty = true;
			}
			else
			{
				return;
			}
			jq( "div#resolutionChooser button.ui-state-active" ).removeClass( "ui-state-active" );
			jq( "div#resolutionChooser button#"+ this.focusResolution).addClass( "ui-state-active" );
		},
		
		/**
		 * update the map with the current focus date range
		 */
		_updateMap : function()
		{
			this.map.setTimeSpan( new Date( this.focusTimespan.min ), new Date( this.focusTimespan.max ) );
		},
		
		/**
		 * enable/disable resolutions in the resolution chooser based on teh date range
		 */
		_updateFocusResolutions : function()
		{
			var self = this;
			
			jq.each( this._resolutions, function( res, ms )
			{
				var binsInFocus = ( self.focusTimespan.max - self.focusTimespan.min ) / ms;
				
				var $button = jq( "div#resolutionChooser button#"+res); // [value='" + res + "']" )
			  	
				// get the button
				if ( binsInFocus < 1 || binsInFocus > self.options.maxFocusBins )
				{
					$button.addClass( "ui-state-disabled" );
				}
				else if ( $button.hasClass( "ui-state-disabled" ) )
				{
					$button.removeClass( "ui-state-disabled" );
				}
			});
		},
		
		/**
		 * update the background chart ticks and labels for the focus histogram
		 */
		_updateChartAnnotation : function( canvas, timespan, maxTicks, color )
		{
			if ( !maxTicks ) maxTicks = 10;
			if ( !color ) color = "#ddd";
			
			canvas.clear();
			
			var res = 'year';
			var range = timespan.max - timespan.min;			
			
			while ( ( range / 2 ) < this._resolutions[ res ] )
			{
				res = this._prev_resolution( res );
				if ( !res ) break;
			}
			
			// now, how many of these are in our focus
			var num = range / this._resolutions[ res ];
			
			var incs, increment;
			var beginDate = new Date( timespan.min );
			var firstStamp;
			
			// we need to figure out the first actual time-point in this range at the specified resolution
      if (!res) res = 'second';
			switch ( res )
			{
				case "second":
					if ( num < maxTicks )
					{
						firstStamp = new Date( beginDate.getFullYear(), beginDate.getMonth(), beginDate.getDate(), beginDate.getHours(), beginDate.getMinutes(), beginDate.getSeconds() );
					}
					else
					{
						incs = [2,5,10,15,30];
					}
					break;
				case "minute":
					if ( num < maxTicks )
					{
						firstStamp = new Date( beginDate.getFullYear(), beginDate.getMonth(), beginDate.getDate(), beginDate.getHours(), beginDate.getMinutes() );
					}
					else
					{
						incs = [2,5,10,15,30];
					}
					break;
				case "hour":
					if ( num < maxTicks )
					{
						firstStamp = new Date( beginDate.getFullYear(), beginDate.getMonth(), beginDate.getDate(), beginDate.getHours() );
					}
					else
					{
						incs = [2,6,12];
					}
					break;
				case "day":
					if ( num < maxTicks )
					{
						firstStamp = new Date( beginDate.getFullYear(), beginDate.getMonth(), beginDate.getDate() );
					}
					else 
					{
						incs = [2,7];
					}
					break;
				case "month":
					if ( num < maxTicks )
					{
						firstStamp = new Date( beginDate.getFullYear(), beginDate.getMonth() );
					}
					else
					{
						incs = [2,6];
					}
					break;
				case "year":
					firstStamp = new Date();
					if ( num < maxTicks )
					{
						firstStamp.setYear( beginDate.getFullYear() );
					}
					else
					{
						incs = [2,5,10,20,25,50,100];
					}
					break;
			}
			
			if ( num < maxTicks )
			{
				increment = this._resolutions[ res ];
			}
			else
			{
				for ( var i = 0; i < incs.length; i++ )
				{
					if ( ( range / ( this._resolutions[ res ] * incs[i] ) ) < maxTicks )
					{
						break;
					}
				}
				
				switch ( res )
				{
					case "second":
						firstStamp = new Date( beginDate.getFullYear(), beginDate.getMonth(), beginDate.getDate(), beginDate.getHours(), beginDate.getMinutes(), Math.floor( beginDate.getSeconds() / incs[i] ) * incs[i] );
						break;
					case "minute":
						firstStamp = new Date( beginDate.getFullYear(), beginDate.getMonth(), beginDate.getDate(), beginDate.getHours(), Math.floor( beginDate.getMinutes() / incs[i] ) * incs[i] );
						break;
					case "hour":
						firstStamp = new Date( beginDate.getFullYear(), beginDate.getMonth(), beginDate.getDate(), Math.floor( beginDate.getHours() / incs[i] ) * incs[i] );
						break;
					case "day":
						firstStamp = new Date( beginDate.getFullYear(), beginDate.getMonth(), Math.floor( beginDate.getDate() / incs[i] ) * incs[i] );
						break;
					case "month":
						firstStamp = new Date( beginDate.getFullYear(), Math.floor( beginDate.getMonth() / incs[i] ) * incs[i] );
						break;
					case "year":
						firstStamp.setYear( Math.floor( beginDate.getFullYear() / incs[i] ) * incs[i] );
						break;
				}
				
				increment = this._resolutions[ res ] * incs[i];
			}
			
			var tickTime = firstStamp.getTime();
			var x, tickLabel, date;
			while ( tickTime < timespan.max )
			{
				// draw this tick
				x = ( tickTime - timespan.min ) / range * canvas.width;
				canvas.path("M" + x + " 5L" + x + " " + canvas.height ).attr({"stroke" : color});
					
				date = new Date( tickTime );
					
				// label
				tickLabel = (( res == 'month' || res == 'day' ) ? ( date.getMonth() + 1 + '/' + date.getDate() + '/' ) : '') + 
							(( res == 'month' || res == 'day' || res == 'year' ) ? date.getFullYear() : '') + 
							(( res == 'hour' || res == 'minute' || res == 'second' ) ? (' ' + date.toTimeString().substr(0,5)) : '') +
							(( res == 'second' ) ? (':' + date.getSeconds()) : '');
					
				// add the label
				canvas.text( x+5, 15, tickLabel ).attr( { "font-size" : "12px",'text-anchor':'start', 'fill' : color } );
					
				// and add a unit of time
				tickTime += increment;
			}
		},
		
		/**
		 * updates the focus histogram based on the current focus date range
		 */
		_updateFocusChart : function()
		{
			var self = this;
			
			if ( this._resolutionDirty )
			{
				// create or show this set
				if ( !this.focusBarSets[ this.focusResolution ] )
				{
					this.focusBarSets[ this.focusResolution ] = this.focusCanvas.set();
				} 
				else
				{
					this.focusBarSets[ this.focusResolution ].hide();
				}
				
				// hack so that we always draw/show the bars for the current timespan
				this._timespanDirty = true;
				this._resolutionDirty = false;
			}
			
			if ( this._timespanDirty ){
				this.focusBarSets[ this.focusResolution ].hide();
				var bins = this._bins[this.focusResolution];
				var overviewRange = this.overviewTimespan.max - this.overviewTimespan.min;
				var focusRange = this.focusTimespan.max - this.focusTimespan.min;
				var res = this._resolutions[this.focusResolution];
				var maxCount = this._maxCounts[this.focusResolution];
				var bucket_width = Math.max( 1, this.focusCanvas.width / ( focusRange / res ));
				var gap = Math.min( 5, Math.floor( bucket_width / 5 ) );
				var mindex = Math.floor( ( this.focusTimespan.min - this.overviewTimespan.min ) / res );
				var maxdex = Math.ceil( ( this.focusTimespan.max - this.overviewTimespan.min ) / res );
				var bin, x, y, h;
        if (bins){
				  for ( var i = mindex; i < maxdex; i++ ){
				  	bin = bins[i];
				  	if ( !bin ) continue;
				   	x = ( bin.utc - this.focusTimespan.min ) / focusRange * this.focusCanvas.width;
            if ( bin.bar && !this._attributeDirty ) {
              bin.bar.show();
              bin.bar.attr( { x : x, width : bucket_width - gap } );
            } else {
				      h = this.focusCanvas.height * bin.count / maxCount;
              if (jq.browser.msie && (jq.browser.version == 7 || jq.browser.version == 8)){
                y = 100 - (100*(bin.count / maxCount));
              } else {
                y = this.focusCanvas.height - h;
              }
				      bin.bar = this.focusCanvas.rect( x, y, bucket_width - gap, h ).attr({
  	        	  fill: "#084594", 'stroke': 'none'
				      });
				      	
				      bin.bar.bin = bin;
				      bin.bar.mouseover( function( event ){
			 	  		  this.attr({fill : "#fefe00", 'stroke' : '#666' });
			 	  		  self.showTipForFocusBin( this.bin );
			 	  	  });
			 	  	
			 	  	  bin.bar.mouseout( function( event ){
			 	  		  self.hideTipForFocusBin();
			 	  		  if ( !this.bin.selected ){
			 	  			  this.attr({fill : "#084594", 'stroke' : 'none' });
			 	  		  }
			 	  	  });
			 	  	
			 	  	  bin.bar.click( function( event ){
			 	  		  self.highlightBinFeatures( this.bin );
			 	  	  });
				   	  this.focusBarSets[ this.focusResolution ].push( bin.bar );
            }
				  }
				  this._timespanDirty = false;
				  this._attributeDirty = false;
        }
			}
			
		},
		
		highlightBinFeatures : function( bin )
		{
			var layerInd = 2;
			
			var date = this.formatDate( bin.utc );
			var date2 = this.formatDate( bin.utc + this._resolutions[this.focusResolution] );
			
			var exp = "$[opendate] >= '" + date + "' AND $[opendate] < '" + date2 + "'";
			
			bin.selected = true;
			
			this.map.addHighlight( layerInd, { expression: exp } );
			
			// listen for mousedown
			self.map_el.one( 'mousedown', { 'self' : this, 'bins' : [bin] }, this.onMouseDownWhileHighlighted );
		},
		
		onMouseDownWhileHighlighted : function( event )
		{
			var self = event.data.self;
			
			for ( var i = 0; i < event.data.bins.length; i++ )
			{
				event.data.bins[i].selected = false;
				event.data.bins[i].bar.attr({fill : "#084594", 'stroke' : 'none' });
			}
			
			self.map.clearHighlights(2);
		},
		
		formatDate : function( ms )
		{
			var date = new Date(ms);
			
			// year
			var dString = date.getFullYear() + '-';
			
			// month
			var month = date.getMonth() + 1;
			
			if ( month < 10 )
			{
				dString += '0';
			}
			
			dString += month + '-';
			
			// day
			var day = date.getDate();
			
			if ( day < 10 )
			{
				dString += '0';
			}
			
			dString += day + ' ';
			
			// time
			dString += date.toTimeString().substr(0, 8);
			
			return dString;
		},
		
		unhighlightFeatures : function()
		{
			var layerInd = 2;
			
		},
		
		/**
		 * display a tool tip for a particular focus bin
		 */
		showTipForFocusBin : function( bin )
		{
			jq( "div#focusTip" ).html( this._getSingleDateText( bin.timestamp, this.focusResolution ) + ': ' + bin.count + ' features' );
			jq( "div#focusTip" ).show();
			
			var x = ( bin.utc - this.focusTimespan.min ) / (this.focusTimespan.max - this.focusTimespan.min) * this.focusCanvas.width;
			x += .5 * ( this._resolutions[ this.focusResolution ] / ( this.focusTimespan.max - this.focusTimespan.min ) * this.focusCanvas.width );
			
			x = Math.min( this.focusCanvas.width - jq("div#focusTip").width(), x );
			x = Math.max( 1, x );
						
			var maxCount = this._maxCounts[this.focusResolution];
			var h = this.focusCanvas.height * bin.count / maxCount;
			var y = this.focusCanvas.height - h - jq( 'div#focusTip' ).height() - 15;
			
			y = Math.max( 1, y );
				    	
			jq( "div#focusTip" ).css( 'left', x + 'px' );
			jq( "div#focusTip" ).css( 'top', y + 'px' );
		},
		
		/**
		 * hide the focus bin tool tip
		 */
		hideTipForFocusBin : function()
		{
			jq( "div#focusTip" ).hide();
		},
		
		/**
		 * updates the highlight and blockers over the overview histogram
		 */
		_updateFocusHighlight : function()
		{
			var x, width;
			
			x = ( this.focusTimespan.min - this.overviewTimespan.min ) / ( this.overviewTimespan.max - this.overviewTimespan.min ) * this.overviewCanvas.width;
			width = ( this.focusTimespan.max - this.focusTimespan.min ) / ( this.overviewTimespan.max - this.overviewTimespan.min ) * this.overviewCanvas.width;
			
			var clipString = x + ',' + 0 + ',' + width + ',' + 100;
			
			this.highlightBars.attr( { 'clip-rect' : clipString } );
			
			// now update our obscuring bars
			this.obscuringBars[0].attr( { "width" : x } );
			this.obscuringBars[1].attr( { "x" : x + width, "width" : (this.overviewCanvas.width) - (x+width) } );
			this.obscuringBars[2].attr( { "x" : x, "width" : width } );
		},
		
		/**
		 * updates the displayed focus date range text
		 */
		_updateFocusDateRangeText : function()
		{
			jq( 'div#focusRange' ).html( this._getDateRangeText( this.focusTimespan, false ) );
		},
		
		/**
		 * return a date properly formatted for the given resolution
		 */
		_getSingleDateText : function( date, resolution )
		{
			var dateText = '';
			
			if ( resolution == 'day' )
			{
				dateText += date.toDateString().split(' ')[0] + ' ';
			}
			if ( resolution == 'month' || resolution == 'day' )
			{
				dateText += date.getMonth() + 1 + '/';
			}
			if ( resolution == 'day' )
			{
				dateText += date.getDate() + '/';
			}
			if ( resolution == 'day' || resolution == 'month' || resolution == 'year' )
			{
				dateText += date.getFullYear();
			}
			if ( resolution == 'hour' || resolution == 'minute' || resolution == 'second' )
			{
				dateText += date.toTimeString().substr(0,5);
			}
			if ( resolution == 'second' )
			{
				dateText += date.toTimeString().substr(5,3);
			}
			
			return dateText;
		},
		
		_getDateText : function( date, timespan, asLink )
		{
			var beginDate = new Date( timespan.min );
			var endDate = new Date( timespan.max );
			var formattedDate = asLink ? '<a href="">' : '';
			
			formattedDate += '<span class="dateText">';
			
			var isFirst = ( date.getTime() == timespan.min );
			var diff = timespan.max - timespan.min;
			
			// if our range is less than a month, start with the day name
			if ( diff < this._resolutions['month'] && ( isFirst || ( diff > this._resolutions['day'] || ( beginDate.getDate() != endDate.getDate() ) ) ) )
			{
				formattedDate += date.toDateString().split(' ')[0] + ' ';
			}
			
			if ( diff < ( 10 * this._resolutions[ 'year' ] ) && ( isFirst || ( diff > this._resolutions['day'] || ( beginDate.getDate() != endDate.getDate() ) ) ) )
			{
				formattedDate += date.getMonth() + 1 + '/' + date.getDate() + '/';
			}			
			
			if ( isFirst || ( diff > this._resolutions['day'] || ( beginDate.getDate() != endDate.getDate() ) ) )
			{
				formattedDate += date.getFullYear();
			}
			
			var showTime = ( diff < ( .25 * this._resolutions[ 'month' ] ) );
			if ( showTime )
			{				
				if ( isFirst || diff > this._resolutions['day'] || ( beginDate.getDate() != endDate.getDate() ) )
				{
					formattedDate += ' at ';
				}
				
				formattedDate += date.toTimeString().substr(0,5);
				
				if ( diff < ( .25 * this._resolutions['hour'] ) )
				{
					formattedDate += date.toTimeString().substr(5,3);
				}
			}
			
			formattedDate += '</span>';
			if ( asLink )
			{
				formattedDate += '</a>';
			}
			
			return formattedDate;
		},
		
		/**
		 * returns 
		 */
		_getDateRangeText : function( timespan, asLinks )
		{
			var beginDate = new Date( timespan.min );
			var endDate = new Date( timespan.max );
			var diff = timespan.max - timespan.min;
			
			var dateString = this._getDateText( beginDate, timespan, asLinks );
			dateString += ' to ';
			dateString += this._getDateText( endDate, timespan, asLinks );
			
			if ( diff < ( .25 * this._resolutions[ 'month' ] ) )
			{
				dateString += ' GMT';
			}
			return dateString;
		},
		
		/**
		 * gets an initial timespan, prior to any user interaction
		 */
		_getInitialFocusTimespan : function()
		{
			var max = this.overviewTimespan.min + ( .075 * ( this.overviewTimespan.max - this.overviewTimespan.min ) );
			
			return {
				min : this.overviewTimespan.min,
				max : max
			};
		},
		
		/**
		 * step forward in time
		 */
		pageRight : function()
		{
			var range = ( this.focusTimespan.max - this.focusTimespan.min );
			//var adv = Math.round( this.options.stepPercentage * range );
			var adv = Math.round( this.options.stepPercentage * ( this.overviewTimespan.max - this.overviewTimespan.min ) );
			if ( this.focusTimespan.max >= this.overviewTimespan.max )
			{
				if ( this._playMode == 'range' )
				{
					this.focusTimespan.min = this.overviewTimespan.min;
					this.focusTimespan.max = this.focusTimespan.min + range;
				}
				else
				{
					this.focusTimespan.max = this.focusTimespan.min + adv;
				}
			}
			else
			{
				this.focusTimespan.max = Math.min( this.focusTimespan.max + adv, this.overviewTimespan.max );
				if ( this._playMode == 'range' )
				{
					this.focusTimespan.min = this.focusTimespan.max - range;
				}
			}
			
			this._timespanDirty = true;
			this._updateFocusIndicators();
			this._updateSlider();
			this._updateFocusRepresentations();
			this.map_el.trigger('onTemporalChange');
		},
		
		/**
		 * step backward in time
		 */
		pageLeft : function()
		{
			var range = ( this.focusTimespan.max - this.focusTimespan.min );
			var adv = Math.round( this.options.stepPercentage * ( this.overviewTimespan.max - this.overviewTimespan.min ) );
			
			if ( this._playMode == 'range' )
			{
				if ( this.focusTimespan.min <= this.overviewTimespan.min )
				{
					this.focusTimespan.max = this.overviewTimespan.max;
					this.focusTimespan.min = this.focusTimespan.max - range;
				}
				else
				{
					this.focusTimespan.min = Math.max( this.overviewTimespan.min, this.focusTimespan.min - adv );
					this.focusTimespan.max = this.focusTimespan.min + range;
				}
			}
			else if ( this._playMode == 'cumulative' )
			{
				if ( this.focusTimespan.max <= ( this.focusTimespan.min + adv ) )
				{
					this.focusTimespan.max = this.overviewTimespan.max;
				}
				else
				{
					this.focusTimespan.max -= adv;
				}
			}
			
			this._timespanDirty = true;
			this._updateFocusIndicators();
			this._updateSlider();
			this._updateFocusRepresentations();
			self.map_el.trigger('onTemporalChange');
		},
		
		/** 
		 * start playing from current position
		 */
		play : function()
		{
			var self = this;
			
			jq( "div#playInternal" ).addClass( "pause" );
			this._isPlaying = true;
			
			/*
			this.playInterval = setInterval( function() { self.pageRight(); }, this.options.playInterval );
			*/
			
			// we need to start 2 intervals
			// one to smoothly animate the time slider
			
			
			// the second at a longer interval to update the top graph and the map
			// or perhaps the top graph can update the chart and annotation and this one will only update the map
			
			this.playInterval = setInterval( function()
			{
				self.incrementSlider(.003);
			}, 35 );
			
			this.updateInterval = setInterval( function()
			{
				self._timespanDirty = true;
				self._updateFocusRepresentations();
        self.trigger('onTemporalChange')
			}, 100 );
		},
		
		incrementSlider : function( perc )
		{
			var range = ( this.focusTimespan.max - this.focusTimespan.min );
			//var adv = Math.round( this.options.stepPercentage * range );
			var adv = Math.round( perc * ( this.overviewTimespan.max - this.overviewTimespan.min ) );
			if ( this.focusTimespan.max >= this.overviewTimespan.max )
			{
				if ( this._playMode == 'range' )
				{
					this.focusTimespan.min = this.overviewTimespan.min;
					this.focusTimespan.max = this.focusTimespan.min + range;
				}
				else
				{
					this.focusTimespan.max = this.focusTimespan.min + adv;
				}
			}
			else
			{
				this.focusTimespan.max = Math.min( this.focusTimespan.max + adv, this.overviewTimespan.max );
				if ( this._playMode == 'range' )
				{
					this.focusTimespan.min = this.focusTimespan.max - range;
				}
			}
			
			this._updateFocusIndicators();
			this._updateSlider();
		},
		
		/**
		 * pause playback at current position
		 */
		pause : function()
		{
			jq( "div#playInternal" ).removeClass( "pause" );
			this._isPlaying = false;
			
			clearInterval( this.playInterval );
			
			this._updateFocusRepresentations();
			clearInterval( this.updateInterval );
		},
		
		/**
		 * minimize this control so that only a bar is shown
		 */
		collapse : function()
		{
			jq( "button#show_hide" ).removeClass( 'hide' );
			jq( "button#show_hide" ).addClass( 'show' );
			
			jq( "div#chartsContainer" ).slideUp(500);
			jq( "div#temporal" ).animate( { 'height' : '31px' }, 500 );
		},
		
		/**
		 * expand
		 */
		expand : function()
		{
			jq( "button#show_hide" ).removeClass( 'show' );
			jq( "button#show_hide" ).addClass( 'hide' );
			
			jq( "div#chartsContainer" ).show();
			jq( "div#temporal" ).animate( { 'height' : (jq( "button#hideOverview" ).hasClass( "show" ) ? '144px' : '189px') }, 500 );
		},

    openOverview: function(){ 
      jq( "div#overviewContainer" ).slideUp(500);
      jq( "div#temporal" ).animate( { 'height' : '144px' }, 500 );
      jq( "button#hideOverview" ).addClass( "show" );
		}

	});
})(jQuery);


Date.prototype.formatDate = function (formatString) {
  var formatDate = this;
	if(formatDate instanceof Date) {
		var months = new Array("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");
		var yyyy = formatDate.getFullYear();
		var yy = yyyy.toString().substring(2);
		var M = formatDate.getMonth();
		var MM = M < 10 ? "0" + M : M;
    // I removed text replacements because they kept trampling each other -d
		//var MMM = formatDate.getShortMonthName();
		//var MMMM = formatDate.getMonthName();
		var d = formatDate.getDate();
		var dd = d < 10 ? "0" + d : d;
    //var ddd = formatDate.getShortDayName();
    //var dddd = formatDate.getDayName();
		
		var H = formatDate.getHours();
		var HH = H < 10 ? "0" + H : H;
    var m = formatDate.getMinutes();
    var mm = m < 10 ? "0" + m : m;
		var n = formatDate.getMinutes();
		var nn = n < 10 ? "0" + n : n;
		var s = formatDate.getSeconds();
		var ss = s < 10 ? "0" + s : s;
    var h = H > 12 ? H - 12 : H;
    if (h == 0) h = 12;
    var hh = h < 10? "0" + h : h;
    //var t = H > 11 ? "P" : "A";
    var tt = H > 11 ? "PM" : "AM";

		formatString = formatString.replace(/yyyy/i, yyyy);
		formatString = formatString.replace(/yy/i, yy);
		formatString = formatString.replace(/mm/, mm);
		formatString = formatString.replace(/m/, m);
		formatString = formatString.replace(/HH/, HH);
		formatString = formatString.replace(/H/, H);
		formatString = formatString.replace(/hh/, hh);
		formatString = formatString.replace(/h/, h);
		formatString = formatString.replace(/nn/i, nn);
		formatString = formatString.replace(/n/i, n);
		formatString = formatString.replace(/ss/i, ss);
		formatString = formatString.replace(/s/i, s);
		formatString = formatString.replace(/MM/, MM);
		formatString = formatString.replace(/dd/i, dd);
		formatString = formatString.replace(/M/, M);
		formatString = formatString.replace(/d/i, d);
		formatString = formatString.replace(/tt/i, tt)

		return formatString;
	} else {
		return "";
	}
}

Date.prototype.formatUTCDate = function (formatString) {
  var formatDate = this;
	if(formatDate instanceof Date) {
		var months = new Array("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");
		var yyyy = formatDate.getUTCFullYear();
		var yy = yyyy.toString().substring(2);
		var M = formatDate.getUTCMonth() + 1;
		var MM = M < 10 ? "0" + M : M;
    // I removed text replacements because they kept trampling each other -d
		//var MMM = formatDate.getUTCShortMonthName();
		//var MMMM = formatDate.getUTCMonthName();
		var d = formatDate.getUTCDate();
		var dd = d < 10 ? "0" + d : d;
    //var ddd = formatDate.getUTCShortDayName();
    //var dddd = formatDate.getUTCDayName();
		
		var H = formatDate.getUTCHours();
		var HH = H < 10 ? "0" + H : H;
    var m = formatDate.getUTCMinutes();
    var mm = m < 10 ? "0" + m : m;
		var n = formatDate.getUTCMinutes();
		var nn = n < 10 ? "0" + n : n;
		var s = formatDate.getUTCSeconds();
		var ss = s < 10 ? "0" + s : s;
    var h = H > 12 ? H - 12 : H;
    if (h == 0) h = 12;
    var hh = h < 10? "0" + h : h;
    //var t = H > 11 ? "P" : "A";
    var tt = H > 11 ? "PM" : "AM";

		formatString = formatString.replace(/yyyy/i, yyyy);
		formatString = formatString.replace(/yy/i, yy);
		formatString = formatString.replace(/mm/, mm);
		formatString = formatString.replace(/m/, m);
		formatString = formatString.replace(/HH/, HH);
		formatString = formatString.replace(/H/, H);
		formatString = formatString.replace(/hh/, hh);
		formatString = formatString.replace(/h/, h);
		formatString = formatString.replace(/nn/i, nn);
		formatString = formatString.replace(/n/i, n);
		formatString = formatString.replace(/ss/i, ss);
		formatString = formatString.replace(/s/i, s);
		formatString = formatString.replace(/MM/, MM);
		formatString = formatString.replace(/dd/i, dd);
		formatString = formatString.replace(/M/, M);
		formatString = formatString.replace(/d/i, d);
		formatString = formatString.replace(/tt/i, tt)

		return formatString;
	} else {
		return "";
	}
}


Date.prototype.getDayName = function() {
  var names = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
  return names[this.getDay()];
}
Date.prototype.getShortDayName = function() {
  var names = [ "Sun", "Mon", "Tues", "Wed", "Thurs", "Fri", "Sat" ];
  return names[this.getDay()];
}
Date.prototype.getMonthName = function() {
  var names = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
  return names[this.getMonth()];
}
Date.prototype.getShortMonthName = function() {
  var names = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sep", "Oct", "Nov", "Dec"]
  return names[this.getMonth()];
}
// UTC Methods
Date.prototype.getUTCDayName = function() {
  var names = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
  return names[this.getUTCDay()];
}
Date.prototype.getShortUTCDayName = function() {
  var names = [ "Sun", "Mon", "Tues", "Wed", "Thurs", "Fri", "Sat" ];
  return names[this.getUTCDay()];
}
Date.prototype.getUTCMonthName = function() {
  var names = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
  return names[this.getUTCMonth()];
}
Date.prototype.getShortUTCMonthName = function() {
  var names = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sep", "Oct", "Nov", "Dec"]
  return names[this.getUTCMonth()];
}

;


if(typeof(F1)=='undefined') F1 = {};
F1.Errors = {
  GEOCODE_FAILED: { short: "The geocoder was unable to find some rows" },
  PRIVATE_DATA_LIMIT_EXCEEDED: { short: "You have exceeded your private data limit.  If you want to map this dataset you must make it public." },
  JOIN_VALUE_NOT_FOUND: { short: "The join value in a geojoin was not found in the reference dataset" },
  INVALID_HEX_EWKB: { short: "a Hex-EWKB geometry was not valid" },
  INVALID_WKB: { short: "a WKB geometry was not valid" },
  INVALID_EWKB: { short: "a EWKB geometry was not valid" },
  INVALID_WKT: { short: "a WKT geometry was not valid" },
  DATA_CONVERSION_FAILED: { short: "Failed to convert one or more values" },
  NEED_LOCATION_DATA: { short: "Unable to automatically determine location" },
  NOT_FOUND: { short: "Could not find the dataset in the system" },
  401: { short: "You do not have permission to view this dataset" },
  403: { short: "You do not have permission to view this dataset" },
  NO_FEATURES: { short: "This dataset has no mappable features" },
  DYNSPAGG: { short: "This is a Dynamically Aggregated layer" },
  TOO_MANY_FEATURES: { short: "Your data is too large to be mapped. A portion of the data will be mapped, and you can filter the data to a smaller size." },

  message_for: function(error_code) {
    if (this[error_code])
    {
      return this[error_code].short;
    } else {
      return "There was a problem with your data that needs addressing.";
    }
  }

};
  


// Handles logic around hosting the map

(function(jq) {

    jq.widget("ui.f1_map_handler", {
    
  		options: {
  		},
				
  		_init: function() {
        this.map_el = jq('#' + F1.Maker.current_map.options.dom_id);
        this._wire();
        this.state = this.options.state;
        if (this.options.can_edit) {
          this._wire_edit_mode();
        }
      },

      _wire: function() {
        var self = this;

        if (this.options.enable_sockets) { 
          this._wire_sockets();
          self.map_el.bind('onLayerRemoved', function(e, obj) {
            jq.each(self.socket_layers, function(k,g){
              if (g.guid == obj.layer.guid) { 
                delete self.socket_layers[k];
                delete self.finder_layers[k];
              }
            })
          });
        }
        self.map_el.bind("onMapTitleChange", function(e, obj) {
          self.set_title(obj);
        });

        jq("#show_map_details").live("click", function(e) {
          showMapDetails();
          return false;
        });

        jq('#bottom_overlay_icons a').live("click", function(e) {
          self.overlay_to(e.target.hash.split("#")[1]);
          return false;
        });

      },

      _wire_sockets: function(){
        var self = this;
        
        // bind to the websocket
        try {
          this.socket = io.connect(this.options.socket_server);
          
          // an object house stream_ids and guids for routing new features
          this.socket_layers = {};
          this.finder_layers = {};
          
          // just let us know that we've connected 
          this.socket.on('connect', function () {
            log('Connected to socket', this.socket );
          });
          
          // subscribe to the feature messages
          this.socket.on('tweet', function (msg) {
            if (msg.stream_id && (self.socket_layers[msg.stream_id] || self.finder_layers[msg.stream_id])){
              if (self.socket_layers[msg.stream_id]){
                var guid = self.socket_layers[msg.stream_id].guid;
                var bbox = self.socket_layers[msg.stream_id].bbox;
              } else {
                var guid = self.finder_layers[msg.stream_id].guid;
                var bbox = self.finder_layers[msg.stream_id].bbox;
              }
              var added = false; 
              if (msg.latitude && msg.longitude) {
                msg.geometry = {type:'point', coordinates:[msg.longitude, msg.latitude]};
              }
              if (msg.geometry){
                // add feature to the layer
                var attr = F1.Maker.current_map.getLayerTemporalAttribute(guid);
                if (attr){
                  msg[attr] = self.formatTimestamp(msg[attr]);
                }
                if (bbox && self.feature_in_bbox(msg, bbox)) {
                  F1.Maker.current_map.addFeatures(guid, [msg], false, false);
                  added = true;
                } else if (bbox === null){
                  F1.Maker.current_map.addFeatures(guid, [msg], false, false);
                  added = true;
                }
                // if feature was added send updates to server/UI
                if (added) {  
                  self.map_el.trigger('onFeaturesUpdated', [guid, [msg]]);
                  if (F1.Maker.current_map.getLayerTemporalAttribute(guid)) {
                    jq('#bottom_overlays').f1_temporal_handler('update_timeline');
                  }
                  // send a refresh to the overlay stats 
                  self._send_refresh(guid); 
                }
              }
            }
          });
        } catch (e){
          log('Could not connect to the socket server at: '+this.options.socket_server+' - please make sure its up and running.');
        }
      },

      formatTimestamp: function(timestamp){
        var d = new Date(timestamp);
        var time_obj = {original:timestamp, granularity:'sec'}; 
        var t = d.getFullYear() +'/'+ (d.getMonth()+1) +'/'+ d.getDate() +' '+ d.formatDate('HH:MM:ss') + ' +0000'; 
        time_obj.end_time = t;
        time_obj.time = t;
        return time_obj;
      },

      // send refresh to overlay core metadata (extents, count, & stats)
      _send_refresh: function(guid){
        var self = this;
        var key = 'refresh_'+guid;
        if (this[key]) {
          clearTimeout(this[key]);
        }
        this[key] = setTimeout(function(){
          jq('#layer_'+guid).f1_layer('refresh_overlay_metadata');
          self[key] = undefined;
        },1000);
      },

      add_socket_layer: function(layer_object){
        log('adding socket layer', layer_object);
        var id = layer_object.source.replace(/finder:/,'');
        var bbox = (layer_object.stream_bbox) ? layer_object.stream_bbox : null
        var obj = {
          guid: layer_object.guid, 
          bbox: bbox
        };
        this.socket_layers[layer_object.stream_id] = obj;
        this.finder_layers[id] = obj;
      },

      feature_in_bbox: function(msg, bbox){
        var lat = msg.latitude, lon = msg.longitude;
        var minx = bbox[0][0], miny = bbox[0][1],
          maxx = bbox[1][0], maxy = bbox[1][1];
        if ((lon >= minx && lon <= maxx) && (lat >= miny && lat <= maxy)) {
          return true;
        } else {
          return false;
        }
      },

      chart_creation_enabled: function() {
        return this.options.chart_creation_enabled;
      },

      enable_overlay: function(overlay_name) {
        var self = this;
        var hashname = "#" + overlay_name;
        jq("#bottom_overlay_icons a[href='"+hashname+"']").closest('div').show();
      },

      disable_overlay: function(overlay_name) {
        var self = this;
        var hashname = "#" + overlay_name;
        jq(hashname).css('z-index', '-1');
        jq("#bottom_overlay_icons a[href='"+hashname+"']").closest('div').hide();
        jq("#bottom_overlay_icons a[href='"+hashname+"']").closest('div').removeClass('selected');
      },

      overlay_to: function (overlay_name, force_open) {
        var self = this;
        var is_visible = false;
        var hashname = "#" + overlay_name;
        if (!force_open && jq(hashname).css('z-index') == '51') is_visible = true;
        jq('.bottom_overlay').css('z-index', '-1');
        jq('#bottom_overlay_icons div').removeClass('selected');
        if (!is_visible) {
          jq(hashname).css('z-index', '51');
          jq("#bottom_overlay_icons a[href='"+hashname+"']").closest('div').show();
          jq("#bottom_overlay_icons a[href='"+hashname+"']").closest('div').addClass('selected');
        }
      },

      set_title: function(title) {
        jq('#edit_map_details_2 #map_title').val(title);
        jq('#save_box #map_title').val(title);
        jq('#show_map_l h1').html(Textify.elide_after(title, 80));
        F1.Maker.current_map.setTitle(title);
        document.title = "Editing " + title;
      },

      _wire_edit_mode: function() {
        var self = this;

        self.save_disabled = false;

        jq("#toggle_map_edit_details").live("click", function(e, chart_state) {
          toggleMapDetails(function(success) {
            if (success) {
              self.state = "saved";
              jq("a.save_this_map").addClass("loading");
              self.save_disabled = true;
              if (chart_state == 'new' || chart_state == undefined) {
                var map_state = self.state;
                jq('#charts .chart').each(function(i, f) { jq(f).f1_chart('save', map_state); });
              }
              F1.Maker.current_map.saveMap(function(data) {
                self.remove_hash_param("add_id");
                jq("a.save_this_map").removeClass("loading");
                self.save_disabled = false;
                self.disable_edit();
              });
            }
          });
          return false;
        });
        
        jq("a.save_this_map").live("click", function(e, chart_state) {
          if (chart_state == 'saved') {
            jq(button).addClass("loading");
            F1.Maker.current_map.saveMap(function(data) {
              jq(button).removeClass("loading");
              self.save_disabled = false;
            });
            return;
          }
          if (self.save_disabled) {
            return;
          }
          var button = this;
          if (self.state == "new")
          {
            //jq(button).addClass("loading");
            toggleMapDetails(function(success) {
              if (success) {
                self.save_disabled = true;
                jq(button).addClass("loading");
                self.state = "saved";
                jq('#charts .chart').each(function(i, f) { jq(f).f1_chart('state_saved'); });
                if (chart_state == 'new' || chart_state == undefined) {
                  var map_state = self.state;
                  jq('#charts .chart').each(function(i, f) { jq(f).f1_chart('save', map_state); });
                }
                F1.Maker.current_map.saveMap(function(data) {
                  self.remove_hash_param("add_id");
                  jq(button).removeClass("loading");
                  self.save_disabled = false;
                  self.disable_edit();
                });
              } else {
                  jq('#charts .chart').each(function(i, f) { jq(f).f1_chart('state_new'); });
              }
            });
          } else {
            jq(button).addClass("loading");
            if (chart_state == 'new' || chart_state == undefined) {
              var map_state = self.state;
              jq('#charts .chart').each(function(i, f) { jq(f).f1_chart('save', map_state); });
            }
            F1.Maker.current_map.saveMap(function(data) {
              jq(button).removeClass("loading");
              self.save_disabled = false;
              self.disable_edit();
            });
          }
          return false;
        });

        jq('#save_box form').bind('submit', function(e) {
          return false;
        });

        jq("#save_box a.cancel_this_save").live("click", function(e) {
          jq('#click_shim, #save_box').hide();
        });

        jq('#show_map_l h1').f1_inline_edit({
          disabled: true,
          on_save: function(text) {
            F1.Maker.current_map.setTitle(text);
          }
        });

        if (!self.options.title || self.options.title == "") {
          var handler = function(e, obj) {
            if (obj.layer.type && obj.layer.type.match(/finderdata/ig))
            {
              F1.Maker.current_map.setTitle(obj.layer.title);
              self.map_el.unbind('onLayerAdded.map_handler');
            }
          };
          self.map_el.bind('onLayerAdded.map_handler', handler);
        }


        jq("#show_map_r #edit_map").click(function(e) {
          self.enable_edit();
          jq('#charts .chart').each(function(i, f) { jq(f).f1_chart('change_to_edit'); });
        });
          
        jq('#add_data').click(function(e) {
          jq('#welcome').map_welcome('open', {start:false, selected_tab:1, close_on_add: true})
          return false;
        });

        jq('.hide_stylist').unbind('click').click(function(){
          self.hide_stylist();
        })

        if (self._has_edit_hash())
        {
          self.enable_edit();
        }

        jq(window).bind('hashchange', function() {
          if (self._has_edit_hash())
          {
            self.enable_edit();
          } else {
            self.disable_edit();
          }

        });

      },

      hide_stylist: function(e) {
        jq('.f1_panel').hide()
        jq('#charts .chart').each(function(i, f) { jq(f).f1_chart('change_to_edit'); });
        F1.Maker.current_map.setMapStyle( { zoom: { offset: { x:10, y:27 } } })
      },
        
      enable_edit: function()
      {
        jq('#show_map_r a#show_map_details').hide();
        jq('#show_map_r a#edit_map').hide();
        jq('#show_map_r a#toggle_3d').hide();
        jq('#show_map_r a#toggle_map_edit_details').show();
        jq('#show_map_r a.save_this_map').show();
        jq('.layers_palette a#add_data').show()
        jq('#show_map_l h1').f1_inline_edit('enable');
        jq('#show_map_l h1').addClass("edit");
        document.title = "Editing " + jq('#show_map_l h1').html();
        this.map_el.trigger("onMapModeChange", [{ mode: "edit" }]);
      },

      disable_edit: function()
      {
        jq('#show_map_r a#show_map_details').show();
        jq('#show_map_r a#edit_map').show();
        jq('#show_map_r a#toggle_3d').show();
        jq('#show_map_r a#toggle_map_edit_details').hide();
        jq('#show_map_r a.save_this_map').hide();
        jq('.layers_palette a#add_data').hide()
        jq('#show_map_l h1').f1_inline_edit('disable');
        jq('#show_map_l h1').removeClass("edit");
        document.title = jq('#show_map_l h1').html();
        window.location.hash = window.location.hash.replace(/edit/, '');
        this.hide_stylist();
        this.map_el.trigger("onMapModeChange", [{ mode: "show" }]);
      },

      has_hash_param: function(param) {
        var regex = RegExp("(\#|\&)" + param + "(\=|\&|$)", "g");
        if (window.location.hash.match(regex))
        {
          return true;
        } else {
          return false;
        }
      },

      remove_hash_param: function(param) {
        if (this.has_hash_param(param)) {
          var hash = window.location.hash.replace(/^\#/, '').split('&')
          for (var i=0; i<hash.length; i++)
          {
            if (hash[i].indexOf(param) == 0)
            {
              hash.splice(i, 1);
              break;
            }
          }
          window.location.hash = hash.join('&');
        }
      },

      add_hash_param: function(param) {
        var hash = window.location.hash.replace(/^\#/, '').split('&');
        hash.push(param);
        window.location.hash = hash.join("&");

      },

      is_edit_mode: function() {
        return this.options.can_edit && this._has_edit_hash();
      },

      _has_edit_hash: function() {
        return this.has_hash_param('edit');
      }

    })
    
})(jQuery);


// Maker public facing javascript API Version 2.1. 
if(typeof(F1)=='undefined'){
  /**
    Primary F1 Class - used as our global object
  */
  F1 = {};
}
(function () {
  /** 
    Primary Maker Class
    @class general map functions 
  */
  F1.Maker = {
    /**
      search function to pass query and callback and search solr for map and data
      Depricated
     */
    find_maps: function(maker_tag, maker_user, callback) {
      var q = "tag:" + maker_tag
      if(maker_user != undefined) {q +=  " and user:" + maker_user}
      F1.Maker.search(q, callback)
    },

    /**
      search function to pass query and callback and search solr for map and data
      Depricated/Not in use
     */
    search: function(q,callback) {
      F1.Maker.jsonp(F1.host + "/search.json", callback, "query="+encodeURIComponent(q))
    },

    /**
      Add a JS Script element to the dom via Loading and Blocking JS
      Waits until the script is fully loading before moving on.
    */
    add_js_script: function(url){
      $LAB.script(url).wait()
    },
    
    /**
      a handy jsonp router, create an anon global callback 
    */
    jsonp: function(url,callback,query) {
        if (typeof callback == "function") {var cb = F1.Maker.anonymous_callback(callback)}
        if (url.indexOf("?") > -1)
            url += "&callback=" 
        else
            url += "?callback=" 
        url += cb + "&";
        if (query)
            url += query + "&";   
        url += new Date().getTime().toString(); // prevent caching        

        var script = document.createElement("script");        
        script.setAttribute("src",url);
        script.setAttribute("type","text/javascript");                
        document.body.appendChild(script);
    },
    
    /**
      creates an anon callback on the window/global object
     */
    anonymous_callback: function(callback) {
      var signature = "__" + (new Date()).getTime().toString(16) + "_"
      window[signature+name] = function(){return callback.apply(this,arguments)}
      return signature+name
    }
  }
 
  if (F1.blocker) F1.blocker = false; 
  if (!F1.Maker) F1.Maker = {}
  /** 
    Create a new map 
    @class the primary map class from which all maps start
  */
  F1.Maker.Map = function (options) {
    /** @lends F1.Maker.Map# */
    var self = this;
    this.method_queue = [];
    this.map_id = options.map_id;
    this.options = options;
    //F1.Maker.Map.instances[options.dom_id] = this;
    this.flash_api_ready = false;
    this.wrap_flash_api();
    this.dev = options.dev;
    this.map_json = options.map_json;
    if (this.map_json && this.map_json.layers) this.layers = this.map_json.layers;
    if (this.layers) this.build_layers();  
  
    // init high level attrs 
    this.layer_queue = [];
    this.dynspagg_id_list = {};
    this.layer_feature_mods = {};
    this.loaded_layers = [];
    this._finder_layers = {};
    this.layer_warnings = {};
    this.event_callbacks = {};
    this.state = options.state;
    this.classification = options.classification;
    this.classifications = options.classifications;
 
    // check for embed 
    if (this.options.embed == undefined || this.options.embed == null) {
      this.options.embed = true;
    }
  
    this.id = options.dom_id+'_embed';

    F1.Maker.Map.instances[this.options.dom_id] = this;

    // no flash routes to JS
    if (!swfobject || !swfobject.hasFlashPlayerVersion('10.0')){
      this.options.view = 'javascript'; 
    }
   
    // for IE force Flash (no polymaps)
    if (jq.browser.msie && (this.options.view == 'javascript' || options.view == 'javascript')) {
      this.options.view == 'Sputnik';
    }
    
    // route to correct load fn based on view param
    if (this.options.view == 'javascript') {
      this.load_js_map();
    } else if (this.options.view == 'globe') {
      this.load_globe_map();
    } else { 
      this.options.view = 'Sputnik';
      if (this.options.embed) {
        var url = this.add_auth(F1.host+'/maps/'+this.options.map_id+'.json?',false);
        jq.getJSON( url, function(map_json) {
          self.options.map_json = self.map_json = map_json;
          if (!self.options.flashvars) self.options.flashvars = {};
          self.options.flashvars.embedLogo = (F1.host == 'http://geocommons.com') ? 'geocommons.png' : 'logo.gq.png';
          self.layers = map_json.layers;
          if (self.layers) self.build_layers();
          // check for the embed div ? create it
          if (!jq('#'+self.id).get().length && self.options.embed == true) {
            jq('<div id="'+self.id+'"/>').appendTo(jq('#'+self.options.dom_id));
          }
          self.load_flash_map();
        })
      } else {
        this.load_flash_map();
      }
    }

  };
  
  // F1.Maker.Map public class methods
  F1.Maker.Map.afterSWFEmbed = function(e) {
    if (F1.Maker.Map.instances[e.id]) F1.Maker.Map.instances[e.id].afterSWFEmbed(e)
  }
  
  //F1.Maker.Map instance methods
  F1.Maker.Map.instances = {}; //collection of all maps in a given dom

  F1.Maker.Map.prototype = {     
   
 
    /**
      Add auth params to URL
      @param {String} url 
      @param {Boolean} params - whether or not the url already has params added 
      @param {Boolean} hascallback - whether or not the url should have a callback added to it
    */
    add_auth:function(url, params, hascallback){
      if (hascallback == undefined) hascallback = true;
      var callback = "&callback=?";
        if (hascallback == false){
          callback = "";
      }
      var hash =  (Math.round(Math.random() * 100000).toString(16)) + (new Date()).getTime().toString(16);
      if (this.options.api_key) {
       url += (params ? '&' : '') + 'api_key='+this.options.api_key;
       params = true;
      }
      if (this.options.f1_session_id && this.options.f1_auth) {
        url += '&'+this.options.f1_session_id + '=' + this.options.f1_auth + '&'+hash+callback;
      } else {
        url += (params ? '&' : '') + hash + callback;
      }
      return url;
    }, 
    

    /**
      Provides a series of wrapped functions that call flash directly
      Functions are queued to allow immediate access before the flash is fully loaded
    */
    wrap_flash_api : function() {
      
      var methods = "showControl hideControl getExtent setExtent getCenterZoom getCenter setCenter setCenterZoom getZoom setZoom setBasemap getBasemap updateBasemap getMapProviderList getMapProvider setMapProvider getFeature getFeatures selectFeature addFilter getFilters clearFilters removeFilter doFilter removeAllFilters addFeature saveMap getLayers removeLayer addLayer showLayer getLayerGuidByIndex getLayer addFeatures loadFeatures addTimeFilter addTimeFilters setTimeFilter filterFeatures getMapStyle setMapStyle setStyle addStyle styleLayer setLayerStyle updateAttributes getAllAttributes setCallback addHighlight removeHighlight clearHighlights getHighlights addHighlight setLayerTitle setLayerSubTitle addLayerCategoryFilter setLayerInfoWindow addLayerInfoWindowFilter showEmbedWindow getLayerStyle getLayerColors setLayerColors setLayerOrder showEmbedWindow setSize setTitle setDescription setClassification setClassificationFromLayer setClassificationId getAttributes getLayerTitle setPermissions setTags getGeometries setLayerAttributes setLayerProperties getFilteredFeatureCount getVisibleFeatureCount getVisibleFeatures getLayerTemporalAttribute getTemporalResolution setTemporalResolution getTimeSlots setTimeSpan getTimeSpan getGlobalTimeSpan getVisibleTimeSpan setLayerTemporalAttribute getPixelsFromLocation getLocationFromPixels getFeaturesFromLocation openInfoWindow closeInfoWindow setLayerDynamics setLayerTooltip updateFeatures saveFeatures deleteFeatures deleteCallback getLayerFeatureChanges addGeometry editGeometry saveTempGeometry clearTempGeometry".split(/[ \t\n]+/)
      for (var i = 0; i < methods.length; ++i) {
        (function(name,self) {
          
          self[name] = function() {
            if(!self.flash_api_ready) { // queue calls until api is ready
              self.method_queue.push([name,arguments])
            } else {
              // use the js api implmentation of a method if it exists
              // otherwise use the flash implementation.
              if(self.wrapped_methods[name]) {return self.wrapped_methods[name].apply(self,arguments)}
              if(self.swf && self.swf[name]) {return self.swf[name].apply(self.swf,arguments)}
              throw "Method not implemented in F1 flash map API: " + name
            }
          }
	  
        })(methods[i],this) // closure allows the wrapper function to know the function name
        
      }
      
    },

    /**
     Wires all flash supported events to a "global callback" that gets called by flash
     each callback triggers an event that the JS can bind/subscribe to
    */
    wire_callbacks: function() {
      var self = this;
      methods = ["onMapLoaded", "onMapPan", "onMapPanStop","onMapPanStart", "onMapClicked", "onMapZoomed", "onBaseMapChanged", "onLayerAdded", "onLayerLoaded", "onLayerLoading", "onLayerStyleChange", "onLayerRemoved", "onLayerParsed", "onLayerParsing", "onLayerRendering", "onLayerRendered", "onLayerError", "onTemporalReady", "onMapClassificationChange", "onTemporalChange", "onFeaturesUpdated", "onFeatureIntersected", "onFeatureHover", "onFeatureSelected", "onAnnotationCleared", "onAnnotationEdit", "onAnnotationSaved", "onAnnotationStart", "onAnnotationStop"];
      jq.each(methods, function(i, method_name) {
        self.set_map_callback(method_name);
        if (method_name != "onTemporalReady") {
          self.map_el.bind(method_name, function(e, obj) { self[method_name](obj); self.fireEventCallbacks(method_name, obj); });
        }
      });
    },

    /**
      Turns a list of flash events into local callbacks which trigger events off document [onLayerAdded,onLayerLoaded, etc]
      @param {String} flash_event the name of the event to set a callback for
     */
    set_map_callback: function(flash_event) {
      var self = this, cb;
      var method_name = flash_event;
      if (this.swf) this.swf.setCallback(flash_event, self.global_trigger(method_name) + (jq.inArray(flash_event, ["onAnnotationCleared", "onAnnotationEdit", "onAnnotationSaved", "onAnnotationStart", "onAnnotationStop"]) > -1 ? "()" : ""));
    },

    /**
      Creates anon function at the window/global level
      flash will call these functions directly
      each function triggers the event on the "document" object 
      @param {String} name the event name
    */
    global_trigger: function(name) {
      var self = this
      var signature = "__" + (new Date()).getTime().toString(16) + "_"
      window[signature+name] = function(){ 
        var args = arguments;
        if (args[0] && args[0].layer) {
          args[0].layer = JSON.parse(args[0].layer);
        }
        //if (name != "onFeatureHover") console.log(name);
        self.map_el.trigger(name, args);
      };
      return signature+name;
    },

    /** 
      Triggered by Flash directly on init
      Defines the layers palettes and calls onmapready once the UI has been rendered
      Important: Order matters to prevent race conditions
    */
    onMapInitialized: function() {
      var self = this;
      this.map_el = jq('#'+this.options.dom_id);
      this.map_el.unbind();
      this.loaded_layers = []; 
      this.layer_feature_mods = {};

      var swf = swfobject.getObjectById(this.id);
      F1.Maker.Map.instances[this.options.dom_id].swf = swf;

      // creates event bindings to map's dom ID
      this.wire_callbacks();
      if (this.options.onMapInitialized) this.options.onMapInitialized.apply(this,[this]); 
      // support for deprecated callback: onload 
      if (this.options.onLoad) this.options.onLoad.apply(this,[this]); 
      this.run_method_queue();
      if (this.options.embed) this.onEmbedInitialized();
      this.load_starting_layers();
      if (this.state == "new")
      {
        var basemap = this.getBasemap();
        if (basemap && basemap.provider && basemap.provider.toLowerCase() == "acetate")
        {
          this.switch_to_acetate({templates: basemap.templates[0].replace("acetate-bg", "{layer:acetate-bg}")});
        }
      }
      if (!this.options.embed && this.options.onMapReady) this.options.onMapReady.apply(this,[this]);
      // support for deprecated callback: onready 
      if (!this.options.embed && this.options.onReady) this.options.onReady.apply(this,[this]);
      
      self.map_el.trigger("onMapReady");
      // issue onmapready for embeds
      if (this.options.embed){
        F1.Embed.ready = true;
        if (this.options.onMapReady) this.options.onMapReady.apply(this,[this])
        var meth;
        while (meth = F1.Embed.method_queue.shift()) {
          F1.Embed[meth[0]].apply(this, meth[1]);
        }
        jq('#temporal').f1_temporal({map: this});
        F1.Maker.current_map = this;
      }
    },
 
    /**
      called once when the map has loaded/rendered all initial object (ie layers are all rendered)
     */
    onMapLoaded:function(){
      if (this.options.map_json && this.options.map_json.show_state.legend_open && this.swf){
        this.setMapStyle( {legend: {expanded: true}} );
      }
      if (this.options.onMapLoaded) this.options.onMapLoaded.apply(this,[this]);
    },

    /**
     *  called anytime the map is clicked
     */
    onMapClicked:function(data){
      if (this.options.onMapClicked) this.options.onMapClicked.apply(this,[data]);
    },

    /** 
      called any time the map is panned. Triggered very often while panning
    */
    onMapPan: function(){
      if (this.options.onMapPan) this.options.onMapPan.apply(this,[this]);
    },


    /**
      Called once at the start of a pan event
    */
    onMapPanStart: function(){
      if (this.options.onMapPanStart) this.options.onMapPanStart.apply(this,[this]);
    },

    /**
      Called once at the end of a pan event
    */
    onMapPanStop: function(){
      if (this.options.onMapPanStop) this.options.onMapPanStop.apply(this,[this]);
    },

    /**
      Called once at the start of a pan event
    */
    onMapZoomed:function(){
      if (this.options.onMapZoomed) this.options.onMapZoomed.apply(this,[this]);
    },

    /**
      triggered when the basemap changes
    */
    onBaseMapChanged:function(){
      if (this.options.onBasemapChanged) this.options.onBasemapChanged.apply(this,[this]);
    },


    /**
      Called once after a layer has been added to the map
    */
    onLayerAdded:function(){
      if (this.options.onLayerAdded) this.options.onLayerAdded.apply(this,[arguments]);
    },

    /**
      Called after a layer has been removed from the map
    */
    onLayerRemoved:function(){
      if (this.options.onLayerRemoved) this.options.onLayerRemoved.apply(this,[arguments]);
    },

    /**
      Called once a layer has been completely loaded
    */
    onLayerLoaded:function(){
      if (this.options.onLayerLoaded) this.options.onLayerLoaded.apply(this,[arguments]);
    },

    /**
      Called while the layer is loading, used for progress
    */
    onLayerLoading:function(){
      if (this.options.onLayerLoading) this.options.onLayerLoading.apply(this,[arguments]);
    },

    /**
      Called on an error loading layers
    */
    onLayerError:function(){
      if (this.options.onLayerError) this.options.onLayerError.apply(this,[arguments]);
    }, 

    /**
      Called while a layer is being parsed
    */
    onLayerParsing:function(){
      if (this.options.onLayerParsing) this.options.onLayerParsing.apply(this,[arguments]);
    },

    /**
      Called after a layer has been parsed
    */
    onLayerParsed:function(){
      if (this.options.onLayerParsed) this.options.onLayerParsed.apply(this,[arguments]);
    },

    /**
      Called while an overlay is rendering, post init and pre-loaded
    */
    onLayerRendering:function(){
      if (this.options.onLayerRendering) this.options.onLayerRendering.apply(this,[arguments]);
    },

    /**
      Called once a layer has been completely rendered on the map
    */
    onLayerRendered:function(){
      if (this.options.onLayerRendered) this.options.onLayerRendered.apply(this,[arguments]);
    },

    /**
      Called every time a style is changed 
    */
    onLayerStyleChange:function(){
      if (this.options.onLayerStyleChanged) this.options.onLayerStyleChanged.apply(this,[arguments]);
    },


    /**
      Called after the time slider is changed in any way
    */
    onTemporalChange:function(){
      if (this.options.onTemporalChange) this.options.onTemporalChange.apply(this, [this]);
    },

    /**
      Called after a layers features ave been updated
    */
    onFeaturesUpdated:function(){
      if (this.options.onFeaturesUpdated) this.options.onFeaturesUpdated.apply(this, [arguments]);
    },

    /**
      Called after the getFeaturesFromLocation method is called
    */
    onFeatureIntersected:function(data){
      if (data && data.features && (typeof(data.features) == 'string')) data.features = JSON.parse(data.features); 
      if (this.options.onFeatureIntersected) this.options.onFeatureIntersected.apply(this, [data]);
    },

    /**
      Called when features are moused over
    */
    onFeatureHover:function(data){
      if (data && data.features && (typeof(data.features) == 'string')) data.features = JSON.parse(data.features); 
      if (this.options.onFeatureHover) this.options.onFeatureHover.apply(this, [data]);
    },
    
    /**
      Called after a feature has been selected by the map user
      @param {Array} an array of features from the user click location
    */
    onFeatureSelected: function(data){
      if (data && data.features && (typeof(data.features) == 'string')) data.features = JSON.parse(data.features); 
      if (this.options.onFeatureSelected) { 
        this.options.onFeatureSelected.apply(this, [data]);
      }
    },

    onAnnotationCleared: function(data) {
      if (this.options.onAnnotationCleared) this.options.onAnnotationCleared.apply(this, [data]);
    },
    
    onAnnotationEdit: function(data) {
      if (this.options.onAnnotationEdit) this.options.onAnnotationEdit.apply(this, [data]);
    },
    
    onAnnotationSaved: function(data) {
      if (this.options.onAnnotationSaved) this.options.onAnnotationSaved.apply(this, [data]);
    },
    
    onAnnotationStart: function(data) {
      if (this.options.onAnnotationStart) this.options.onAnnotationStart.apply(this, [data]);
    },
    
    onAnnotationStop: function(data) {
      if (this.options.onAnnotationStop) this.options.onAnnotationStop.apply(this, [data]);
    },
    
    /*
      Calls any added callbacks from setCallback
    */
    fireEventCallbacks: function(event_name, data){
      if (data && data.features && (typeof(data.features) == 'string')) data.featcompleteJSON.parse(data.features);
      if (this.event_callbacks[event_name]) {
        for (var id in this.event_callbacks[event_name]){
          this.event_callbacks[event_name][id](data);
        }
      }
    }, 
 
    /**
      Called every time a map's classification is changed 
    */
    onMapClassificationChange:function(classification){
      jq('#map_classification_id option[value=""]').remove()
      jq('#map_classification_id option[value="' + classification.id + '"]').attr('selected', 'selected')
      jq('#classification_header .classification_banner').replaceWith(classification.markup);
      jq('#classification_footer .classification_banner').replaceWith(classification.markup);
    },
 
    /**
      Called when a map is embedded, sets CSS params based the dom
      @param {Object} swf the swf object for the map
    */
    onEmbed: function(swf) { 
      MakerAppMap.onembed(swf)
    },
 
    /** 
     * Init UI for all embeds. 
     * creates dom elements for layers and temporal. 
     * controls UI logic for showing/hiding certian UI elements like logos and layers
     */
    onEmbedInitialized: function() { 
      // creates the HTML for the layers palette 
      var el = this.map_el;
      //clean up dom
      if (jq('.layer_panel', el).get().length) jq('.layer_panel', el).remove();
      if (jq('#filters', el).get().length) jq('#filters', el).remove();

      var panel_ui = jq('\
        <div class="panel layer_panel open right f1">\
          <div class="hide_icon f1">Hide</div>\
          <div class="minimized_header f1 " style="display: none;">\
            <div class="handle f1">Maximize</div>\
            <div class="icon f1"><span class="icon_layers">Layers</span></div>\
          </div>\
          <div class="palette open layers_palette f1">\
            <div class="header icon_layers f1">\
              <span class="icon"></span>\
              <span class="title f1">Layers</span>\
              <a href="#" id="add_data" class="add button green f1" style="display: none;">+ Add</a>\
            </div>\
            <div class="layers container f1"></div>\
            <div class="header icon_layers f1">\
              <span class="icon"></span>\
              <span class="title">Basemap</span>\
            </div>\
            <div class="basemaps container f1"></div>\
          </div>\
        </div>')
      panel_ui.appendTo(el);
      jq('<div id="temporal" style="display:none;position:absolute;left:0px;bottom:0px;overflow:hidden;"></div>').appendTo(el);
      jq('<div id="temporal_minimized" class="minimized_header" style="display: none;">\
          <div class="handle f1" style="display: none;">Maximize</div>\
          <div class="icon f1"><span class="icon_animate">Layers</span></div>\
        </div>').appendTo(el);
      jq('<div id="filters" class="panel open show_filters_panel left" style="display:none;">\
        <div class="hide_icon hide_icon_filters" title="Close the Filters Panel">Hide</div>\
        <div class="palette open show_filters_palette show_mode">\
          <div class="header" ><span class="title icon_filter">Filters</span></div>\
          <div class="filters container" style="max-height:400px;"><div class="show_f" id="sh_filters"></div></div>\
        </div>\
        <div class="minimized_header minimized_header_filters" title="Open Filters Panel" style="top:40px">\
          <div class="handle">Maximise</div>\
          <div class="icon"><span class="icon_filter">Filters</span></div>\
        </div>\
      </div>\
      <div id="f1_infowin" class="triangle-border left"></div>').appendTo(el);

      // adjust the CSS position of the layers palette
      panel_ui.css({
        top: '15px'
      })

      jq('.f1_panel', el).f1_panel({ map: this }).hide()
      jq('.layer_panel', el).f1_panel({ map: this });
      jq('.layers', el).f1_layers({
        filters_el : jq('#filters', el).f1_filter({map: this, edit_mode : false}),
        edit_mode: false,
        map: this,
        stylist : null
      })

      jq('#filters', el).css('top', '15px');
      if (this.swf) this.setMapStyle( { zoom: { y: 0 } } );

      //adjust the layers palette to scale to 75% of the embed div height
      jq('.layers', el).css('max-height', el.height() * .5 + 'px');
     
 
      if (this.options.uiLayers == false){
        jq('.layer_panel', el).hide();
      }

      if (this.options.uiZoom == false){
        if (this.swf) this.setMapStyle( {zoom: {visible: false}} );
      } else {
        if (this.swf) this.setMapStyle( {zoom: {expanded: false}} );
      }

      if (this.options.uiLegend == false){
        if (this.swf) this.setMapStyle( {legend: {visible: false}} );
      }
    
      if (this.map_json && this.map_json.show_state.legend_open){
        if (this.swf) this.setMapStyle( {legend: {expanded: true}} );
      }

      if (this.options.uiInfoWindow == false){
        if (this.swf) this.setMapStyle( { infowindow: { visible: false } } );
      }
 
    },


    /**
      Handles events coming from the layer poller - contains logic of what error messages we should show
      Hands the layer_obj off the load_layer if no errors 
      @param {Object} obj a state change result object from the layer poller 
    */
    onLayerStateChange: function(obj) {
      var self = this;
      
      var message = obj.message;
        if (message.state == "complete"){
          if (!self.layer_warnings[message.guid]) {
            jq('#'+message.guid).f1_warning_display('remove_warning');
            delete self.layer_warnings[message.guid];
          }
          if ((self.options.groupLayers !== undefined && self.options.groupLayers) 
            && (self.grouped_layer_data !== undefined && self.grouped_layer_data[message.id]))
          {
            self._add_layer_to_swf(self.grouped_layer_data[message.id], message.guid);
          } else { 
            self.layer_queue.push(message.guid);
            if (self._layers[message.guid]) {
              self.load_layer(message.guid);
            } else {
              self._layers[message.guid] = {source: "finder:"+message.id, guid: message.guid};
              self.load_layer(message.guid);
            }
          }
        } else if (message.state == "processing") {
          self.map_el.trigger("onLayerWarning", [ { layer: { guid: message.guid }, message: "Your dataset is currently being processed. It will be displayed on the map when finished.", processing: true } ]);
        } else {
          if (!self.layer_warnings[message.guid]) self.layer_warnings[message.guid] = {}; 
          if (!self.layer_warnings[message.guid][message.type]){
            self.layer_warnings[message.guid][message.type] = true;
            jq('#layer_'+message.guid).f1_layer('wire_layer_menu');
            self.map_el.trigger("onLayerWarning", [ { layer: { guid: message.guid }, message: self.error_message_with_link(message), processing: false } ]);
          }
        }
    },

    /** 
      Create an error message with a link to an action to take on the error
      @type {String} html for a link embedded in an error message 
    */
    error_message_with_link: function(message)
    {
      if (!message.errors) {
        message.errors = "";
      }
      var errors = jq.map(message.errors.split(";"), function(e,i) {return F1.Errors.message_for(e)})
      if (message.errors.match(/NOT_FOUND/)) {
        return errors.join("<br />")
      } else {
        var link_text = (errors.length > 1) ? "Fix these errors" : "Fix this error";
        var link_url = F1.host + "/datasets/" + message.id + "/edit";
        var msg = tmpl("<%= errors %><br /><a href='<%= link_url %>' target='_new'><%= link_text %></a>")
        return msg({errors: errors.join("<br />"), link_url: link_url, link_text: link_text});
      }
    },

	
    /**
       helps turn the js api's format into the flash api's options format.
    */
    map_options: function() {
      var opts = {}
      for (var p in this.options) opts[p] = this.options[p] //clone
      delete opts['map_id']
      delete opts['dom_id']
      delete opts['extent']
      delete opts['mode']
      return opts
    },
   
    /**
      Loads the Flahs map
      creates the correct flashvar format for flash 
    */
    load_flash_map: function() {
	    var flashvars  = {
        core_host: F1.host + '/', 
        maker_host: F1.host + '/', 
        finder_host: F1.host + '/', 
        dev: this.dev, 
        "sharedLibraryPath": F1.host + '/SharedLibrary.swf', 
        "SWFMode": (this.options.mode ? this.options.mode : "show"),
        state:"saved",
        useJSON:"true",
        hideGCLogo:"true",
        hideGILogo:"false",
        embed:"false",
        onMapInitialized: this.global_callback("onMapInitialized")
        //onTemporalReady:this.global_callback("onTemporalReady")
      }
      if (this.options.api_key) flashvars.api_key = this.options.api_key;
      if (this.map_id) flashvars.map_id = this.map_id
      //for (var property in this.options) flashvars[property] = this.options[property]; //merge
      // next line for backward compatibility:
      for (var property in this.options.flashvars) flashvars[property] = this.options.flashvars[property]; //merge
      
      if (this.options.map_json) flashvars.map_json = this.options.map_json;
      var params = {
        base: F1.host, 
        "allowScriptAccess":"always", 
        "allowNetworking": "all",
        "wmode": "transparent"
      };
      for (var property in this.options.params) params[property] = this.options.params[property]; //merge
      
      var attributes = {
        "allowScriptAccess":"always", 
        "allowNetworking": "all"
      };
      // checks for "view" param; if exists loads a swf with that name; else uses Wrapper
      var flash_swf = (this.options.view) ? "/"+this.options.view : "/Wrapper";
      if(this.dev == "true" || this.dev) {
        //flash_swf += "Debug"; 
      }
      flashvars.embed = false;
      swfobject.embedSWF( F1.host + flash_swf + ".swf?version=" + F1.Maker.version, 
                         this.id, "100%", "100%", "10.1",
                         F1.host + "/expressInstall.swf", 
                         flashvars, params, attributes, F1.Maker.Map.afterSWFEmbed)

    },

    /**
      builds the _layers object to make accessible. Avoids a race condition on "Temporalize"
    */
    build_layers: function(){
      var self = this;
      var layer_hash = {};
      jq.each(this.layers, function(i, layer) {
        if (!layer.guid)
        {
          layer.guid = (Math.round(Math.random() * 100000).toString(16)) + (new Date()).getTime().toString(16);
        }
        layer_hash[layer.guid] = layer;
      });
      this._layers = layer_hash;
    },
   

    /**
      Inits each initial layer from the map JSON object
    */ 
    load_starting_layers: function() {
      var self = this;
      self.grouped_layer_ids = [];
      jq.each(this._layers, function(i, layer) {
        if (layer.starting_layer) {
          self.map_el.bind("onLayerLoaded", function(e, obj) {
            if (obj && obj.layer && obj.layer.guid == layer.guid){
              self.map_el.trigger("onStartingLayerLoaded", [ obj ]);
            }
          });
        }
        if (layer["source"] && layer.source.match(/^finder\:/)) {
          self.grouped_layer_ids.push(layer.source.replace(/^finder\:/,''));
        }
        self.map_el.trigger("onLayerInitialized", [{ layer: layer }])
      });
      if (this.options.groupLayers){
        this._send_group_request(self.grouped_layer_ids);
      } else {
        this.init_poller();
      }    
    },

    /** 
      Send a group request for all the maps layers; saves hitting the server once per layer 
    */
    _send_group_request: function(ids){
      var self = this;
      var url = this.add_auth(F1.host + '/overlays/group?include_features=0&include_attributes=1&ids='+ids.join(','), true); 
      jq.get(url,function(data){
          self.grouped_layer_data = data;
          self.init_poller();
      },'json');
    },
    

    /** 
     * loads a layer into the flash/swf
     * requests overlay json from server and checks for a feature count
     * also handles the routing of dynspagg layers
     *
     * @param {String} layer guid
     *
     */
    load_layer: function(guid) {
      var self = this;
      if (jq.inArray(guid, self.loaded_layers) > -1){
        return;
      }
      self.loaded_layers.push(guid);
      if ( jq.inArray(guid, self.layer_queue) > -1 )
      {
        var finder_id = self._layers[guid].source.substr(7);
        var url = self.add_auth(F1.host + "/overlays/" + finder_id + ".json?include_features=0&include_attributes=1", true);
        //var url = self.add_auth(F1.host + "/overlays/" + finder_id + ".json?include_geometry=1&include_features=1&include_attributes=1&include_id=1&hex_geometry=1", true);
        // remove the layer from the layer queue.
        self.layer_queue.splice( jq.inArray(guid, self.layer_queue), 1); //self.layer_queue.indexOf(guid), 1);
        self._finder_layers[finder_id] = true;
        jq.get(url, function(data) {
          if (( (data.feature_count != undefined && self.options.feature_render_limit != undefined && data.feature_count >= self.options.feature_render_limit ) &&
            (data.is_raster == undefined || !data.is_raster) && (data.filters == undefined || !data.filters)) || 
            (data.levels != undefined || self._layers[guid].levels != undefined) ||
            (data.dynamic != undefined || self._layers[guid].dynamic != undefined)) {
              data.load_features = false;
              //data.features = []; // for JS loading all features;
          }
          log(data);
          
          self._finder_layers[finder_id] = data;
          self._add_layer_to_swf(data, guid);
          self.setClassificationFromLayer(data.classification)
           if ((data.feature_count != undefined && data.feature_count <= 0) && (data.is_raster != undefined && !data.is_raster) && (data.title != undefined && data.title.match(/^Annotations - Map/) == null)) {
              self.map_el.trigger("onLayerWarning", 
              [{ 
                layer: {guid: guid}, 
                message: F1.Errors.message_for("NO_FEATURES"), processing: false 
              }]);
          }
        }, 'json').error(function(e) {
          var lyr_fail = self._layers[guid];
          lyr_fail.load_features = false;
          self.swf.addLayer(lyr_fail);
          self.map_el.trigger("onLayerWarning", [ { layer: { guid: guid }, message: F1.Errors.message_for(e.status), processing: false } ]);
        });
      } else {
        self.swf.addLayer(self._layers[guid]);
      }
    },

    _check_dynspagg_level: function(l){
      var zoom = this.getZoom();
      var level = l.split(',');
      return (zoom >= level[0] && zoom <= level[1])
    },

    _get_layer_by_id: function(id) {
      // This is a stub - need to move all guid grabbers to this to support index as well -d
      return this.getLayer(id);
    },
       
    /**
      Add a specific layer to the map from the layer_queue 
      this is used to handle returns from the poller that may not come back in any sort of order
      @param {Object} a layer object
      @param {Object} a source id for that to match in the queue (cant rely on guid)
    */     
    _add_layers_in_queue_with_this_id_to_swf: function(data, source) {
      var self = this;
      for (var i = self.layer_queue.length - 1; i >= 0; i--) {
        var guid = self.layer_queue[i];
        if (self._layers[guid].source == source)
        {
          self._add_layer_to_swf(data, guid);
        }
      }
    },

    /**
      send a layer object to the swf 
    */
    _add_layer_to_swf: function(data, guid) {
      var self = this;
      jq.extend(data, self._layers[guid]);
      self._layers[guid] = data;
      if ( (self._layers[guid].data_type != undefined && self._layers[guid].data_type == 'WMS') && self._layers[guid].visibleLayers == undefined){
        self._layers[guid].visibleLayers = [self._layers[guid].data_attributes[0].original_name]
      }
      if (self._layers[guid] != undefined && self._layers[guid].extent != undefined && self._layers[guid].extent.join(',') == '0,0,0,0') {
        self._layers[guid]['zoomToExtent'] = false;
        /*if (self._layers[guid].feature_count != 1) {
          self.map_el.trigger("onLayerWarning",[{ layer: { guid: guid }, message: F1.Errors.message_for("NO_FEATURES"), processing: false }]);
        }*/
      }
      log('pass to flash', self._layers[guid]);
      self.swf.addLayer(self._layers[guid]);
    },

    /**
      loads a polymaps map instead of flash
      embeds JS and CSS for polymaps
    */
    load_js_map: function(){
      var self = this;
      // override the standard Map APIfor Polymaps 
      this.js_api_override()

      // add polymaps scripts 
      var base = F1.host+'/javascripts/'
      $LAB.script(base + "protovis/protodata.js")
      $LAB.script(base + "nns.min.js")
      $LAB.script(base + "polymaps/polymaps.min.js").wait()
      $LAB.script(base + "polymaps/pm.app.js").wait(function(){
        $LAB.script(base + "polymaps/pm.controls.js").wait()
        $LAB.script(base + "polymaps/pm.layer.js").wait()
        $LAB.script(base + "polymaps/pm.styler.js").wait()
  
        var style = document.createElement('link');
          style.setAttribute('href', F1.host+'/stylesheets/polymaps.css');
          style.setAttribute('rel', 'stylesheet');
          style.setAttribute('type', 'text/css');
          document.body.appendChild(style);

        // retrieve the map json 
        var map_url = self.add_auth(F1.host+'/maps/'+self.map_id+'.json?', false);
        jq.getJSON( map_url, function(map_json) {
          self.map_json = map_json;
          self.layers = map_json.layers;
          if (self.layers.length) self.build_layers();

          // set container height
          //jq('#'+self.options.dom_id).height(jq(window).height()+'px')        
         
          // define new global polymaps app object 
          new PM.Map({
            zoom: map_json.show_state.zoomLevel || 2,
            lat: map_json.extent[1] + (Math.abs(map_json.extent[1] - map_json.extent[3])/2),
            lon: map_json.extent[0] + (Math.abs(map_json.extent[0] - map_json.extent[2])/2),
            id: self.options.dom_id,
            container: self.options.dom_id,
            basemap: (map_json.show_state.basemap) ? map_json.show_state.basemap.name : 'Acetate'
          });

          // uses an instance pattern to support many maps at once
          self.map = PM.Map.instances[self.options.dom_id];

          // clean up (for embeds)
          self.map_el = jq('#'+self.options.dom_id);
          self.map_el.unbind();
          self.loaded_layers = [];
        
          self.wire_callbacks();
          // why is this duplicated here? why not call the fn above?? -chelm
          if (self.options.onMapInitialized) {
            self.options.onMapInitialized.apply(self,[self]);
          } 
          if (self.options.embed){
            self.onEmbedInitialized();
          }
          self.run_method_queue();
          self.load_starting_layers();
          if (!self.options.embed && self.options.onMapReady) {
            self.options.onMapReady.apply(self,[self]);
          }
          setTimeout(function() { self.map_el.trigger("onMapReady"); }, 1);
          if (self.state == "new")
          {
            var basemap = self.getBasemap();
            {
              self.switch_to_acetate({templates: 'http://a0.acetate.geoiq.com/tiles/{layer:acetate-bg}/{Z}/{X}/{Y}.png'});
            }
          }
          F1.Maker.current_map = self;
        })
      })
    },

    /**
      Contains the logic for adding and removing acetate roads and labels 
      @param {String} a template acetate URL
    */
    switch_to_acetate: function(template) {
      this.clear_acetate_layers();
      var road_url = "tile:" + template.templates.replace(/\{layer\:(\w|\-)+?\}/, 'acetate-roads')
      var label_url = "tile:" + template.templates.replace(/\{layer\:(\w|\-)+?\}/, 'acetate-labels')
      this.addLayer({source: road_url, title: "Roads", type: "tile"});
      this.addLayer({source: label_url, title: "Place Names", type: "tile"});
    },

    /**
      Calls clear acetate 
    */
    switch_from_acetate: function() {
      this.clear_acetate_layers();
    },

    /**
      Removes acetate roads and labels tile layers
    */
    clear_acetate_layers: function() {
      var self = this;
      jq.each(this.getLayers(), function(i, layer) {
        if (layer && layer.source && layer.source.match(/^tile\:.*(acetate)+.*/i))
        {
          self.removeLayer(layer.guid);
        }
      });
    },

    /**
      Overrides the Maker Map API and routes functions to JS based methods
    */
    js_api_override: function(){

      /**
       * Overrides callbacks for known events (ie onLayerLoaded)
       * @param {String} Name of the map event to set
       * @param {Function} callback to be called when event is triggered
      */
      /*this.setCallback = function(event_name, callback){
        //this[event_name] = callback;
        this.map_el.bind(event_name, function(e, obj) {
          callback(obj)
        });
      }*/

      /**
       Gets the pixel (x,y) coordinates of a given lon/lat pair
       @param {Float} lon
       @param {Float} lat
       @type {Object}
      */
      this.getPixelsFromLocation = function(lon, lat){
        return this.map.getPixelsFromLocation(lon,lat);
      }

      /**
       Gets the lon/lat coordinates of a given x/y pair
       @param {Float} lon
       @param {Float} lat
       @type {Object}
      */
      this.getLocationFromPixels = function(x,y){
        return this.map.getLocationFromPixels(x, y);
      }

      /**
        Gets the style object for a given layer guid
        @param {String} index a layer guid/index 
      */
      this.getLayerStyle = function(index) {
        if (typeof(index) != 'string') index = this.getLayerGuidByIndex(index);
        return this.getLayer(index).styles;
      }

      // The'true' in jq.extend makes it a deep merge so that we can merge something like {icon: {color: xxx}} and not
      // lose the rest of the icon styling.
      this.setLayerStyle = function(guid, style, filter) {
        if (!jq) throw "jQuery.extend required to enable styling";
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        var layer = this.getLayer(index);
        var new_style = jq.extend(true, layer.styles, style);
        this.map.setLayerStyle(guid, new_style, filter);
      }

      this.addLayerCategoryFilter = function(guid, filter) {
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        this.map.addLayerCategoryFilter(guid,filter);
      },

      // builds a JS expression with attr, op, value - simple for JS to eval
      this.prepExp = function(exp){
        var pieces = exp.split(' ')
        var js_exp =  {attribute: pieces[0].match(/(?:\[(.*?)\])/)[1], operator: pieces[1], value: eval(pieces[2])} 
        return js_exp
      }

      this.addFilter = function(guid, filter){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        if (!this._layers[guid].filters) this._layers[guid].filters = {}
        var js_filter = {expression: this.prepExp(filter.expression)}
        this._layers[guid].filters[filter.expression] = js_filter;
        this.setLayerStyle(guid, this.getLayer(guid).styles, this._layers[guid].filters);
      }

      this.getFilter = function(guid, expression){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        return this._layers[guid].filters[expression];
      }
      
      this.getFilters = function(guid, expression){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        return this._layers[guid].filters;
      }

      this.removeFilter = function(guid, filter){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        delete this._layers[guid].filters[filter.expression]
        this.setLayerStyle(guid, this.getLayer(guid).styles, this._layers[guid].filters);
      }

      this.clearFilters = function(guid){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        this._layers[guid].filters = {}
        this.setLayerStyle(guid, this.getLayer(guid).styles, this._layers[guid].filters)
      }
    
      this.setLayerInfoWindow = function(guid, filter){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        this.map.setLayerInfoWindow(guid, filter);
      }
      
      this.getBasemap = function(){
        return this.map.getBasemap()
      }

      this.setZoom = function(z){
        this.map.setZoom(z);
      }

      this.getZoom = function(){
        return this.map.getZoom();
      }

      this.setCenter = function(lat, lon){
        this.map.setCenter(lat, lon);
      }

      this.getCenter = function(){
        return this.map.getCenter();
      }

      this.setCenterZoom = function(lat, lon, z){
        this.map.setZoom(z);
        this.map.setCenter(lat, lon);
      }

      this.getCenterZoom = function(){
        return [this.getCenter(), this.getZoom()]
      }

      this.setExtent = function(minx, miny, maxx, maxy){
        this.map.setEextent([{lat: miny, lon: minx}, {lat: maxy, lon: maxx}])
      }

      this.getExtent = function(){
        return this.map.getExtent();
      }

      this.setStyle = function(params){
      	log('WARNING: setStyle has been deprecated. Please setMapStyle');
        this.setMapStyle(params);
      }

      this.getMapStyle = function(){
        return this.map.getMapStyle();
      }
      
      this.setMapStyle = function(params) {
        this.map.setMapStyle(params);
      }

      this.setLayerOrder = function(order) {
        this.map.setLayerOrder(order);
        this.map_el.trigger("onLayerReordered", []);
      }
      
      this.addHighlight = function(guid, highlight){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        if (!this._layers[guid].highlights) this._layers[guid].highlights = {}
        var js_highlight = {expression: this.prepExp(highlight.expression)}
        this._layers[guid].highlights[highlight.expression] = js_highlight;
        this.setLayerHighlight(guid, this.getLayer(guid).styles, this._layers[guid].highlights);
      }

      this.setLayerHighlight = function(index, style, highlight) {
        if (!jq) throw "jQuery.extend required to enable styling";
        if (typeof(index) != 'string') index = this.getLayerGuidByIndex(index);
        var new_style = jq.extend(this.getLayer(index).styles, style);
        this.map.setLayerHighlight(index, style, highlight);
      }
      
      this.removeHighlight = function(guid, highlight) {
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        delete this._layers[guid].highlights[highlight.expression]
        this.removeLayerHighlight(guid, this.getLayer(guid).styles, this._layers[guid].highlights)
      }
      
      this.removeLayerHighlight = function(index, style, highlight) {
        if (!jq) throw "jQuery.extend required to enable styling";
        if (typeof(index) != 'string') index = this.getLayerGuidByIndex(index);
        var new_style = jq.extend(this.getLayer(index).styles, style);
        this.map.removeLayerHighlight(index, new_style, highlight);
      }
      
      this.clearHighlights = function(guid, highlight) {
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        this._layers[guid].highlights = {}
        this.removeLayerHighlight(guid, this.getLayer(guid).styles, this._layers[guid].highlights)
      }
      
      this.getHighlights = function(guid) {
        var self = this;
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        return self.map.getHighlights(guid);
      }
      
      this.setSize = function(w, h){
        jq('#'+this.options.dom_id).width(w).height(h)
      }

      this.getFeature = function(guid, findex){
        if (!guid) return undefined;
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        return this.getFeatures(guid)[findex]
      }

      this.getFeatures = function(guid){
        if (!guid) return undefined;
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);  
        return this.map.getFeatures(guid); //this.map.layer_hash[guid].po_image.features();
      }

      this.getFilteredFeatureCount = function(guid){
        if (!guid) return undefined;
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        return this.map.layer_hash[guid].po_image.features().length - this.map.layer_hash[guid].filtered_feature_count;
      }

      this.getVisibleFeatures = function(guid){
        if (!guid) return undefined;
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        return this.map.layer_hash[guid].visible_features;
      }

      this.getVisibleFeatureCount = function(guid){
        if (!guid) return undefined;
        return this.getVisibleFeatures(guid).length;
      }

      this.setLayerTooltip = function(guid, tooltip){
        if (!guid) return undefined;
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        this.map.setLayerTooltip(guid, tooltip);
      }

      // relay the selected basemap id through an ajax call 
      this.setBasemap = function(basemap_id){
        var self = this;
        if (basemap_id){
          var url = F1.host+'/overlays/'+basemap_id+'.json?include_attributes=1&include_geometry=0&include_features=0'
          jq.getJSON( url, function(data) {
            var stats = data.data_attributes[0].statistics
            var template = {
              templates: stats.url_pattern,
              name: data.unique_name || data.name,
              unique_name: data.unique_name,
              projectionName: stats.srs || "EPSG:900913",
              mapType: stats.map_type || "Road",
              minZoom: stats.min_zoom || 2,
              maxZoom: stats.max_zoom || 18,
              providerCredit: stats.provider_credit || "",
              providerCreditColor: stats.provider_credit_color || "0x555555"
            }
            if (data.name.toLowerCase().match(/acetate/)){
              if (!self.getBasemap().name.toLowerCase().match(/acetate/)) {
                log('switching to acetate', template);
                self.switch_to_acetate(template);
              }
            } else {
              self.switch_from_acetate();
            }
            if (template.templates) template.templates = template.templates.replace(/\{layer\:((?:\w|\-)+?)\}/, "$1")

            self.map.setBasemap(data.name, template)
          })
        }
      }

      this.load_layer = function(guid) {
        var self = this;
        if (self.loaded_layers.indexOf(guid) > -1)
        {
          return;
        }
        self.loaded_layers.push(guid);
        if (self.layer_queue.indexOf(guid) > -1)
        {
          var finder_id = self._layers[guid].source.substr(7);
          var url = this.add_auth(F1.host + "/overlays/" + finder_id + ".json?include_features=1&include_attributes=1&geometry_format=geojson", true);
          self.layer_queue.splice(self.layer_queue.indexOf(guid), 1);
          self.map_el.trigger('onLayerParsing',{layer:self._layers[guid]});
          jq.getJSON(url, function(data) {
            jq.extend(data, self._layers[guid]);
            self._layers[guid] = data;
            self.map_el.trigger('onLayerParsed',{layer:self._layers[guid]});
            if (self._layers[guid].url_type && self._layers[guid].url_type == 'tile'){
              var pmlayer = new PM.Map.TileLayer(self._layers[guid], {'app_id': self.options.dom_id});
              self.add_to_pm(pmlayer);
            } else if (self._layers[guid].url_type && self._layers[guid].url_type == 'climgen') {
              var pmlayer = new PM.Map.ClimgenLayer(self._layers[guid], {'app_id': self.options.dom_id, 'host':F1.host});
              self.add_to_pm(pmlayer);
            } else {
                  self._layers[guid].features = data.features;
                  var pmlayer = new PM.Map.GeoJSONLayer(self._layers[guid],
                    {
                      'encoded': false, 
                      'tiled':false, 
                      'style':self._layers[guid].styles, 
                      'app_id':self.options.dom_id
                    });
                  self.add_to_pm(guid, pmlayer);
            }
          });
        } else {
          //log("adding layer to Polymaps", self._layers[guid]);
        }
      }

      this.add_to_pm = function(guid, pmlayer){
        var self = this;
        self.map.addLayer(pmlayer, true);
        self.map_el.trigger('onLayerLoaded', [{layer:self._layers[guid]}])
      }

      this.addLayer = function(layer_object){
        var style = 'default'
        if (!layer_object.guid)
        {
          layer_object.guid = (Math.round(Math.random() * 100000).toString(16)) + (new Date()).getTime().toString(16);
        }
        if (layer_object["source"] && layer_object.source.match(/^finder\:/))
        {
          var id = parseInt(layer_object.source.substr(7));
          this.map_el.trigger("onLayerInitialized", [{ layer: layer_object}])
          this.layer_poller.update([{ id: id, guid: layer_object.guid }]);
          this._layers[layer_object.guid] = layer_object;
          this.layer_queue.push(layer_object.guid);
        } else {
          if (layer_object.type && layer_object.type == 'tile'){
            var pmlayer = new PM.Map.TileLayer(layer_object, {'app_id': this.options.dom_id});
          } else if (layer_object.type && layer_object.type == 'climgen') {
            var pmlayer = new PM.Map.ClimgenLayer(layer_object, {'app_id': this.options.dom_id, 'host':F1.host});
          } else {
            var pmlayer = new PM.Map.GeoJSONLayer(layer_object,{'tiled':false, 'style':layer_object.styles, 'app_id':this.options.dom_id});
            pmlayer.zoomToExtent = true;
          }
          this.map_el.trigger("onLayerInitialized", [{ layer: layer_object}])
          this.map.addLayer(pmlayer,true);
        }
      }

      this.removeLayer = function(guid){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        this.map.removeLayer(guid);
      }

      this.showLayer = function(guid, vis){
        if (typeof(vis) == undefined) vis = true;
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        this.map.showLayer(guid, vis);
      }

      this.getLayer = function(guid) {
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        return this.map.getLayer(guid);
      }

      this.getLayers = function() {
        var self = this;
        //var layers = (JSON.parse(this.swf.getLayers()).length == 0) ? this.map_json.layers : JSON.parse(this.swf.getLayers());
        
        var map_layers = this.map.getLayers();
        var layers = [];
        jq.each(map_layers, function(guid, layer) {
            if (layer.title) {
              var save_layer = {};
              jq.each(self._saved_layer_attributes, function(i, attr) {
                save_layer[attr] = layer[attr];
              });
              layers.push(save_layer);
            }
            if (self.dynspagg_id_list[layer.source]){
              layers.splice( jq.inArray(self.dynspagg_id_list[layer.source].guid, layers), 1);
            }
          });
        layers.sort(function(a1,b1) {
          var a = (''+a1.order).toLowerCase();
          var b = (''+b1.order).toLowerCase();
          if (a > b) return 1;
          if (a < b) return -1;
          return 0; 
          //return a.order - b.order 
        });
        return layers;
      }
  
      this.getLayerColors = function(index) { // TODO: get ramps if available
        if (index == null) return
        return [this.map.getLayer(index).styles.icon.color.toString(16).toUpperCase()]
      }

      this.resize_map_to_fit = function(options) {
        if (!options) options = {}
      }

      this.updateFeatures = function(guid, updates){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        this._update_feature_mods(guid, 'updates', updates);
        this.map.updateFeatures(guid, updates);
      }

      this.deleteFeatures = function(guid, deletes){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        this._update_feature_mods(guid, 'deletes', deletes);
        this.map.deleteFeatures(guid, deletes);
      }

      this.addFeatures = function(guid, features, replace, save){
        if (save == undefined) save = false;
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        //try {
          // could be expensive check if all feature loading is done in JS
          jq.each(features, function(i,feature){
            if (feature['id'] == undefined) features[i]['id'] = (Math.round(Math.random() * 100000).toString(16)) + (new Date()).getTime().toString(16);
          })
          if (save != false) this._update_feature_mods(guid, 'adds', features);
          this.map.addFeatures(guid, features, replace);
        //} catch(err) {
        //  log('add features failed', err);
        //}
      }

      this.setLayerDynamics = function(guid, dynamics){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        var layer = this.getLayer(guid);
        layer.dynamic = dynamics;
        this.setLayerAttributes(guid, {dynamic: layer.dynamic});
        this.map_el.trigger('onLayerDynamicsChanged', { guid: guid });
      }

      this.setLayerAttributes = function(guid, attrs){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        this.map.setLayerAttributes(guid, attrs);
      }

      //getTemporalResolution setTemporalResolution getTimeSlots setTimeSpan getTimeSpan getGlobalTimeSpan getVisibleTimeSpan setLayerTemporalAttribute
    },

    /**
      embeds a google earth instance
      assumes that google jsapi is already loaded
      @param {Object} data 
    */
    load_globe_map: function(data){
      jq('.layer_panel').hide();
      var self = this;
      // Adds the jsapi dynamically here
      var ge_utils = F1.host + "/javascripts/googleearth_utils.js";
      $LAB.script(ge_utils)
      var jsapi = "http://www.google.com/jsapi?sensor=false&key="+this.options.googlekey+"&callback="+this.global_callback("load_google");
      $LAB.script(jsapi)
    },

    /**
      Called when the google JS api successfully returns, creates a Earth API instance   
    */
    load_google: function(){
      var self = this;
      google.load("earth", "1", {callback: function(){
        jq.getJSON( self.add_auth(F1.host+'/maps/'+self.map_id+'.json?', false), function(map) {
          google.earth.createInstance(self.options.dom_id, function(){return self.initCB.call(self, map, arguments)}, self.failCB);
        });
      }});
      
    },

    /**
      Fail over callback for the Google Earth API 
    */
    failCB: function(errorCode) {
      //alert('There was a problem creating the Google Earth instance of the map.');
    },

    /*
     Primary init callback for GE API
    */
    initCB: function(map, instance) {
      var self = this;
      // makes an ajax to get the map json (need the extent and layers) 
      //jQuery.getJSON( F1.host+'/maps/'+self.map_id+'.json', function(map) { 
        self.ge = instance[0];
        self.ge_layers = [];
        self.ge.getWindow().setVisibility(true);
        self.geeZoomLevelToCameraAltitudeMap = zoomLevelToAltitudeMap();

        // add each layer separately to enable viz toggling
        for (var i=0; i < map.layers.length; i++) {
          if (map.layers[i].type == "FinderData" && map.layers[i].visible) {
            var url = F1.host+'/maps/'+self.map_id+'/layers/'+i+'.kmz';
            self.add_kml_layer(url);
          }
        }

        // add a navigation control
        self.ge.getNavigationControl().setVisibility(self.ge.VISIBILITY_AUTO);

        // add some layers
        self.ge.getLayerRoot().enableLayerById(self.ge.LAYER_BORDERS, true);
        self.ge.getLayerRoot().enableLayerById(self.ge.LAYER_ROADS, true);

        // zoom to the map's center 
        var lat = (map.extent[1] + map.extent[3])/2;
        var lon = (map.extent[0] + map.extent[2])/2;
        var zoomLevel = (map.show_state.zoomLevel == null || typeof(map.show_state.zoomLevel) == "undefined") ? 10 : map.show_state.zoomLevel; 
        var la = self.ge.createLookAt('');
        la.set(lat, lon, 100, self.ge.ALTITUDE_RELATIVE_TO_GROUND, 0, 0, self.geeZoomLevelToCameraAltitudeMap[zoomLevel]);
        self.ge.getView().setAbstractView(la);
      //});


      // overrides the showLayer function
      this.showLayer = function(index, vis){
        this.ge_layers[index].setVisibility(vis);
      };

      this.showTime = function(vis){
        this.ge.getTime().getControl().setVisibility((vis) ? 1 : 0);
        this.ge.getTime().setHistoricalImageryEnabled(vis);
      }
    },

    /** 
      add a kml layer to the globe
      allows for devs to add new layers w/just a kml url
      @param {String} url - a url to the kml/kmz endpoint 
    */
    add_kml_layer: function(url){
      var self = this;
      google.earth.fetchKml(self.ge, url, function(kmlObject){
        if (kmlObject) {
          self.ge_layers.push(kmlObject);
          self.ge.getFeatures().appendChild(kmlObject);
        } else {
          alert('Sorry. The KML File that we tried to load was not properly prepared.');
        }
      });
    },
    
    // Run a callback after the SWF has been embedded but before the API is available.
    // This makes it possible to, for example, set the height of the swf before any
    // code within the swf is run.
    afterSWFEmbed: function(e) {
      if (this.options.onMapEmbed) this.options.onMapEmbed(e)
    },
    
    // Flash callbacks don't preserve scope. This gets around that by 
    // creating a unique global callback that flash can call. It routes 
    // the request back to this scope to the function named by 'name'.
    global_callback : function(name) {
      var self = this
      var signature = "__" + (new Date()).getTime().toString(16) + "_"
      var fun = function(){this[name]()}
      window[signature+name] = function(){return fun.apply(self,arguments)}
      return signature+name
    },
  

    /**
      Steps through the method queue 
      The method queue is a series of queued function calls built while loading the map
    */
    run_method_queue: function() {

      var meth;
      this.flash_api_ready = true;
      
      while (meth = this.method_queue.shift()) {
        this[meth[0]].apply(this, meth[1]);
      }
      
    },

    /**
      Resizes the map to fit the viewable DOM area
     */
  	resize_map_to_fit: function(options) {
  	  if (!options) options = {};
  	  if (options.margin == null)     options.margin    = 77;
  	  if (options.minHeight == null)  options.minHeight = 600;
  		var windowHeight = document.viewport.getHeight();
  		var mapHeight = Math.max(windowHeight - options.margin, options.minHeight);
  		if (this.swf) this.swf.style.height = mapHeight + "px";
  	},
  	
    /**
      Adds the map location to the URL hash
    */
  	store_map_location: function() {
      centerZoom = FlashMap.map.getCenterZoom();
      location.hash = "lat="+centerZoom[0].lat+"&lon="+centerZoom[0].lon+"&zoom="+centerZoom[1];
    },
    
    /**
      Reads the map url hash, looks for location info, zooms to it
    */
    load_map_location: function() {
        var zooms;
        if(zooms = location.hash.match(/lat=([-\d\.]+)&lon=([-\d\.]+)&zoom=(\d+)/)) {
            centerZoom = FlashMap.map.setCenterZoom(zooms[1],zooms[2],zooms[3]);
        }
    },

    /**
      Initializes the poller object. 
      This object polls the server at an interval to check for changes to a layer's state
    */
    init_poller: function(){
      var self = this;
      var id_list = jq.map(this.layers, function(layer, i) {
        if (layer.source.match(/^finder/))
        {
          return {id: parseInt(layer.source.substr(7)), guid: layer.guid};
        } else if (self.swf) {
          self.swf.addLayer(layer);
        } else if (self.options.view == 'javascript' || self.options.view == 'globe'){
          self.addLayer(layer)
        }
      });
      // start it, only starts if there are layers in the map
      this.map_el.bind("onLayerStateChange", function(e, obj) { self.onLayerStateChange(obj); });
      this.layer_poller = new F1.Poller({overlays:id_list, dom_id:this.options.dom_id })
      this.layer_poller.start()
    },

   
    /**
      Updates the internal feature modification object; used for feature CRUD in map
      @param {String} guid - the layer guid/index
      @param {String} type - one of "adds", "deletes", "updates"
      @param {Array} feature_list - list of features
    */ 
    _update_feature_mods: function(guid, type, feature_list){
      var self = this;
      this.closeInfoWindow();
      if (!this.layer_feature_mods[guid]) this.layer_feature_mods[guid] = {};
      if (!this.layer_feature_mods[guid][type]) {
        this.layer_feature_mods[guid][type] = feature_list;
      } else {
        if (type != 'deletes'){
          jq.each(feature_list, function(i,feature){
            jq.each(self.layer_feature_mods[guid][type], function(j,upfeature){
              if (feature.id == upfeature.id) {
                self.layer_feature_mods[guid][type][j] = jq.extend(upfeature, feature);
                feature_list.splice(i,1);            
              }
            })
          })
        }
        this.layer_feature_mods[guid][type] = this.layer_feature_mods[guid][type].concat(feature_list);
      }
      //log('Feature Mod Object:', this.layer_feature_mods)
    },

    _json_stringify: function(obj){
      return JSON.stringify(obj, function(key, value) {
        if (typeof this[key] == 'object' && Object.prototype.toString.apply(this[key]) === '[object Array]') {
          return this[key];
        } else {
          return value;
        }
      });
    },

    /**
      Simple object to store logo names for various base maps
    */
    provider_logos: {
      'Google Road': 'logo.google.png',
      'Google Aerial': 'logo.google.png',
      'Google Hybrid': 'logo.google.png',
      'Google Terrain': 'logo.google.png',      
      'Microsoft Road': 'logo.bing.png',
      'Microsoft Aerial': 'logo.bing.png',
      'Microsoft Hybrid': 'logo.bing.png',
      'Yahoo Road': 'logo.yahoo.png',
      'Yahoo Aerial': 'logo.yahoo.png',
      'Yahoo Hybrid': 'logo.yahoo.png',
      'MapQuest':'logo.mapquest.png'
    }, 
      
    /**
      A series of desired saved attributes, helps to trim down the size of map objects 
      saves only what we want/need
    */
    _saved_layer_attributes: "filters feature_count guid opacity order source styles subtitle temporal title visible type url_type visibleLayers geometry_types levels info_window_filter load_features stream_id stream_bbox categoryFilter categoryFilters infoWindowFilter dynamic".split(" "),
    _override_layer_attributes: "title subtitle".split(" "),
   

    /**
      wraps a series of functions that call flash
     */ 
    wrapped_methods: {
      getLayerStyle: function(index) {
        return this.swf.getLayer(index).styles
      },
     
      getExtent: function(){
        var map_extent = this.swf.getExtent();
        //var extent = [map_extent.east, map_extent.south, map_extent.west, map_extent.north];
        return map_extent;
      },
 
      /**
        Non-destructivly set deep styles to work around a flash api deficiency
        The'true' in jq.extend makes it a deep merge so that we can merge something like {icon: {color: xxx}} and not
        lose the rest of the icon styling.
        @param {String} index the layer guid or index
        @param {Object} style a new style object
      */
      setLayerStyle: function(index, style) {
        if (!jq) throw "jQuery.extend required to enable styling"
        if (typeof(style) == undefined) style = {}; 
        var new_style = jq.extend(true, this.getLayer(index).styles, style);
        if (style.fill && style.fill.colors) new_style.fill.colors = style.fill.colors;
        log('NEW STYLE', new_style);
        this.swf.setLayerStyle(index, new_style);
        this.map_el.trigger('onLayerStyleChange', [{layer:this.getLayer(index)}])
      },

      /**
        sets the layer attributes, used in the info window
        @param {String} guid the layer guid or index
        @param {Object} attributes an ojbect of data attributes and stats 
      */
      setLayerAttributes: function(guid, attributes){
        //log('setLayerAttributes', guid, attributes)
        try {
          if (this.swf) this.swf.setLayerAttributes(guid, attributes)
        } catch(err) {
          log(err)
        }
      },

      /**
        Set a layer properties
        This is only used for backwards compat
      */
      setLayerProperties: function(guid, attributes){
        if (this.swf) this.swf.setLayerAttributes(guid, attributes)
      },

      /**
        set a layer's temporal attribute
        this is the attribute used to animate thru time
      */
      setLayerTemporalAttribute: function(guid, attribute) {
        log("setLayerTemporalAttribute", guid, attribute);
        if (this.swf) this.swf.setLayerTemporalAttribute(guid, attribute);
      },

      /**
        Sets the order of the layers in the layers palette 
      */
      setLayerOrder: function(order) {
        if (this.swf)  this.swf.setLayerOrder(order);
        this.map_el.trigger("onLayerReordered", []);
      },

      /**  
        Updates an existing basemap by passing in options
        currently only applies to wms basemaps
        @param {object} options - hash of wms options to change 
        for example {LAYERS:"landsat,sea",SRS:"EPSG:4326"}
      */
      updateBasemap: function(options){
        var self = this;
        if (options){
          var basemap = this.getBasemap();
          var wmsparams = jq.extend(basemap.wms, options)
          var template = {
            templates: basemap.templates,
            name:  basemap.name,
            uniqueName :  basemap.uniqueName,
            minZoom: 2,
            maxZoom: 18,
            projectionName: wmsparams.SRS
          };
          self.swf.setBasemap(basemap.name, template, wmsparams)
        }
        
      },
      /**
        Sets the basemap of the map
        Relays the selected basemap id through an ajax call before we pass to flash 
        @param {Integer} basemap_id the id of the basemap
      */
      setBasemap: function(basemap_id){
        var self = this;
        if (basemap_id){
          var url = F1.host+'/overlays/'+basemap_id+'.json?include_attributes=1&include_geometry=0&include_features=0';
	        jq.getJSON( url, function(data) {

            var template;
            
            if (data.data_type == 'WMS' || data.url_type == "wms") {  // load in wms layer, show the first layer
              
              var default_layer = data.data_attributes[0];
              
              // TODO abstract this SRS chooser helper out

              var present_srs_array = (data.process_notes +","+ default_layer.statistics.srs).split(",");
              var allowed_srs_array = ["EPSG:900913", "EPSG:4326", "EPSG:3411", "EPSG:3412"];
              var present_allowed = [];

              jq.each(allowed_srs_array, function(index, value) {

              if (jq.inArray(value,  present_srs_array) != -1) {
                present_allowed.push(value);
                }
              });

              var default_layer_srs = present_allowed.length > 0 ? present_allowed[0] : "EPSG:900913"  //if it doesn't have it in the list, lets just use 900913'

              var wmsparams = {
                LAYERS: default_layer.original_name,
                SRS: default_layer_srs,
                VERSION: default_layer.statistics.version || "1.1.1",
                SERVICE: "WMS",
                REQUEST: "GetMap",
                FORMAT: "image/png",
                STYLES: "",
                EXCEPTIONS: "application/vnd.ogc.se_inimage",
                WIDTH:"256",
                HEIGHT:"256"
              };

              template = {
                templates: data.url,
                name: data.name,
                uniqueName : data.unique_name,
                minZoom: 2,
                maxZoom: 18,
                projectionName: wmsparams.SRS
              };

              self.swf.setBasemap(data.name, template, wmsparams);

              var all_layers = []
              jq(data.data_attributes).each(function(i, layer){
                  all_layers.push({ "original_name" : layer.original_name, "name" : layer.name });
              });
              self.map_el.trigger('on_wms_basemap_change', {layers: all_layers, srses: present_allowed});

            } else {


            var stats = data.data_attributes[0].statistics
            template = { 
              templates: stats.url_pattern.replace('|',','), 
              name: data.unique_name || data.name,
              uniqueName: data.unique_name,
              projectionName: stats.srs || "EPSG:900913", 
              mapType: (stats.map_type) ? stats.map_type.toUpperCase() : "ROAD",
              minZoom: stats.min_zoom || 2, 
              maxZoom: stats.max_zoom || 18, 
              providerCredit: (stats.credit) ? "<font style='color:"+(stats.credit_color || "0x777777")+"'>"+stats.credit+"</font>" : "", 
              providerCreditColor: stats.credit_color || "0x777777",
              provider: (stats.tile_type) ? stats.tile_type.toLowerCase() : 'custom'
            }
            template.providerLogoURL = (self.provider_logos[data.name]) ? F1.host + '/images/' + self.provider_logos[data.name] : null;

            if (data.name.toLowerCase().match(/acetate/)){ 
              if (!self.swf.getBasemap().name.toLowerCase().match(/acetate/)) {
                self.switch_to_acetate(template);
              }
            } else {
              self.switch_from_acetate();
            }
            template.templates = template.templates.replace(/\{layer\:((?:\w|\-)+?)\}/, "$1")
            self.swf.setBasemap(data.name, template)
            }

          })
        }
      },

      /**
        Sets the title of the map
        @param {String} title
      */
      setTitle: function(title)
      {
        this.title = title;
        this.map_el.trigger("onMapTitleChange", [title]);
      },

      /**
        Sets the Description of the map
        @param {String} description
      */
      setDescription: function(description)
      {
        this.description = description;
        this.map_el.trigger("onMapDescriptionChange", [description]);
      },
      
      /**
        Sets the Classification of the map
        @param {Object} classification
      */
      setClassification: function(classification)
      {
        if(classification != null){
          this.classification = classification;
          this.classification_id = classification.id;
          this.map_el.trigger("onMapClassificationChange", [classification]);          
        }
      },
      
      /**
        Sets the Classification of the map to the classification of a layer based on certain conditions
        @param {Object} classification
      */
      setClassificationFromLayer: function(classification){
        if(classification != null){
          if(this.classification == null || this.classification.ranking > classification.ranking){
            this.setClassification(classification);
            var next_classification = classification.id;
            while((next_classification = jq('#map_classification_id option[value="' + next_classification + '"]').next()).length > 0){
              next_classification.attr('disabled', 'true');
              next_classification = next_classification.val();
            }
          }
        }
      },
      
      /**
        Sets the Classification of the map by ID
        @param {String} classification id
      */
      setClassificationId: function(classification_id)
      {
        this.classification_id = classification_id;
        this.setClassification(all_classifications[classification_id])
      },
      
      /**
        Sets the permissions of the map
        @param {Object} permissions
      */
      setPermissions: function(permissions)
      {
        this.permissions = permissions;
      },

      /**
        sets the tags for the map 
      */
      setTags: function(tags)
      {
        this.tags = tags;
      },


      /**
        Save the map!
        builds the full on map object to pass back to the server to be saved. 
        @param {Function} callback - a callback to be called after the map has been saved. 
      */
      saveMap: function(callback)
      { 
        var self = this;
        var layers = this.getLayers();
        var map_extent = this.getExtent();
        var extent = [map_extent.west, map_extent.south, map_extent.east, map_extent.north];
        var map_obj = {};
        map_obj.title = (this.title || this.map_json.title || 'Untitled Map');
        map_obj.description = (this.description || this.map_json.description || "No description given");
        map_obj.classification_id = (this.classification_id || this.map_json.classification_id || null);
        if (this.permissions)
          map_obj.permissions = this.permissions
        if (this.tags)
          map_obj.tags = this.tags
        
        map_obj.extent = extent;
        var basemap = this.getBasemap().uniqueName || this.getBasemap().name ;
        var basemap_wms = this.getBasemap().wms;
        var zoom = this.getZoom();
        
        // current legend state
        try {
          var map_style = this.getMapStyle();
          var legend = (map_style.legend && map_style.legend['expanded']) ? true : false;
        } catch (e){
          var legend = false;
        }
        
        map_obj.show_state = {
          zoomLevel: zoom,
          basemap: basemap,
          legend_open: legend
        };

        if (basemap_wms) {
          map_obj.show_state.basemap_wms = {
            layers: basemap_wms.LAYERS,
            srs: basemap_wms.SRS
          }
        }
        
        map_obj.state = "saved";
        map_obj.shared = true;
        
        if (layers && layers.length > 0) {
          map_obj.layers = layers;
        } else {
          map_obj.layers = [];
        }
        log(map_obj);
        var data = JSON.stringify({map: map_obj});

        var url = F1.host + "/maps/" + this.map_id + ".json?";
        jq.ajax({
          type: "PUT",
          contentType: 'application/json',
          url: url,
          data: data,
          dataType: 'json',
          processData: false,
          success: function(data) {
            self.map_el.trigger("onMapSaved", []);
            if (callback)
              callback(data);
            jq.each(self._layers, function(guid, layer){
              log(guid, layer);
              self.saveFeatures(guid);
            })
          }
        });

      },


      /**
        Adds a layer to the map
        Goes into a queue, gets polled, then peeled off the queue and added to the SWF/Polymaps
        @param {String} layer_object a full layer object 
        @param {Boolean} zoomToExtent force a zoom to the dataset extent
      */  
      addLayer: function(layer_object) {
        if (!layer_object.guid) {
          layer_object.guid = (Math.round(Math.random() * 100000).toString(16)) + (new Date()).getTime().toString(16);
        }
        if (layer_object["source"] && layer_object.source.match(/^finder\:/)) {
          var id = parseInt(layer_object.source.substr(7));
          if ((layer_object.feature_count && layer_object.feature_count >= this.options.feature_render_limit && !layer_object.is_raster && !layer_object.filters) || layer_object.levels) {
            layer_object.load_features = false;
          }
          this.map_el.trigger("onLayerInitialized", [{ layer: layer_object}]);
          this.layer_poller.update([{ id: id, guid: layer_object.guid }]);
          this._layers[layer_object.guid] = layer_object;
          this.layer_queue.push(layer_object.guid);
        } else {
          this._layers[layer_object.guid] = layer_object;
          this.swf.addLayer(layer_object);
        }
        if (layer_object.dynspagg_level) this.dynspagg_id_list[layer_object.source] = {
          parent_guid: layer_object.dynspagg_level.parent_guid, 
          level: layer_object.dynspagg_level.level, 
          guid: layer_object.guid
        };
        return layer_object.guid;
      },

      /** 
        Updates the layers dynamic object
      */
      setLayerDynamics: function(guid, dynamics){
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);  
        var layer_object = this._layers[guid];
        layer_object.dynamic = dynamics;
        this.swf.setLayerAttributes(guid, {dynamic: layer_object.dynamic});
        this.map_el.trigger('onLayerDynamicsChanged', { guid: guid });
      },


      /**
        Sets the layer title 
        @param {String} guid
        @param {String} title
      */
      setLayerTitle: function(guid, title) {
        var self = this;
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        if (this.swf) this.swf.setLayerTitle(guid, title);
        if (this.swf) this.swf.setLayerAttributes(guid, {title: title}); // andrei added a new method
        if (self._layers[guid])
        {
          self._layers[guid]['title'] = title;
          self.map_el.trigger('onLayerTitleChange', [ { layer: self._layers[guid] } ]);
        }
      },

      /**
        sets the layer subtitle 
        @param {String} guid
        @param {String} title
      */      
      setLayerSubTitle: function(guid, title) {
        var self = this;
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        if (this.swf) this.swf.setLayerSubTitle(guid, title);
        if (this.swf) this.swf.setLayerAttributes(guid, {subtitle: title}); // andrei added a new method
        if (self._layers[guid])
        {
          self._layers[guid]['subtitle'] = title;
          self.map_el.trigger('onLayerTitleChange', [ { layer: self._layers[guid] } ]);
        }
      },


      /**
        Retrieve a layer's guid based on an index 
      */
      getLayerGuidByIndex:function(layer_index){
        var guid, i = 0;
        for (var lyr in this._layers){
          if (layer_index == i){
            guid = lyr;
          }
          i++;
        };
        return guid;
      },

      /**
        Gets a layer from the current map. 
        Returns only the attributes defined in the _saved_layer_attributes array
        @param {String} guid layer guid/index
        @type {Array} a array of layer objects 
      */
      getLayer: function(layerID) {
        var self = this;
        
        if (typeof(layerID) != 'string') layerID = this.getLayerGuidByIndex(layerID);
        
        var layer = JSON.parse(this.swf.getLayer(layerID));
        if (!layer && !self._layers[layerID]) {
          return;
        }
        if (!layer) layer = {};
        
        jq.each(self._saved_layer_attributes, function(i, attr) {
          if (self._layers[layerID] && self._layers[layerID][attr] && (layer[attr] == null || jq.inArray(attr, self._override_layer_attributes) >= 0)) {
            layer[attr] = self._layers[layerID][attr];                        
          }
        });
        if (!layer["layer_id"] && layer["order"])
          layer["layer_id"] = layer["order"];

        if (layer.temporal && !this.swf.getLayerTemporalAttribute(layerID)){
          layer.temporal = null;
        }

        return layer;
      },


      /**
        Gets all layers for the current map. 
        For each layers is returns only the attributes defined in the _saved_layer_attributes array
        @type {Array} a array of layer objects 
      */
      getLayers: function() {
        var self = this;
        //var layers = (JSON.parse(this.swf.getLayers()).length == 0) ? this.map_json.layers : JSON.parse(this.swf.getLayers());
        var layers = JSON.parse(this.swf.getLayers());
        var included_ids = [];
        jq.each(layers, function(i, layer) {
          jq.each(self._saved_layer_attributes, function(i, attr) {
            if (self._layers[layer.guid] && self._layers[layer.guid][attr] && (layer[attr] == null || jq.inArray(attr, self._override_layer_attributes) >= 0)) {
              layer[attr] = self._layers[layer.guid][attr];
            }
          });
          if (layer.temporal && !self.swf.getLayerTemporalAttribute(layer.guid)){
            layer.temporal = null;
          }
          included_ids.push(layer.guid);
        });
        // Now add any layers not in flash (ie errored overlays, non permitted, etc) - 
        // we dont want to lose these when a user hits save unless they specifically remove them
        if (!this.options.embed){
          jq.each(self._layers, function(guid, layer) {
            if (layer.title && included_ids.length > 0 && jq.inArray(guid, included_ids) < 0) {
              var save_layer = {};
              jq.each(self._saved_layer_attributes, function(i, attr) {
                save_layer[attr] = layer[attr];
              });
              layers.push(save_layer);
            }
            if (self.dynspagg_id_list[layer.source]){
              layers.splice( jq.inArray(self.dynspagg_id_list[layer.source].guid, layers), 1);
            }
          });
        }
        layers.sort(function(a1,b1) { 
          var a = (''+a1.order).toLowerCase();
          var b = (''+b1.order).toLowerCase();
          if (a > b) return 1;
          if (a < b) return -1;
          return 0;  
          //return a.order - b.order 
        });
        return layers;
      },
      
      /**
        Removes a layer from the map
        @param {String} layer guid/index
        @type {Boolean} 
      */
      removeLayer: function(guid) {
        var self = this;
        if (self.swf && !self.swf.getLayer(guid) && !self._layers[guid])
          return false;
        if (self._layers[guid]) {
          delete self._layers[guid];
        }
        if (self.swf && self.swf.getLayer(guid) && self.swf.getLayer(guid) != "{}")
        {
          self.swf.removeLayer(guid);
        } else {
          self.map_el.trigger("onLayerRemoved", [ { layer: { guid: guid } } ]);
        }
        
        return true;
      },


      /**
        Get layer geometry types
        @param {String} guid layer guid/index
        @type {Array} a array of geometry types in the given layer
      */
      getGeometries: function(guid) {
        if (!guid)
        {
          return [];
        }
        if (this._layers[guid] && this._layers[guid].geometry_types)
        {
          return this._layers[guid].geometry_types;
        }
        return [];

      },

      /**
        get layer attributes
        @param {String} guid layer guid/index
        @type {Array} a array of attributes 
      */
      getAttributes: function(guid) {
        if (typeof(guid) != 'string') guid = this.getLayerGuidByIndex(guid);
        if (!guid)
        {
          return [];
        }
        if (this._layers[guid] && this._layers[guid].data_attributes)
        {
          return this._layers[guid].data_attributes;
        }
      },

      /** 
        Retreives all attibutes in map. Each layer's attributes
        @type {Object} a hash of attributes keyed with ayer guids
      */
      getAllAttributes: function() {
        var attrs = {};
        jq.each(this._layers, function(guid, layer) {
          if (layer.data_attributes)
          {
            attrs[guid] = layer.data_attributes;
          }
        });
        return attrs;

      },

	/*
      getFeatures: function(layer_id, callback, options) {
        var self = this;
        var id = self._get_layer_by_id(layer_id).source.split(":")[1];
        if (!this.cached_features) this.cached_features = {};
        if (this.cached_features[id]) {
          if (Object.isEmpty(this.cached_features[id]))
          {
            setTimeout(function() { self.getFeatures(layer_id, callback, options); }, 500);
          } else {
            callback(this.cached_features[id]);
          }
          return;
        }
        this.cached_features[id] = {};
        if (!options) options = {};
        //var finder_id = this._layers[id].id;
        var finder_id = id;
        var attributes = null;
        var features = null;
        var url_options = ["include_geometry=0", "include_attributes=1", "include_features=1", "callback=?"];
        if (options["sort"]) {
          url_options.push('sort='+options.sort.attribute);
          url_options.push('order='+options.sort.order);
        }
				var url = F1.host + "/overlays/" + finder_id + ".json?" + url_options.join("&");
				jq.getJSON(url, {}, function(data) {
					//attributes = data.data_attributes;
          features = jq.map(data.features, function(f, i) { return { attributes: f } });

          self.cached_features[id] = data.features;
          alert(JSON.stringify(data.features));
					callback(data.features);
				});
      },*/
      
      /**
        Gets all features currently loaded in layer
        @param {String} layer guid/index
        @param {Integer} start - the index to start from
        @param {Integer} limit - the limit returned
        @type {Array}
      */
      getFeatures: function(index, start, limit) {
        if (!index) return null;
      	return JSON.parse(this.swf.getFeatures(index, start, limit));
      },

      /**
        Gets all visible features currently rendered in a layer
        @param {String} layer guid/index
        @param {Integer} start - the index to start from
        @param {Integer} limit - the limit returned
        @type {Array}
      */
      getVisibleFeatures: function(index, start, limit) {
        if (!index) return null;
        return JSON.parse(this.swf.getVisibleFeatures(index, start, limit));
      },

  
      /**
        Gets the current colors for icon style object
        @param {String} layer guid/index
        @type {Array}
      */
      getLayerColors: function(index) {
        if (index == null) return;
        return [this.swf.getLayer(index).styles.icon.color.toString(16).toUpperCase()]
      },


      /**
        Sets the current colors for the icon and fill style objects
        @param {String} layer guid/index
        @param {Array} an array of colors 
      */
      setLayerColors: function(index, colors) {
        if (!colors || index == null) return
        var layer_style = this.getLayer(index).styles
        if (colors.length == 1) {
          layer_style.icon.color = colors[0]
          layer_style.fill.color = colors[0]
          this.setLayerStyle(index, layer_style)
        } else {
          var solid = colors[Math.floor(colors.length/2)]
          layer_style.fill.colors = colors
          this.setLayerStyle(index, layer_style)
        }
      },

      /**
        Adds an array of features to the map
        @param {String} guid - layer guid/index
        @param {Array} features - an array of features
        @param {Boolean} replace - replace all features with the given feature array
        @param {Boolean} save - save the features to the actual dataset on map save
      */
      addFeatures: function(guid, features, replace, save){
        if (save == undefined) save = false;
        try {
          // could be expensive check if all feature loading is done in JS
          jq.each(features, function(i,feature){
            if (feature && feature['id'] == undefined) features[i]['id'] = (Math.round(Math.random() * 100000).toString(16)) + (new Date()).getTime().toString(16);
          })
          if (save != false) this._update_feature_mods(guid, 'adds', features);
          if (this.swf) this.swf.addFeatures(guid, features, replace);
        } catch(err) {
          log('add features failed', err);
        }
      },

      /**
        Gets an array of features from a layer
        @param {String} layer guid/index
        @type {Array}
      */
      /*getFeatures: function(guid){
        return JSON.parse(this.swf.getFeatures(guid));
      },*/

      /**
        Gets the style object from the map - contains visual style params for legend, zoom, etc 
        @type {Object}
      */
      getMapStyle: function(){
        return JSON.parse(this.swf.getMapStyle());
      },

      /**
        sets the style object for the map - contains visual style params for legend, zoom, etc 
        @param {Object} params
      */
      setMapStyle: function(params){
        if (params.layers) {
          if (!params.layers.visible) {
            jq('.layer_panel').hide();  
          } else {
            jq('.layer_panel').show();
            if (!params.layers.expanded){
              jq('.layer_panel .hide_icon').trigger('click');
            } else {
              jq('.layer_panel .minimized_header').trigger('click');
            }
          }
        } 
        this.swf.setMapStyle(params);
      },

      setStyle: function(params){
        log('WARNING: setStyle has been deprecated. Please use setMapStyle');
        this.setMapStyle(params);
      },

      /**
        Gets a count of features currently being filtered
        @param {String} layer guid/index
        @type {Integer}
      */
      getFilteredFeatureCount: function(guid){
        return (this.swf) ? this.swf.getFilteredFeatureCount(guid) : 0;
      },


      /**
       * Overrides callbacks for known events (ie onLayerLoaded)
       * @param {String} Name of the map event to set
       * @param {Function} callback to be called when event is triggered
       */
      setCallback: function(event_name, callback){
        var id = (Math.round(Math.random() * 100000).toString(16)) + (new Date()).getTime().toString(16);
        if (!this.event_callbacks[event_name]) this.event_callbacks[event_name] = {};
        this.event_callbacks[event_name][id] = callback;
        return id;
      },


      /**
       * Delete any added callbacks for a given event and id
       */
      deleteCallback: function(event_name, id){
        if (this.event_callbacks[event_name] && this.event_callbacks[event_name][id]){
          delete this.event_callbacks[event_name][id];
        }
      },


      /**
        Sets an info window filter - controls display content of the info windows
        @param {String} layer guid/index
      */
      setLayerInfoWindow: function(guid, filter){
        if (this.swf) {
          this.swf.setLayerInfoWindow(guid, filter);
          var layer = this.getLayer(guid);
          if (this._layers[layer.guid]) {
            this._layers[layer.guid].info_window_filter = filter;
          }
        }
      },

      /**
        Sets an info window filter - controls display content of the info windows
        @param {String} layer guid/index
      */
      addLayerInfoWindowFilter: function(guid, filter){
        log('Warning: addLayerInfoWindowFilter is deprecated. Please use setLayerInfoWindow.');
      },
  
      /**
        Gets a count of features currently rendered (all visible)
        @param {String} layer guid/index
        @type {Integer}
      */
      getVisibleFeatureCount: function(guid){
        return (this.swf) ? this.swf.getVisibleFeatureCount(guid) : null;
      },


      /**
        Gets the center of the map
        @type {Array}
      */
      getCenter: function(){
         return (this.swf) ? this.swf.getCenter() : null;
      },

      /**
        Gets the layer's currently selected temporal attribute 
        @param {String} layer guid/index
        @type {Object} layer's temporal attribute object
      */
      getLayerTemporalAttribute: function(guid){
        //log('getLayerTemporalAttribute', this.swf.getLayerTemporalAttribute(guid));
        return (this.swf) ? this.swf.getLayerTemporalAttribute(guid) : null;
      },

      /**
        Gets the layer's currently highlighted features  
        @param {String} layer guid/index
        @param {String} callback optional callback to call with features
        @type {Array} layer's highlighted features 
      */
      getHighlights: function(guid, callback){
        var highlights;
        if (this.swf) {
          highlights = this.swf.getHighlights(guid);
          return (callback ? callback(highlights) : highlights)
        }
      },

      /**
        Gets the layer's currently highlighted features  
        @param {String} layer guid/index
        @param {Object} highlight - filter object: {expression:"$[attribute] == value"}
      */
      addHighlight: function(guid, highlight){
        if (this.swf) this.swf.addHighlight(guid, highlight);
      },

      
      /**
        Adds a layer category filter to a layer - style filter based on a string value  
        @param {String} layer guid/index
        @param {Object} filter object with a name, value, and icon
      */
      addLayerCategoryFilter: function(guid, filter){
        if (this.swf){
          this.swf.addLayerCategoryFilter(guid, filter);
        }
      },
      
      /**
        Toggle layer visibility   
        @param {String} layer guid/index
        @param {Boolean} show the layer vis
      */
      showLayer: function(guid, show){
        if (this.swf){
          this.swf.showLayer(guid, show);
          for (var source in this.dynspagg_id_list){
            var obj = this.dynspagg_id_list[source];
            if (obj.parent_guid == guid && this._check_dynspagg_level(obj.level)) { 
              this.swf.showLayer(obj.guid, show);
            }
          }
          this.map_el.trigger('onLayerShow', {guid:guid, vis:show});
        }
      },

      /**
       Set the layer temporal resolution, flash then fires onTemporalReady
       @param {String} res - the resolution to be set
      */
      setTemporalResolution: function(res){
        if (this.swf) this.swf.setTemporalResolution( res );
      },

      /**
       Gets the pixel (x,y) coordinates of a given lon/lat pair
       @param {Float} lon
       @param {Float} lat
       @type {Object}
      */
      getPixelsFromLocation: function(lon, lat){
        return this.swf.getPixelsFromLocation(lon,lat);
      },

      /**
       Gets the lon/lat coordinates of a given x/y pair
       @param {Float} lon
       @param {Float} lat
       @type {Object}
      */
      getLocationFromPixels: function(x,y){
        return this.swf.getLocationFromPixels(x, y);
      },

      /**
        Gets all features that intersect the given lat/lon within all layers (or the specified layers)
        Async function that emits the onFeatureIntersected event
        @param {Float} lon
        @param {Float} lat
        @param {Array} guids
      */
      getFeaturesFromLocation: function(lon, lat, guids){
        this.swf.getFeaturesFromLocation(lon, lat, guids);
      },

      /**
        Opens an info window for a given feature
        @param {String} layer_guid 
        @param {String} feature_guid
      */
      openInfoWindow: function(layer_guid, feature_guid){
        if (this.swf) this.swf.openInfoWindow(layer_guid, feature_guid);
      },

      /**
        Closes all info windows
      */
      closeInfoWindow: function(){
        if (this.swf) this.swf.closeInfoWindow();
      },

      /**
        Opens an info window for a given feature
        @param {String} layer_guid 
        @param {Object} tip - a tooltip object with a title key: {title:"Title is $[attribute]"}
      */
      setLayerTooltip: function(guid, tip){
        if (this.swf) this.swf.setLayerTooltip(guid, tip);
      },

      deleteFeatures: function(guid, feature_guids){
        this._update_feature_mods(guid, 'deletes', feature_guids);
        this.swf.deleteFeatures(guid, feature_guids);
      },

      updateFeatures: function(guid, updates){
        this._update_feature_mods(guid, 'updates', updates);
        this.swf.updateFeatures(guid, updates);
      },

      getLayerFeatureChanges: function(guid){
        var guid = (typeof(guid) != 'string') ? this.getLayerGuidByIndex(guid) : guid;
        return this.layer_feature_mods[guid];
		  },

			addGeometry: function(guid, type, callbacks) {
        var self = this;
        for (var cb in callbacks) {
          switch (cb) {
            case 'started':
              self.setCallback('onAnnotationStart', callbacks[cb])
              break;
            case 'stopped':
              self.setCallback('onAnnotationStop', callbacks[cb])
              break;
            case 'edit':
              self.setCallback('onAnnotationEdit', callbacks[cb])
              break;
            case 'cleared':
              self.setCallback('onAnnotationCleared', callbacks[cb])
              break;
            case 'saved':
              self.setCallback('onAnnotationSaved', callbacks[cb])
              break;
          } 
        }
        self.swf.addGeometry(guid, type);
      },
      
      editGeometry: function(guid, id, callbacks) {
        var self = this;
        for (var cb in callbacks) {
          if (cb == "edit") self.setCallback('onAnnotationEdit', callbacks[cb])
        }
        self.swf.editGeometry(guid, id);
      },
      
      saveTempGeometry: function(callbacks) {
        var self = this;
        for (var cb in callbacks) {
          if (cb == "saved") self.setCallback('onAnnotationSaved', callbacks[cb])
        }
        self.swf.saveTempGeometry();
      },
      
      clearTempGeometry: function(callbacks) {
        var self = this;
        for (var cb in callbacks) {
          if (cb == "clear") self.setCallback('onAnnotationClear', callbacks[cb])
        }
        self.swf.clearTempGeometry();
      },

      // flush the layer_feature_mods object
      saveFeatures: function(guid){
        var self = this;
        // send updates
        if (this.layer_feature_mods[guid]){
          var mods = this.layer_feature_mods[guid];
          var index = (typeof(guid) != 'string') ? this.getLayerGuidByIndex(guid) : guid;
          var id = this._layers[index].source.replace(/finder:/, '');
          var url = "";
          if (mods['adds'] && mods['adds'].length){
            var data = this._json_stringify(mods['adds']);
            url = self.add_auth(F1.host + '/datasets/'+ id +'/features.json?', false, false);
            var add_options = {
              url: url,
              type:'POST',
              contentType: 'application/json',
              data: data,
              dataType: 'json',
              success: function(){
                delete self.layer_feature_mods[guid]['adds'];
                if ( self.layer_feature_mods[guid]['adds'] 
                  || self.layer_feature_mods[guid]['deletes'] 
                  || self.layer_feature_mods[guid]['updates']) { 
                  self.saveFeatures(guid);
                }
              }
            }
            jq.ajax(add_options);
          } else if (mods['updates'] && mods['updates'].length){
            // send put request to features.json 
            var qstring = [];
            var features = {type:'FeatureCollection', features:[]};
            jq.each(mods['updates'], function(i, item){
              var obj = {type:'Feature', id: item['id']}
              for (var key in item) {
                if (key != 'id' || key != '_id'){
                  if (key == 'geometry'){
                    obj.geometry = item[key];
                  } else if (key != 'id' || key != '_id') {
                    if (!obj.properties) obj.properties = {};
                    obj.properties[key] = item[key];
                  }
                }
              }
              if (obj.properties['id']) delete obj.properties['id'];
              features.features.push(obj);
            });
            //log('Pushing updates: ', mods['updates'], this._json_stringify(features));
            url = self.add_auth(F1.host + '/datasets/'+ id +'/features.json?', false, false);
            var update_options = {
              url: F1.host + '/datasets/'+ id +'/features.json',
              type:'PUT',
              data: this._json_stringify(features), 
              contentType: 'application/json',
              success: function(){
                delete self.layer_feature_mods[guid]['updates'];
                if ( self.layer_feature_mods[guid]['adds']
                  || self.layer_feature_mods[guid]['deletes']
                  || self.layer_feature_mods[guid]['updates']) { 
                  self.saveFeatures(guid);
                }
              }
            }
            jq.ajax(update_options);
          } else if (mods['deletes'] && mods['deletes'].length){
            url = self.add_auth(F1.host + '/datasets/'+ id +'/features.json?ids='+mods['deletes'].join(','), true, false);

            // send delete request
            var delete_options = {
              url: url,
              type:'DELETE',
              success: function(){
                delete self.layer_feature_mods[guid]['deletes']
                if ( self.layer_feature_mods[guid]['adds']
                  || self.layer_feature_mods[guid]['deletes']
                  || self.layer_feature_mods[guid]['updates']) {
                  self.saveFeatures(guid);
                }
              }
            }
            jq.ajax(delete_options);
            delete mods['deletes'];
          }
        } 
      }

    }

    
  };
})(); // preserve the global namespace

//Deprecated Maker.load_map support for legacy embeds
if(typeof(Maker)=='undefined') {
  /**
    Deprecated global object Maker
  */
  Maker = {deprecated:true};
}
Maker.load_map = function(dom_id,map_id) {
  window["maker_map_"+map_id] = new F1.Maker.Map({
	  dom_id: dom_id,
	  map_id: map_id 
	});
}

