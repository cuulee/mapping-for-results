/*
 * Raphael 1.3.2 - JavaScript Vector Library
 *
 * Copyright (c) 2009 Dmitry Baranovskiy (http://raphaeljs.com)
 * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.
 */
Raphael=(function(){var a=/[, ]+/,aY=/^(circle|rect|path|ellipse|text|image)$/,a9="prototype",W="hasOwnProperty",P=document,aB=window,m={was:Object[a9][W].call(aB,"Raphael"),is:aB.Raphael},au=function(){if(au.is(arguments[0],"array")){var d=arguments[0],e=z[a7](au,d.splice(0,3+au.is(d[0],aq))),S=e.set();for(var R=0,bc=d[n];R<bc;R++){var E=d[R]||{};aY.test(E.type)&&S[f](e[E.type]().attr(E));}return S;}return z[a7](au,arguments);},a4=function(){},aU="appendChild",a7="apply",a2="concat",aA="",at=" ",C="split",J="click dblclick mousedown mousemove mouseout mouseover mouseup"[C](at),aH="join",n="length",bb=String[a9].toLowerCase,af=Math,h=af.max,aR=af.min,aq="number",aJ="toString",aE=Object[a9][aJ],a0={},aV=af.pow,f="push",a5=/^(?=[\da-f]$)/,c=/^url\(['"]?([^\)]+?)['"]?\)$/i,A=/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgb\(\s*([\d\.]+\s*,\s*[\d\.]+\s*,\s*[\d\.]+)\s*\)|rgb\(\s*([\d\.]+%\s*,\s*[\d\.]+%\s*,\s*[\d\.]+%)\s*\)|hs[bl]\(\s*([\d\.]+\s*,\s*[\d\.]+\s*,\s*[\d\.]+)\s*\)|hs[bl]\(\s*([\d\.]+%\s*,\s*[\d\.]+%\s*,\s*[\d\.]+%)\s*\))\s*$/i,U=af.round,y="setAttribute",aa=parseFloat,K=parseInt,aX=String[a9].toUpperCase,k={blur:0,"clip-rect":"0 0 1e9 1e9",cursor:"default",cx:0,cy:0,fill:"#fff","fill-opacity":1,font:'10px "Arial"',"font-family":'"Arial"',"font-size":"10","font-style":"normal","font-weight":400,gradient:0,height:0,href:"http://raphaeljs.com/",opacity:1,path:"M0,0",r:0,rotation:0,rx:0,ry:0,scale:"1 1",src:"",stroke:"#000","stroke-dasharray":"","stroke-linecap":"butt","stroke-linejoin":"butt","stroke-miterlimit":0,"stroke-opacity":1,"stroke-width":1,target:"_blank","text-anchor":"middle",title:"Raphael",translation:"0 0",width:0,x:0,y:0},ad={along:"along",blur:aq,"clip-rect":"csv",cx:aq,cy:aq,fill:"colour","fill-opacity":aq,"font-size":aq,height:aq,opacity:aq,path:"path",r:aq,rotation:"csv",rx:aq,ry:aq,scale:"csv",stroke:"colour","stroke-opacity":aq,"stroke-width":aq,translation:"csv",width:aq,x:aq,y:aq},aZ="replace";au.version="1.3.2";au.type=(aB.SVGAngle||P.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")?"SVG":"VML");if(au.type=="VML"){var ak=P.createElement("div");ak.innerHTML="<!--[if vml]><br><br><![endif]-->";if(ak.childNodes[n]!=2){return au.type=null;}ak=null;}au.svg=!(au.vml=au.type=="VML");a4[a9]=au[a9];au._id=0;au._oid=0;au.fn={};au.is=function(e,d){d=bb.call(d);return((d=="object"||d=="undefined")&&typeof e==d)||(e==null&&d=="null")||bb.call(aE.call(e).slice(8,-1))==d;};au.setWindow=function(d){aB=d;P=aB.document;};var aM=function(e){if(au.vml){var d=/^\s+|\s+$/g;aM=an(function(R){var S;R=(R+aA)[aZ](d,aA);try{var bc=new aB.ActiveXObject("htmlfile");bc.write("<body>");bc.close();S=bc.body;}catch(be){S=aB.createPopup().document.body;}var i=S.createTextRange();try{S.style.color=R;var bd=i.queryCommandValue("ForeColor");bd=((bd&255)<<16)|(bd&65280)|((bd&16711680)>>>16);return"#"+("000000"+bd[aJ](16)).slice(-6);}catch(be){return"none";}});}else{var E=P.createElement("i");E.title="Rapha\xebl Colour Picker";E.style.display="none";P.body[aU](E);aM=an(function(i){E.style.color=i;return P.defaultView.getComputedStyle(E,aA).getPropertyValue("color");});}return aM(e);};var ao=function(){return"hsb("+[this.h,this.s,this.b]+")";},w=function(){return this.hex;};au.hsb2rgb=an(function(bf,bd,bj){if(au.is(bf,"object")&&"h" in bf&&"s" in bf&&"b" in bf){bj=bf.b;bd=bf.s;bf=bf.h;}var R,S,bk;if(bj==0){return{r:0,g:0,b:0,hex:"#000"};}if(bf>1||bd>1||bj>1){bf/=255;bd/=255;bj/=255;}var bc=~~(bf*6),bg=(bf*6)-bc,E=bj*(1-bd),e=bj*(1-(bd*bg)),bl=bj*(1-(bd*(1-bg)));R=[bj,e,E,E,bl,bj,bj][bc];S=[bl,bj,bj,e,E,E,bl][bc];bk=[E,E,bl,bj,bj,e,E][bc];R*=255;S*=255;bk*=255;var bh={r:R,g:S,b:bk,toString:w},d=(~~R)[aJ](16),be=(~~S)[aJ](16),bi=(~~bk)[aJ](16);d=d[aZ](a5,"0");be=be[aZ](a5,"0");bi=bi[aZ](a5,"0");bh.hex="#"+d+be+bi;return bh;},au);au.rgb2hsb=an(function(d,e,bd){if(au.is(d,"object")&&"r" in d&&"g" in d&&"b" in d){bd=d.b;e=d.g;d=d.r;}if(au.is(d,"string")){var bf=au.getRGB(d);d=bf.r;e=bf.g;bd=bf.b;}if(d>1||e>1||bd>1){d/=255;e/=255;bd/=255;}var bc=h(d,e,bd),i=aR(d,e,bd),R,E,S=bc;if(i==bc){return{h:0,s:0,b:bc};}else{var be=(bc-i);E=be/bc;if(d==bc){R=(e-bd)/be;}else{if(e==bc){R=2+((bd-d)/be);}else{R=4+((d-e)/be);}}R/=6;R<0&&R++;R>1&&R--;}return{h:R,s:E,b:S,toString:ao};},au);var aN=/,?([achlmqrstvxz]),?/gi;au._path2string=function(){return this.join(",")[aZ](aN,"$1");};function an(E,e,d){function i(){var R=Array[a9].slice.call(arguments,0),bc=R[aH]("\u25ba"),S=i.cache=i.cache||{},bd=i.count=i.count||[];if(S[W](bc)){return d?d(S[bc]):S[bc];}bd[n]>=1000&&delete S[bd.shift()];bd[f](bc);S[bc]=E[a7](e,R);return d?d(S[bc]):S[bc];}return i;}au.getRGB=an(function(d){if(!d||!!((d=d+aA).indexOf("-")+1)){return{r:-1,g:-1,b:-1,hex:"none",error:1};}if(d=="none"){return{r:-1,g:-1,b:-1,hex:"none"};}!(({hs:1,rg:1})[W](d.substring(0,2))||d.charAt()=="#")&&(d=aM(d));var S,i,E,be,bf,bc=d.match(A);if(bc){if(bc[2]){be=K(bc[2].substring(5),16);E=K(bc[2].substring(3,5),16);i=K(bc[2].substring(1,3),16);}if(bc[3]){be=K((bf=bc[3].charAt(3))+bf,16);E=K((bf=bc[3].charAt(2))+bf,16);i=K((bf=bc[3].charAt(1))+bf,16);}if(bc[4]){bc=bc[4][C](/\s*,\s*/);i=aa(bc[0]);E=aa(bc[1]);be=aa(bc[2]);}if(bc[5]){bc=bc[5][C](/\s*,\s*/);i=aa(bc[0])*2.55;E=aa(bc[1])*2.55;be=aa(bc[2])*2.55;}if(bc[6]){bc=bc[6][C](/\s*,\s*/);i=aa(bc[0]);E=aa(bc[1]);be=aa(bc[2]);return au.hsb2rgb(i,E,be);}if(bc[7]){bc=bc[7][C](/\s*,\s*/);i=aa(bc[0])*2.55;E=aa(bc[1])*2.55;be=aa(bc[2])*2.55;return au.hsb2rgb(i,E,be);}bc={r:i,g:E,b:be};var e=(~~i)[aJ](16),R=(~~E)[aJ](16),bd=(~~be)[aJ](16);e=e[aZ](a5,"0");R=R[aZ](a5,"0");bd=bd[aZ](a5,"0");bc.hex="#"+e+R+bd;return bc;}return{r:-1,g:-1,b:-1,hex:"none",error:1};},au);au.getColor=function(e){var i=this.getColor.start=this.getColor.start||{h:0,s:1,b:e||0.75},d=this.hsb2rgb(i.h,i.s,i.b);i.h+=0.075;if(i.h>1){i.h=0;i.s-=0.2;i.s<=0&&(this.getColor.start={h:0,s:1,b:i.b});}return d.hex;};au.getColor.reset=function(){delete this.start;};var aC=/([achlmqstvz])[\s,]*((-?\d*\.?\d*(?:e[-+]?\d+)?\s*,?\s*)+)/ig,ar=/(-?\d*\.?\d*(?:e[-+]?\d+)?)\s*,?\s*/ig;au.parsePathString=an(function(d){if(!d){return null;}var i={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},e=[];if(au.is(d,"array")&&au.is(d[0],"array")){e=aD(d);}if(!e[n]){(d+aA)[aZ](aC,function(R,E,bd){var bc=[],S=bb.call(E);bd[aZ](ar,function(bf,be){be&&bc[f](+be);});if(S=="m"&&bc[n]>2){e[f]([E][a2](bc.splice(0,2)));S="l";E=E=="m"?"l":"L";}while(bc[n]>=i[S]){e[f]([E][a2](bc.splice(0,i[S])));if(!i[S]){break;}}});}e[aJ]=au._path2string;return e;});au.findDotsAtSegment=function(e,d,bq,bo,bc,R,be,bd,bk){var bi=1-bk,bh=aV(bi,3)*e+aV(bi,2)*3*bk*bq+bi*3*bk*bk*bc+aV(bk,3)*be,bf=aV(bi,3)*d+aV(bi,2)*3*bk*bo+bi*3*bk*bk*R+aV(bk,3)*bd,bm=e+2*bk*(bq-e)+bk*bk*(bc-2*bq+e),bl=d+2*bk*(bo-d)+bk*bk*(R-2*bo+d),bp=bq+2*bk*(bc-bq)+bk*bk*(be-2*bc+bq),bn=bo+2*bk*(R-bo)+bk*bk*(bd-2*R+bo),bj=(1-bk)*e+bk*bq,bg=(1-bk)*d+bk*bo,E=(1-bk)*bc+bk*be,i=(1-bk)*R+bk*bd,S=(90-af.atan((bm-bp)/(bl-bn))*180/af.PI);(bm>bp||bl<bn)&&(S+=180);return{x:bh,y:bf,m:{x:bm,y:bl},n:{x:bp,y:bn},start:{x:bj,y:bg},end:{x:E,y:i},alpha:S};};var Y=an(function(bh){if(!bh){return{x:0,y:0,width:0,height:0};}bh=L(bh);var be=0,bd=0,R=[],e=[],E;for(var S=0,bg=bh[n];S<bg;S++){E=bh[S];if(E[0]=="M"){be=E[1];bd=E[2];R[f](be);e[f](bd);}else{var bc=aL(be,bd,E[1],E[2],E[3],E[4],E[5],E[6]);R=R[a2](bc.min.x,bc.max.x);e=e[a2](bc.min.y,bc.max.y);be=E[5];bd=E[6];}}var d=aR[a7](0,R),bf=aR[a7](0,e);return{x:d,y:bf,width:h[a7](0,R)-d,height:h[a7](0,e)-bf};}),aD=function(bc){var E=[];if(!au.is(bc,"array")||!au.is(bc&&bc[0],"array")){bc=au.parsePathString(bc);}for(var e=0,R=bc[n];e<R;e++){E[e]=[];for(var d=0,S=bc[e][n];d<S;d++){E[e][d]=bc[e][d];}}E[aJ]=au._path2string;return E;},ah=an(function(R){if(!au.is(R,"array")||!au.is(R&&R[0],"array")){R=au.parsePathString(R);}var bg=[],bi=0,bh=0,bl=0,bk=0,E=0;if(R[0][0]=="M"){bi=R[0][1];bh=R[0][2];bl=bi;bk=bh;E++;bg[f](["M",bi,bh]);}for(var bd=E,bm=R[n];bd<bm;bd++){var d=bg[bd]=[],bj=R[bd];if(bj[0]!=bb.call(bj[0])){d[0]=bb.call(bj[0]);switch(d[0]){case"a":d[1]=bj[1];d[2]=bj[2];d[3]=bj[3];d[4]=bj[4];d[5]=bj[5];d[6]=+(bj[6]-bi).toFixed(3);d[7]=+(bj[7]-bh).toFixed(3);break;case"v":d[1]=+(bj[1]-bh).toFixed(3);break;case"m":bl=bj[1];bk=bj[2];default:for(var bc=1,be=bj[n];bc<be;bc++){d[bc]=+(bj[bc]-((bc%2)?bi:bh)).toFixed(3);}}}else{d=bg[bd]=[];if(bj[0]=="m"){bl=bj[1]+bi;bk=bj[2]+bh;}for(var S=0,e=bj[n];S<e;S++){bg[bd][S]=bj[S];}}var bf=bg[bd][n];switch(bg[bd][0]){case"z":bi=bl;bh=bk;break;case"h":bi+=+bg[bd][bf-1];break;case"v":bh+=+bg[bd][bf-1];break;default:bi+=+bg[bd][bf-2];bh+=+bg[bd][bf-1];}}bg[aJ]=au._path2string;return bg;},0,aD),t=an(function(R){if(!au.is(R,"array")||!au.is(R&&R[0],"array")){R=au.parsePathString(R);}var bf=[],bh=0,bg=0,bk=0,bj=0,E=0;if(R[0][0]=="M"){bh=+R[0][1];bg=+R[0][2];bk=bh;bj=bg;E++;bf[0]=["M",bh,bg];}for(var bd=E,bl=R[n];bd<bl;bd++){var d=bf[bd]=[],bi=R[bd];if(bi[0]!=aX.call(bi[0])){d[0]=aX.call(bi[0]);switch(d[0]){case"A":d[1]=bi[1];d[2]=bi[2];d[3]=bi[3];d[4]=bi[4];d[5]=bi[5];d[6]=+(bi[6]+bh);d[7]=+(bi[7]+bg);break;case"V":d[1]=+bi[1]+bg;break;case"H":d[1]=+bi[1]+bh;break;case"M":bk=+bi[1]+bh;bj=+bi[2]+bg;default:for(var bc=1,be=bi[n];bc<be;bc++){d[bc]=+bi[bc]+((bc%2)?bh:bg);}}}else{for(var S=0,e=bi[n];S<e;S++){bf[bd][S]=bi[S];}}switch(d[0]){case"Z":bh=bk;bg=bj;break;case"H":bh=d[1];break;case"V":bg=d[1];break;default:bh=bf[bd][bf[bd][n]-2];bg=bf[bd][bf[bd][n]-1];}}bf[aJ]=au._path2string;return bf;},null,aD),a8=function(e,E,d,i){return[e,E,d,i,d,i];},aT=function(e,E,bc,R,d,i){var S=1/3,bd=2/3;return[S*e+bd*bc,S*E+bd*R,S*d+bd*bc,S*i+bd*R,d,i];},O=function(bl,bQ,bu,bs,bm,bg,S,bk,bP,bn){var R=af.PI,br=R*120/180,d=R/180*(+bm||0),by=[],bv,bM=an(function(bR,bU,i){var bT=bR*af.cos(i)-bU*af.sin(i),bS=bR*af.sin(i)+bU*af.cos(i);return{x:bT,y:bS};});if(!bn){bv=bM(bl,bQ,-d);bl=bv.x;bQ=bv.y;bv=bM(bk,bP,-d);bk=bv.x;bP=bv.y;var e=af.cos(R/180*bm),bi=af.sin(R/180*bm),bA=(bl-bk)/2,bz=(bQ-bP)/2;var bK=(bA*bA)/(bu*bu)+(bz*bz)/(bs*bs);if(bK>1){bK=af.sqrt(bK);bu=bK*bu;bs=bK*bs;}var E=bu*bu,bD=bs*bs,bF=(bg==S?-1:1)*af.sqrt(af.abs((E*bD-E*bz*bz-bD*bA*bA)/(E*bz*bz+bD*bA*bA))),bp=bF*bu*bz/bs+(bl+bk)/2,bo=bF*-bs*bA/bu+(bQ+bP)/2,bf=af.asin(((bQ-bo)/bs).toFixed(7)),be=af.asin(((bP-bo)/bs).toFixed(7));bf=bl<bp?R-bf:bf;be=bk<bp?R-be:be;bf<0&&(bf=R*2+bf);be<0&&(be=R*2+be);if(S&&bf>be){bf=bf-R*2;}if(!S&&be>bf){be=be-R*2;}}else{bf=bn[0];be=bn[1];bp=bn[2];bo=bn[3];}var bj=be-bf;if(af.abs(bj)>br){var bq=be,bt=bk,bh=bP;be=bf+br*(S&&be>bf?1:-1);bk=bp+bu*af.cos(be);bP=bo+bs*af.sin(be);by=O(bk,bP,bu,bs,bm,0,S,bt,bh,[be,bq,bp,bo]);}bj=be-bf;var bd=af.cos(bf),bO=af.sin(bf),bc=af.cos(be),bN=af.sin(be),bB=af.tan(bj/4),bE=4/3*bu*bB,bC=4/3*bs*bB,bL=[bl,bQ],bJ=[bl+bE*bO,bQ-bC*bd],bI=[bk+bE*bN,bP-bC*bc],bG=[bk,bP];bJ[0]=2*bL[0]-bJ[0];bJ[1]=2*bL[1]-bJ[1];if(bn){return[bJ,bI,bG][a2](by);}else{by=[bJ,bI,bG][a2](by)[aH]()[C](",");var bw=[];for(var bH=0,bx=by[n];bH<bx;bH++){bw[bH]=bH%2?bM(by[bH-1],by[bH],d).y:bM(by[bH],by[bH+1],d).x;}return bw;}},T=function(e,d,E,i,be,bd,bc,S,bf){var R=1-bf;return{x:aV(R,3)*e+aV(R,2)*3*bf*E+R*3*bf*bf*be+aV(bf,3)*bc,y:aV(R,3)*d+aV(R,2)*3*bf*i+R*3*bf*bf*bd+aV(bf,3)*S};},aL=an(function(i,d,R,E,bl,bk,bh,be){var bj=(bl-2*R+i)-(bh-2*bl+R),bg=2*(R-i)-2*(bl-R),bd=i-R,bc=(-bg+af.sqrt(bg*bg-4*bj*bd))/2/bj,S=(-bg-af.sqrt(bg*bg-4*bj*bd))/2/bj,bf=[d,be],bi=[i,bh],e;af.abs(bc)>1000000000000&&(bc=0.5);af.abs(S)>1000000000000&&(S=0.5);if(bc>0&&bc<1){e=T(i,d,R,E,bl,bk,bh,be,bc);bi[f](e.x);bf[f](e.y);}if(S>0&&S<1){e=T(i,d,R,E,bl,bk,bh,be,S);bi[f](e.x);bf[f](e.y);}bj=(bk-2*E+d)-(be-2*bk+E);bg=2*(E-d)-2*(bk-E);bd=d-E;bc=(-bg+af.sqrt(bg*bg-4*bj*bd))/2/bj;S=(-bg-af.sqrt(bg*bg-4*bj*bd))/2/bj;af.abs(bc)>1000000000000&&(bc=0.5);af.abs(S)>1000000000000&&(S=0.5);if(bc>0&&bc<1){e=T(i,d,R,E,bl,bk,bh,be,bc);bi[f](e.x);bf[f](e.y);}if(S>0&&S<1){e=T(i,d,R,E,bl,bk,bh,be,S);bi[f](e.x);bf[f](e.y);}return{min:{x:aR[a7](0,bi),y:aR[a7](0,bf)},max:{x:h[a7](0,bi),y:h[a7](0,bf)}};}),L=an(function(bl,bg){var R=t(bl),bh=bg&&t(bg),bi={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},d={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},bc=function(bm,bn){var i,bo;if(!bm){return["C",bn.x,bn.y,bn.x,bn.y,bn.x,bn.y];}!(bm[0] in {T:1,Q:1})&&(bn.qx=bn.qy=null);switch(bm[0]){case"M":bn.X=bm[1];bn.Y=bm[2];break;case"A":bm=["C"][a2](O[a7](0,[bn.x,bn.y][a2](bm.slice(1))));break;case"S":i=bn.x+(bn.x-(bn.bx||bn.x));bo=bn.y+(bn.y-(bn.by||bn.y));bm=["C",i,bo][a2](bm.slice(1));break;case"T":bn.qx=bn.x+(bn.x-(bn.qx||bn.x));bn.qy=bn.y+(bn.y-(bn.qy||bn.y));bm=["C"][a2](aT(bn.x,bn.y,bn.qx,bn.qy,bm[1],bm[2]));break;case"Q":bn.qx=bm[1];bn.qy=bm[2];bm=["C"][a2](aT(bn.x,bn.y,bm[1],bm[2],bm[3],bm[4]));break;case"L":bm=["C"][a2](a8(bn.x,bn.y,bm[1],bm[2]));break;case"H":bm=["C"][a2](a8(bn.x,bn.y,bm[1],bn.y));break;case"V":bm=["C"][a2](a8(bn.x,bn.y,bn.x,bm[1]));break;case"Z":bm=["C"][a2](a8(bn.x,bn.y,bn.X,bn.Y));break;}return bm;},e=function(bm,bn){if(bm[bn][n]>7){bm[bn].shift();var bo=bm[bn];while(bo[n]){bm.splice(bn++,0,["C"][a2](bo.splice(0,6)));}bm.splice(bn,1);bj=h(R[n],bh&&bh[n]||0);}},E=function(bq,bp,bn,bm,bo){if(bq&&bp&&bq[bo][0]=="M"&&bp[bo][0]!="M"){bp.splice(bo,0,["M",bm.x,bm.y]);bn.bx=0;bn.by=0;bn.x=bq[bo][1];bn.y=bq[bo][2];bj=h(R[n],bh&&bh[n]||0);}};for(var be=0,bj=h(R[n],bh&&bh[n]||0);be<bj;be++){R[be]=bc(R[be],bi);e(R,be);bh&&(bh[be]=bc(bh[be],d));bh&&e(bh,be);E(R,bh,bi,d,be);E(bh,R,d,bi,be);var bd=R[be],bk=bh&&bh[be],S=bd[n],bf=bh&&bk[n];bi.x=bd[S-2];bi.y=bd[S-1];bi.bx=aa(bd[S-4])||bi.x;bi.by=aa(bd[S-3])||bi.y;d.bx=bh&&(aa(bk[bf-4])||d.x);d.by=bh&&(aa(bk[bf-3])||d.y);d.x=bh&&bk[bf-2];d.y=bh&&bk[bf-1];}return bh?[R,bh]:R;},null,aD),r=an(function(bg){var bf=[];for(var bc=0,bh=bg[n];bc<bh;bc++){var e={},be=bg[bc].match(/^([^:]*):?([\d\.]*)/);e.color=au.getRGB(be[1]);if(e.color.error){return null;}e.color=e.color.hex;be[2]&&(e.offset=be[2]+"%");bf[f](e);}for(bc=1,bh=bf[n]-1;bc<bh;bc++){if(!bf[bc].offset){var E=aa(bf[bc-1].offset||0),R=0;for(var S=bc+1;S<bh;S++){if(bf[S].offset){R=bf[S].offset;break;}}if(!R){R=100;S=bh;}R=aa(R);var bd=(R-E)/(S-bc+1);for(;bc<S;bc++){E+=bd;bf[bc].offset=E+"%";}}}return bf;}),av=function(d,R,i,E){var e;if(au.is(d,"string")||au.is(d,"object")){e=au.is(d,"string")?P.getElementById(d):d;if(e.tagName){if(R==null){return{container:e,width:e.style.pixelWidth||e.offsetWidth,height:e.style.pixelHeight||e.offsetHeight};}else{return{container:e,width:R,height:i};}}}else{if(au.is(d,aq)&&E!=null){return{container:1,x:d,y:R,width:i,height:E};}}},aP=function(d,i){var e=this;for(var E in i){if(i[W](E)&&!(E in d)){switch(typeof i[E]){case"function":(function(R){d[E]=d===e?R:function(){return R[a7](e,arguments);};})(i[E]);break;case"object":d[E]=d[E]||{};aP.call(this,d[E],i[E]);break;default:d[E]=i[E];break;}}}},ap=function(d,e){d==e.top&&(e.top=d.prev);d==e.bottom&&(e.bottom=d.next);d.next&&(d.next.prev=d.prev);d.prev&&(d.prev.next=d.next);},ac=function(d,e){if(e.top===d){return;}ap(d,e);d.next=null;d.prev=e.top;e.top.next=d;e.top=d;},l=function(d,e){if(e.bottom===d){return;}ap(d,e);d.next=e.bottom;d.prev=null;e.bottom.prev=d;e.bottom=d;},D=function(e,d,i){ap(e,i);d==i.top&&(i.top=e);d.next&&(d.next.prev=e);e.next=d.next;e.prev=d;d.next=e;},ax=function(e,d,i){ap(e,i);d==i.bottom&&(i.bottom=e);d.prev&&(d.prev.next=e);e.prev=d.prev;d.prev=e;e.next=d;},u=function(d){return function(){throw new Error("Rapha\xebl: you are calling to method \u201c"+d+"\u201d of removed object");};},az=/^r(?:\(([^,]+?)\s*,\s*([^\)]+?)\))?/;if(au.svg){a4[a9].svgns="http://www.w3.org/2000/svg";a4[a9].xlink="http://www.w3.org/1999/xlink";U=function(d){return +d+(~~d===d)*0.5;};var Z=function(S){for(var e=0,E=S[n];e<E;e++){if(bb.call(S[e][0])!="a"){for(var d=1,R=S[e][n];d<R;d++){S[e][d]=U(S[e][d]);}}else{S[e][6]=U(S[e][6]);S[e][7]=U(S[e][7]);}}return S;},aS=function(i,d){if(d){for(var e in d){if(d[W](e)){i[y](e,d[e]+aA);}}}else{return P.createElementNS(a4[a9].svgns,i);}};au[aJ]=function(){return"Your browser supports SVG.\nYou are running Rapha\xebl "+this.version;};var s=function(d,E){var e=aS("path");E.canvas&&E.canvas[aU](e);var i=new aF(e,E);i.type="path";ae(i,{fill:"none",stroke:"#000",path:d});return i;};var b=function(R,bk,d){var bh="linear",be=0.5,bc=0.5,bm=R.style;bk=(bk+aA)[aZ](az,function(bo,i,bp){bh="radial";if(i&&bp){be=aa(i);bc=aa(bp);var bn=((bc>0.5)*2-1);aV(be-0.5,2)+aV(bc-0.5,2)>0.25&&(bc=af.sqrt(0.25-aV(be-0.5,2))*bn+0.5)&&bc!=0.5&&(bc=bc.toFixed(5)-0.00001*bn);}return aA;});bk=bk[C](/\s*\-\s*/);if(bh=="linear"){var bd=bk.shift();bd=-aa(bd);if(isNaN(bd)){return null;}var S=[0,0,af.cos(bd*af.PI/180),af.sin(bd*af.PI/180)],bj=1/(h(af.abs(S[2]),af.abs(S[3]))||1);S[2]*=bj;S[3]*=bj;if(S[2]<0){S[0]=-S[2];S[2]=0;}if(S[3]<0){S[1]=-S[3];S[3]=0;}}var bg=r(bk);if(!bg){return null;}var e=R.getAttribute("fill");e=e.match(/^url\(#(.*)\)$/);e&&d.defs.removeChild(P.getElementById(e[1]));var E=aS(bh+"Gradient");E.id="r"+(au._id++)[aJ](36);aS(E,bh=="radial"?{fx:be,fy:bc}:{x1:S[0],y1:S[1],x2:S[2],y2:S[3]});d.defs[aU](E);for(var bf=0,bl=bg[n];bf<bl;bf++){var bi=aS("stop");aS(bi,{offset:bg[bf].offset?bg[bf].offset:!bf?"0%":"100%","stop-color":bg[bf].color||"#fff"});E[aU](bi);}aS(R,{fill:"url(#"+E.id+")",opacity:1,"fill-opacity":1});bm.fill=aA;bm.opacity=1;bm.fillOpacity=1;return 1;};var Q=function(e){var d=e.getBBox();aS(e.pattern,{patternTransform:au.format("translate({0},{1})",d.x,d.y)});};var ae=function(bi,br){var bl={"":[0],none:[0],"-":[3,1],".":[1,1],"-.":[3,1,1,1],"-..":[3,1,1,1,1,1],". ":[1,3],"- ":[4,3],"--":[8,3],"- .":[4,3,1,3],"--.":[8,3,1,3],"--..":[8,3,1,3,1,3]},bn=bi.node,bj=bi.attrs,bf=bi.rotate(),S=function(by,bx){bx=bl[bb.call(bx)];if(bx){var bv=by.attrs["stroke-width"]||"1",bt={round:bv,square:bv,butt:0}[by.attrs["stroke-linecap"]||br["stroke-linecap"]]||0,bw=[];var bu=bx[n];while(bu--){bw[bu]=bx[bu]*bv+((bu%2)?1:-1)*bt;}aS(bn,{"stroke-dasharray":bw[aH](",")});}};br[W]("rotation")&&(bf=br.rotation);var be=(bf+aA)[C](a);if(!(be.length-1)){be=null;}else{be[1]=+be[1];be[2]=+be[2];}aa(bf)&&bi.rotate(0,true);for(var bm in br){if(br[W](bm)){if(!k[W](bm)){continue;}var bk=br[bm];bj[bm]=bk;switch(bm){case"blur":bi.blur(bk);break;case"rotation":bi.rotate(bk,true);break;case"href":case"title":case"target":var bp=bn.parentNode;if(bb.call(bp.tagName)!="a"){var E=aS("a");bp.insertBefore(E,bn);E[aU](bn);bp=E;}bp.setAttributeNS(bi.paper.xlink,bm,bk);break;case"cursor":bn.style.cursor=bk;break;case"clip-rect":var e=(bk+aA)[C](a);if(e[n]==4){bi.clip&&bi.clip.parentNode.parentNode.removeChild(bi.clip.parentNode);var i=aS("clipPath"),bo=aS("rect");i.id="r"+(au._id++)[aJ](36);aS(bo,{x:e[0],y:e[1],width:e[2],height:e[3]});i[aU](bo);bi.paper.defs[aU](i);aS(bn,{"clip-path":"url(#"+i.id+")"});bi.clip=bo;}if(!bk){var bq=P.getElementById(bn.getAttribute("clip-path")[aZ](/(^url\(#|\)$)/g,aA));bq&&bq.parentNode.removeChild(bq);aS(bn,{"clip-path":aA});delete bi.clip;}break;case"path":if(bi.type=="path"){aS(bn,{d:bk?bj.path=Z(t(bk)):"M0,0"});}break;case"width":bn[y](bm,bk);if(bj.fx){bm="x";bk=bj.x;}else{break;}case"x":if(bj.fx){bk=-bj.x-(bj.width||0);}case"rx":if(bm=="rx"&&bi.type=="rect"){break;}case"cx":be&&(bm=="x"||bm=="cx")&&(be[1]+=bk-bj[bm]);bn[y](bm,U(bk));bi.pattern&&Q(bi);break;case"height":bn[y](bm,bk);if(bj.fy){bm="y";bk=bj.y;}else{break;}case"y":if(bj.fy){bk=-bj.y-(bj.height||0);}case"ry":if(bm=="ry"&&bi.type=="rect"){break;}case"cy":be&&(bm=="y"||bm=="cy")&&(be[2]+=bk-bj[bm]);bn[y](bm,U(bk));bi.pattern&&Q(bi);break;case"r":if(bi.type=="rect"){aS(bn,{rx:bk,ry:bk});}else{bn[y](bm,bk);}break;case"src":if(bi.type=="image"){bn.setAttributeNS(bi.paper.xlink,"href",bk);}break;case"stroke-width":bn.style.strokeWidth=bk;bn[y](bm,bk);if(bj["stroke-dasharray"]){S(bi,bj["stroke-dasharray"]);}break;case"stroke-dasharray":S(bi,bk);break;case"translation":var bc=(bk+aA)[C](a);bc[0]=+bc[0]||0;bc[1]=+bc[1]||0;if(be){be[1]+=bc[0];be[2]+=bc[1];}v.call(bi,bc[0],bc[1]);break;case"scale":bc=(bk+aA)[C](a);bi.scale(+bc[0]||1,+bc[1]||+bc[0]||1,isNaN(aa(bc[2]))?null:+bc[2],isNaN(aa(bc[3]))?null:+bc[3]);break;case"fill":var R=(bk+aA).match(c);if(R){i=aS("pattern");var bh=aS("image");i.id="r"+(au._id++)[aJ](36);aS(i,{x:0,y:0,patternUnits:"userSpaceOnUse",height:1,width:1});aS(bh,{x:0,y:0});bh.setAttributeNS(bi.paper.xlink,"href",R[1]);i[aU](bh);var bs=P.createElement("img");bs.style.cssText="position:absolute;left:-9999em;top-9999em";bs.onload=function(){aS(i,{width:this.offsetWidth,height:this.offsetHeight});aS(bh,{width:this.offsetWidth,height:this.offsetHeight});P.body.removeChild(this);bi.paper.safari();};P.body[aU](bs);bs.src=R[1];bi.paper.defs[aU](i);bn.style.fill="url(#"+i.id+")";aS(bn,{fill:"url(#"+i.id+")"});bi.pattern=i;bi.pattern&&Q(bi);break;}if(!au.getRGB(bk).error){delete br.gradient;delete bj.gradient;!au.is(bj.opacity,"undefined")&&au.is(br.opacity,"undefined")&&aS(bn,{opacity:bj.opacity});!au.is(bj["fill-opacity"],"undefined")&&au.is(br["fill-opacity"],"undefined")&&aS(bn,{"fill-opacity":bj["fill-opacity"]});}else{if((({circle:1,ellipse:1})[W](bi.type)||(bk+aA).charAt()!="r")&&b(bn,bk,bi.paper)){bj.gradient=bk;bj.fill="none";break;}}case"stroke":bn[y](bm,au.getRGB(bk).hex);break;case"gradient":(({circle:1,ellipse:1})[W](bi.type)||(bk+aA).charAt()!="r")&&b(bn,bk,bi.paper);break;case"opacity":case"fill-opacity":if(bj.gradient){var d=P.getElementById(bn.getAttribute("fill")[aZ](/^url\(#|\)$/g,aA));if(d){var bd=d.getElementsByTagName("stop");bd[bd[n]-1][y]("stop-opacity",bk);}break;}default:bm=="font-size"&&(bk=K(bk,10)+"px");var bg=bm[aZ](/(\-.)/g,function(bt){return aX.call(bt.substring(1));});bn.style[bg]=bk;bn[y](bm,bk);break;}}}I(bi,br);if(be){bi.rotate(be.join(at));}else{aa(bf)&&bi.rotate(bf,true);}};var j=1.2,I=function(d,R){if(d.type!="text"||!(R[W]("text")||R[W]("font")||R[W]("font-size")||R[W]("x")||R[W]("y"))){return;}var bf=d.attrs,e=d.node,bh=e.firstChild?K(P.defaultView.getComputedStyle(e.firstChild,aA).getPropertyValue("font-size"),10):10;if(R[W]("text")){bf.text=R.text;while(e.firstChild){e.removeChild(e.firstChild);}var E=(R.text+aA)[C]("\n");for(var S=0,bg=E[n];S<bg;S++){if(E[S]){var bd=aS("tspan");S&&aS(bd,{dy:bh*j,x:bf.x});bd[aU](P.createTextNode(E[S]));e[aU](bd);}}}else{E=e.getElementsByTagName("tspan");for(S=0,bg=E[n];S<bg;S++){S&&aS(E[S],{dy:bh*j,x:bf.x});}}aS(e,{y:bf.y});var bc=d.getBBox(),be=bf.y-(bc.y+bc.height/2);be&&isFinite(be)&&aS(e,{y:bf.y+be});},aF=function(e,d){var E=0,i=0;this[0]=e;this.id=au._oid++;this.node=e;e.raphael=this;this.paper=d;this.attrs=this.attrs||{};this.transformations=[];this._={tx:0,ty:0,rt:{deg:0,cx:0,cy:0},sx:1,sy:1};!d.bottom&&(d.bottom=this);this.prev=d.top;d.top&&(d.top.next=this);d.top=this;this.next=null;};aF[a9].rotate=function(e,d,E){if(this.removed){return this;}if(e==null){if(this._.rt.cx){return[this._.rt.deg,this._.rt.cx,this._.rt.cy][aH](at);}return this._.rt.deg;}var i=this.getBBox();e=(e+aA)[C](a);if(e[n]-1){d=aa(e[1]);E=aa(e[2]);}e=aa(e[0]);if(d!=null){this._.rt.deg=e;}else{this._.rt.deg+=e;}(E==null)&&(d=null);this._.rt.cx=d;this._.rt.cy=E;d=d==null?i.x+i.width/2:d;E=E==null?i.y+i.height/2:E;if(this._.rt.deg){this.transformations[0]=au.format("rotate({0} {1} {2})",this._.rt.deg,d,E);this.clip&&aS(this.clip,{transform:au.format("rotate({0} {1} {2})",-this._.rt.deg,d,E)});}else{this.transformations[0]=aA;this.clip&&aS(this.clip,{transform:aA});}aS(this.node,{transform:this.transformations[aH](at)});return this;};aF[a9].hide=function(){!this.removed&&(this.node.style.display="none");return this;};aF[a9].show=function(){!this.removed&&(this.node.style.display="");return this;};aF[a9].remove=function(){if(this.removed){return;}ap(this,this.paper);this.node.parentNode.removeChild(this.node);for(var d in this){delete this[d];}this.removed=true;};aF[a9].getBBox=function(){if(this.removed){return this;}if(this.type=="path"){return Y(this.attrs.path);}if(this.node.style.display=="none"){this.show();var E=true;}var bd={};try{bd=this.node.getBBox();}catch(S){}finally{bd=bd||{};}if(this.type=="text"){bd={x:bd.x,y:Infinity,width:0,height:0};for(var d=0,R=this.node.getNumberOfChars();d<R;d++){var bc=this.node.getExtentOfChar(d);(bc.y<bd.y)&&(bd.y=bc.y);(bc.y+bc.height-bd.y>bd.height)&&(bd.height=bc.y+bc.height-bd.y);(bc.x+bc.width-bd.x>bd.width)&&(bd.width=bc.x+bc.width-bd.x);}}E&&this.hide();return bd;};aF[a9].attr=function(E,bd){if(this.removed){return this;}if(E==null){var S={};for(var R in this.attrs){if(this.attrs[W](R)){S[R]=this.attrs[R];}}this._.rt.deg&&(S.rotation=this.rotate());(this._.sx!=1||this._.sy!=1)&&(S.scale=this.scale());S.gradient&&S.fill=="none"&&(S.fill=S.gradient)&&delete S.gradient;return S;}if(bd==null&&au.is(E,"string")){if(E=="translation"){return v.call(this);}if(E=="rotation"){return this.rotate();}if(E=="scale"){return this.scale();}if(E=="fill"&&this.attrs.fill=="none"&&this.attrs.gradient){return this.attrs.gradient;}return this.attrs[E];}if(bd==null&&au.is(E,"array")){var d={};for(var e=0,bc=E.length;e<bc;e++){d[E[e]]=this.attr(E[e]);}return d;}if(bd!=null){var be={};be[E]=bd;ae(this,be);}else{if(E!=null&&au.is(E,"object")){ae(this,E);}}return this;};aF[a9].toFront=function(){if(this.removed){return this;}this.node.parentNode[aU](this.node);var d=this.paper;d.top!=this&&ac(this,d);return this;};aF[a9].toBack=function(){if(this.removed){return this;}if(this.node.parentNode.firstChild!=this.node){this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild);l(this,this.paper);var d=this.paper;}return this;};aF[a9].insertAfter=function(d){if(this.removed){return this;}var e=d.node;if(e.nextSibling){e.parentNode.insertBefore(this.node,e.nextSibling);}else{e.parentNode[aU](this.node);}D(this,d,this.paper);return this;};aF[a9].insertBefore=function(d){if(this.removed){return this;}var e=d.node;e.parentNode.insertBefore(this.node,e);ax(this,d,this.paper);return this;};aF[a9].blur=function(e){var d=this;if(+e!==0){var i=aS("filter"),E=aS("feGaussianBlur");d.attrs.blur=e;i.id="r"+(au._id++)[aJ](36);aS(E,{stdDeviation:+e||1.5});i.appendChild(E);d.paper.defs.appendChild(i);d._blur=i;aS(d.node,{filter:"url(#"+i.id+")"});}else{if(d._blur){d._blur.parentNode.removeChild(d._blur);delete d._blur;delete d.attrs.blur;}d.node.removeAttribute("filter");}};var V=function(e,d,S,R){d=U(d);S=U(S);var E=aS("circle");e.canvas&&e.canvas[aU](E);var i=new aF(E,e);i.attrs={cx:d,cy:S,r:R,fill:"none",stroke:"#000"};i.type="circle";aS(E,i.attrs);return i;};var aO=function(i,d,bd,e,S,bc){d=U(d);bd=U(bd);var R=aS("rect");i.canvas&&i.canvas[aU](R);var E=new aF(R,i);E.attrs={x:d,y:bd,width:e,height:S,r:bc||0,rx:bc||0,ry:bc||0,fill:"none",stroke:"#000"};E.type="rect";aS(R,E.attrs);return E;};var am=function(e,d,bc,S,R){d=U(d);bc=U(bc);var E=aS("ellipse");e.canvas&&e.canvas[aU](E);var i=new aF(E,e);i.attrs={cx:d,cy:bc,rx:S,ry:R,fill:"none",stroke:"#000"};i.type="ellipse";aS(E,i.attrs);return i;};var q=function(i,bc,d,bd,e,S){var R=aS("image");aS(R,{x:d,y:bd,width:e,height:S,preserveAspectRatio:"none"});R.setAttributeNS(i.xlink,"href",bc);i.canvas&&i.canvas[aU](R);var E=new aF(R,i);E.attrs={x:d,y:bd,width:e,height:S,src:bc};E.type="image";return E;};var ab=function(e,d,S,R){var E=aS("text");aS(E,{x:d,y:S,"text-anchor":"middle"});e.canvas&&e.canvas[aU](E);var i=new aF(E,e);i.attrs={x:d,y:S,"text-anchor":"middle",text:R,font:k.font,stroke:"none",fill:"#000"};i.type="text";ae(i,i.attrs);return i;};var a6=function(e,d){this.width=e||this.width;this.height=d||this.height;this.canvas[y]("width",this.width);this.canvas[y]("height",this.height);return this;};var z=function(){var E=av[a7](0,arguments),i=E&&E.container,e=E.x,bc=E.y,R=E.width,d=E.height;if(!i){throw new Error("SVG container not found.");}var S=aS("svg");R=R||512;d=d||342;aS(S,{xmlns:"http://www.w3.org/2000/svg",version:1.1,width:R,height:d});if(i==1){S.style.cssText="position:absolute;left:"+e+"px;top:"+bc+"px";P.body[aU](S);}else{if(i.firstChild){i.insertBefore(S,i.firstChild);}else{i[aU](S);}}i=new a4;i.width=R;i.height=d;i.canvas=S;aP.call(i,i,au.fn);i.clear();return i;};a4[a9].clear=function(){var d=this.canvas;while(d.firstChild){d.removeChild(d.firstChild);}this.bottom=this.top=null;(this.desc=aS("desc"))[aU](P.createTextNode("Created with Rapha\xebl"));d[aU](this.desc);d[aU](this.defs=aS("defs"));};a4[a9].remove=function(){this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(var d in this){this[d]=u(d);}};}if(au.vml){var H={M:"m",L:"l",C:"c",Z:"x",m:"t",l:"r",c:"v",z:"x"},ay=/([clmz]),?([^clmz]*)/gi,ba=/-?[^,\s-]+/g,aI=1000+at+1000,p=10,aQ=function(bh){var be=/[ahqstv]/ig,E=t;(bh+aA).match(be)&&(E=L);be=/[clmz]/g;if(E==t&&!(bh+aA).match(be)){var bd=(bh+aA)[aZ](ay,function(bk,bm,bi){var bl=[],i=bb.call(bm)=="m",bj=H[bm];bi[aZ](ba,function(bn){if(i&&bl[n]==2){bj+=bl+H[bm=="m"?"l":"L"];bl=[];}bl[f](U(bn*p));});return bj+bl;});return bd;}var bf=E(bh),e,d;bd=[];for(var S=0,bg=bf[n];S<bg;S++){e=bf[S];d=bb.call(bf[S][0]);d=="z"&&(d="x");for(var R=1,bc=e[n];R<bc;R++){d+=U(e[R]*p)+(R!=bc-1?",":aA);}bd[f](d);}return bd[aH](at);};au[aJ]=function(){return"Your browser doesn\u2019t support SVG. Falling down to VML.\nYou are running Rapha\xebl "+this.version;};s=function(i,e){var S=al("group");S.style.cssText="position:absolute;left:0;top:0;width:"+e.width+"px;height:"+e.height+"px";S.coordsize=e.coordsize;S.coordorigin=e.coordorigin;var R=al("shape"),E=R.style;E.width=e.width+"px";E.height=e.height+"px";R.coordsize=aI;R.coordorigin=e.coordorigin;S[aU](R);var bc=new aF(R,S,e),d={fill:"none",stroke:"#000"};i&&(d.path=i);bc.isAbsolute=true;bc.type="path";bc.path=[];bc.Path=aA;ae(bc,d);e.canvas[aU](S);return bc;};ae=function(bf,bk){bf.attrs=bf.attrs||{};var bi=bf.node,bl=bf.attrs,bc=bi.style,E,bp=bf;for(var bd in bk){if(bk[W](bd)){bl[bd]=bk[bd];}}bk.href&&(bi.href=bk.href);bk.title&&(bi.title=bk.title);bk.target&&(bi.target=bk.target);bk.cursor&&(bc.cursor=bk.cursor);"blur" in bk&&bf.blur(bk.blur);if(bk.path&&bf.type=="path"){bl.path=bk.path;bi.path=aQ(bl.path);}if(bk.rotation!=null){bf.rotate(bk.rotation,true);}if(bk.translation){E=(bk.translation+aA)[C](a);v.call(bf,E[0],E[1]);if(bf._.rt.cx!=null){bf._.rt.cx+=+E[0];bf._.rt.cy+=+E[1];bf.setBox(bf.attrs,E[0],E[1]);}}if(bk.scale){E=(bk.scale+aA)[C](a);bf.scale(+E[0]||1,+E[1]||+E[0]||1,+E[2]||null,+E[3]||null);}if("clip-rect" in bk){var d=(bk["clip-rect"]+aA)[C](a);if(d[n]==4){d[2]=+d[2]+(+d[0]);d[3]=+d[3]+(+d[1]);var be=bi.clipRect||P.createElement("div"),bo=be.style,S=bi.parentNode;bo.clip=au.format("rect({1}px {2}px {3}px {0}px)",d);if(!bi.clipRect){bo.position="absolute";bo.top=0;bo.left=0;bo.width=bf.paper.width+"px";bo.height=bf.paper.height+"px";S.parentNode.insertBefore(be,S);be[aU](S);bi.clipRect=be;}}if(!bk["clip-rect"]){bi.clipRect&&(bi.clipRect.style.clip=aA);}}if(bf.type=="image"&&bk.src){bi.src=bk.src;}if(bf.type=="image"&&bk.opacity){bi.filterOpacity=" progid:DXImageTransform.Microsoft.Alpha(opacity="+(bk.opacity*100)+")";bc.filter=(bi.filterMatrix||aA)+(bi.filterOpacity||aA);}bk.font&&(bc.font=bk.font);bk["font-family"]&&(bc.fontFamily='"'+bk["font-family"][C](",")[0][aZ](/^['"]+|['"]+$/g,aA)+'"');bk["font-size"]&&(bc.fontSize=bk["font-size"]);bk["font-weight"]&&(bc.fontWeight=bk["font-weight"]);bk["font-style"]&&(bc.fontStyle=bk["font-style"]);if(bk.opacity!=null||bk["stroke-width"]!=null||bk.fill!=null||bk.stroke!=null||bk["stroke-width"]!=null||bk["stroke-opacity"]!=null||bk["fill-opacity"]!=null||bk["stroke-dasharray"]!=null||bk["stroke-miterlimit"]!=null||bk["stroke-linejoin"]!=null||bk["stroke-linecap"]!=null){bi=bf.shape||bi;var bj=(bi.getElementsByTagName("fill")&&bi.getElementsByTagName("fill")[0]),bm=false;!bj&&(bm=bj=al("fill"));if("fill-opacity" in bk||"opacity" in bk){var e=((+bl["fill-opacity"]+1||2)-1)*((+bl.opacity+1||2)-1);e<0&&(e=0);e>1&&(e=1);bj.opacity=e;}bk.fill&&(bj.on=true);if(bj.on==null||bk.fill=="none"){bj.on=false;}if(bj.on&&bk.fill){var i=bk.fill.match(c);if(i){bj.src=i[1];bj.type="tile";}else{bj.color=au.getRGB(bk.fill).hex;bj.src=aA;bj.type="solid";if(au.getRGB(bk.fill).error&&(bp.type in {circle:1,ellipse:1}||(bk.fill+aA).charAt()!="r")&&b(bp,bk.fill)){bl.fill="none";bl.gradient=bk.fill;}}}bm&&bi[aU](bj);var R=(bi.getElementsByTagName("stroke")&&bi.getElementsByTagName("stroke")[0]),bn=false;!R&&(bn=R=al("stroke"));if((bk.stroke&&bk.stroke!="none")||bk["stroke-width"]||bk["stroke-opacity"]!=null||bk["stroke-dasharray"]||bk["stroke-miterlimit"]||bk["stroke-linejoin"]||bk["stroke-linecap"]){R.on=true;}(bk.stroke=="none"||R.on==null||bk.stroke==0||bk["stroke-width"]==0)&&(R.on=false);R.on&&bk.stroke&&(R.color=au.getRGB(bk.stroke).hex);e=((+bl["stroke-opacity"]+1||2)-1)*((+bl.opacity+1||2)-1);var bg=(aa(bk["stroke-width"])||1)*0.75;e<0&&(e=0);e>1&&(e=1);bk["stroke-width"]==null&&(bg=bl["stroke-width"]);bk["stroke-width"]&&(R.weight=bg);bg&&bg<1&&(e*=bg)&&(R.weight=1);R.opacity=e;bk["stroke-linejoin"]&&(R.joinstyle=bk["stroke-linejoin"]||"miter");R.miterlimit=bk["stroke-miterlimit"]||8;bk["stroke-linecap"]&&(R.endcap=bk["stroke-linecap"]=="butt"?"flat":bk["stroke-linecap"]=="square"?"square":"round");if(bk["stroke-dasharray"]){var bh={"-":"shortdash",".":"shortdot","-.":"shortdashdot","-..":"shortdashdotdot",". ":"dot","- ":"dash","--":"longdash","- .":"dashdot","--.":"longdashdot","--..":"longdashdotdot"};R.dashstyle=bh[W](bk["stroke-dasharray"])?bh[bk["stroke-dasharray"]]:aA;}bn&&bi[aU](R);}if(bp.type=="text"){bc=bp.paper.span.style;bl.font&&(bc.font=bl.font);bl["font-family"]&&(bc.fontFamily=bl["font-family"]);bl["font-size"]&&(bc.fontSize=bl["font-size"]);bl["font-weight"]&&(bc.fontWeight=bl["font-weight"]);bl["font-style"]&&(bc.fontStyle=bl["font-style"]);bp.node.string&&(bp.paper.span.innerHTML=(bp.node.string+aA)[aZ](/</g,"&#60;")[aZ](/&/g,"&#38;")[aZ](/\n/g,"<br>"));bp.W=bl.w=bp.paper.span.offsetWidth;bp.H=bl.h=bp.paper.span.offsetHeight;bp.X=bl.x;bp.Y=bl.y+U(bp.H/2);switch(bl["text-anchor"]){case"start":bp.node.style["v-text-align"]="left";bp.bbx=U(bp.W/2);break;case"end":bp.node.style["v-text-align"]="right";bp.bbx=-U(bp.W/2);break;default:bp.node.style["v-text-align"]="center";break;}}};b=function(d,bd){d.attrs=d.attrs||{};var be=d.attrs,bg=d.node.getElementsByTagName("fill"),S="linear",bc=".5 .5";d.attrs.gradient=bd;bd=(bd+aA)[aZ](az,function(bi,bj,i){S="radial";if(bj&&i){bj=aa(bj);i=aa(i);aV(bj-0.5,2)+aV(i-0.5,2)>0.25&&(i=af.sqrt(0.25-aV(bj-0.5,2))*((i>0.5)*2-1)+0.5);bc=bj+at+i;}return aA;});bd=bd[C](/\s*\-\s*/);if(S=="linear"){var e=bd.shift();e=-aa(e);if(isNaN(e)){return null;}}var R=r(bd);if(!R){return null;}d=d.shape||d.node;bg=bg[0]||al("fill");if(R[n]){bg.on=true;bg.method="none";bg.type=(S=="radial")?"gradientradial":"gradient";bg.color=R[0].color;bg.color2=R[R[n]-1].color;var bh=[];for(var E=0,bf=R[n];E<bf;E++){R[E].offset&&bh[f](R[E].offset+at+R[E].color);}bg.colors&&(bg.colors.value=bh[n]?bh[aH](","):"0% "+bg.color);if(S=="radial"){bg.focus="100%";bg.focussize=bc;bg.focusposition=bc;}else{bg.angle=(270-e)%360;}}return 1;};aF=function(R,bc,d){var S=0,i=0,e=0,E=1;this[0]=R;this.id=au._oid++;this.node=R;R.raphael=this;this.X=0;this.Y=0;this.attrs={};this.Group=bc;this.paper=d;this._={tx:0,ty:0,rt:{deg:0},sx:1,sy:1};!d.bottom&&(d.bottom=this);this.prev=d.top;d.top&&(d.top.next=this);d.top=this;this.next=null;};aF[a9].rotate=function(e,d,i){if(this.removed){return this;}if(e==null){if(this._.rt.cx){return[this._.rt.deg,this._.rt.cx,this._.rt.cy][aH](at);}return this._.rt.deg;}e=(e+aA)[C](a);if(e[n]-1){d=aa(e[1]);i=aa(e[2]);}e=aa(e[0]);if(d!=null){this._.rt.deg=e;}else{this._.rt.deg+=e;}i==null&&(d=null);this._.rt.cx=d;this._.rt.cy=i;this.setBox(this.attrs,d,i);this.Group.style.rotation=this._.rt.deg;return this;};aF[a9].setBox=function(bo,e,d){if(this.removed){return this;}var bi=this.Group.style,R=(this.shape&&this.shape.style)||this.node.style;bo=bo||{};for(var bm in bo){if(bo[W](bm)){this.attrs[bm]=bo[bm];}}e=e||this._.rt.cx;d=d||this._.rt.cy;var bk=this.attrs,bd,bc,be,bn;switch(this.type){case"circle":bd=bk.cx-bk.r;bc=bk.cy-bk.r;be=bn=bk.r*2;break;case"ellipse":bd=bk.cx-bk.rx;bc=bk.cy-bk.ry;be=bk.rx*2;bn=bk.ry*2;break;case"rect":case"image":bd=+bk.x;bc=+bk.y;be=bk.width||0;bn=bk.height||0;break;case"text":this.textpath.v=["m",U(bk.x),", ",U(bk.y-2),"l",U(bk.x)+1,", ",U(bk.y-2)][aH](aA);bd=bk.x-U(this.W/2);bc=bk.y-this.H/2;be=this.W;bn=this.H;break;case"path":if(!this.attrs.path){bd=0;bc=0;be=this.paper.width;bn=this.paper.height;}else{var bl=Y(this.attrs.path);bd=bl.x;bc=bl.y;be=bl.width;bn=bl.height;}break;default:bd=0;bc=0;be=this.paper.width;bn=this.paper.height;break;}e=(e==null)?bd+be/2:e;d=(d==null)?bc+bn/2:d;var E=e-this.paper.width/2,bh=d-this.paper.height/2,bg;bi.left!=(bg=E+"px")&&(bi.left=bg);bi.top!=(bg=bh+"px")&&(bi.top=bg);this.X=this.type=="path"?-E:bd;this.Y=this.type=="path"?-bh:bc;this.W=be;this.H=bn;if(this.type=="path"){R.left!=(bg=-E*p+"px")&&(R.left=bg);R.top!=(bg=-bh*p+"px")&&(R.top=bg);}else{if(this.type=="text"){R.left!=(bg=-E+"px")&&(R.left=bg);R.top!=(bg=-bh+"px")&&(R.top=bg);}else{bi.width!=(bg=this.paper.width+"px")&&(bi.width=bg);bi.height!=(bg=this.paper.height+"px")&&(bi.height=bg);R.left!=(bg=bd-E+"px")&&(R.left=bg);R.top!=(bg=bc-bh+"px")&&(R.top=bg);R.width!=(bg=be+"px")&&(R.width=bg);R.height!=(bg=bn+"px")&&(R.height=bg);var S=(+bo.r||0)/aR(be,bn);if(this.type=="rect"&&this.arcsize.toFixed(4)!=S.toFixed(4)&&(S||this.arcsize)){var bj=al("roundrect"),bp={},bf=this.events&&this.events[n];bm=0;bj.arcsize=S;bj.raphael=this;this.Group[aU](bj);this.Group.removeChild(this.node);this[0]=this.node=bj;this.arcsize=S;for(bm in bk){bp[bm]=bk[bm];}delete bp.scale;this.attr(bp);if(this.events){for(;bm<bf;bm++){this.events[bm].unbind=ai(this.node,this.events[bm].name,this.events[bm].f,this);}}}}}};aF[a9].hide=function(){!this.removed&&(this.Group.style.display="none");return this;};aF[a9].show=function(){!this.removed&&(this.Group.style.display="block");return this;};aF[a9].getBBox=function(){if(this.removed){return this;}if(this.type=="path"){return Y(this.attrs.path);}return{x:this.X+(this.bbx||0),y:this.Y,width:this.W,height:this.H};};aF[a9].remove=function(){if(this.removed){return;}ap(this,this.paper);this.node.parentNode.removeChild(this.node);this.Group.parentNode.removeChild(this.Group);this.shape&&this.shape.parentNode.removeChild(this.shape);for(var d in this){delete this[d];}this.removed=true;};aF[a9].attr=function(e,bc){if(this.removed){return this;}if(e==null){var R={};for(var E in this.attrs){if(this.attrs[W](E)){R[E]=this.attrs[E];}}this._.rt.deg&&(R.rotation=this.rotate());(this._.sx!=1||this._.sy!=1)&&(R.scale=this.scale());R.gradient&&R.fill=="none"&&(R.fill=R.gradient)&&delete R.gradient;return R;}if(bc==null&&au.is(e,"string")){if(e=="translation"){return v.call(this);}if(e=="rotation"){return this.rotate();}if(e=="scale"){return this.scale();}if(e=="fill"&&this.attrs.fill=="none"&&this.attrs.gradient){return this.attrs.gradient;}return this.attrs[e];}if(this.attrs&&bc==null&&au.is(e,"array")){var S,d={};for(E=0,S=e[n];E<S;E++){d[e[E]]=this.attr(e[E]);}return d;}var bd;if(bc!=null){bd={};bd[e]=bc;}bc==null&&au.is(e,"object")&&(bd=e);if(bd){if(bd.text&&this.type=="text"){this.node.string=bd.text;}ae(this,bd);if(bd.gradient&&(({circle:1,ellipse:1})[W](this.type)||(bd.gradient+aA).charAt()!="r")){b(this,bd.gradient);}(this.type!="path"||this._.rt.deg)&&this.setBox(this.attrs);}return this;};aF[a9].toFront=function(){!this.removed&&this.Group.parentNode[aU](this.Group);this.paper.top!=this&&ac(this,this.paper);return this;};aF[a9].toBack=function(){if(this.removed){return this;}if(this.Group.parentNode.firstChild!=this.Group){this.Group.parentNode.insertBefore(this.Group,this.Group.parentNode.firstChild);l(this,this.paper);}return this;};aF[a9].insertAfter=function(d){if(this.removed){return this;}if(d.Group.nextSibling){d.Group.parentNode.insertBefore(this.Group,d.Group.nextSibling);}else{d.Group.parentNode[aU](this.Group);}D(this,d,this.paper);return this;};aF[a9].insertBefore=function(d){if(this.removed){return this;}d.Group.parentNode.insertBefore(this.Group,d.Group);ax(this,d,this.paper);return this;};var a3=/ progid:\S+Blur\([^\)]+\)/g;aF[a9].blur=function(d){var e=this.node.style,i=e.filter;i=i.replace(a3,"");if(+d!==0){this.attrs.blur=d;e.filter=i+" progid:DXImageTransform.Microsoft.Blur(pixelradius="+(+d||1.5)+")";e.margin=Raphael.format("-{0}px 0 0 -{0}px",Math.round(+d||1.5));}else{e.filter=i;e.margin=0;delete this.attrs.blur;}};V=function(e,d,bd,S){var R=al("group"),bc=al("oval"),i=bc.style;R.style.cssText="position:absolute;left:0;top:0;width:"+e.width+"px;height:"+e.height+"px";R.coordsize=aI;R.coordorigin=e.coordorigin;R[aU](bc);var E=new aF(bc,R,e);E.type="circle";ae(E,{stroke:"#000",fill:"none"});E.attrs.cx=d;E.attrs.cy=bd;E.attrs.r=S;E.setBox({x:d-S,y:bd-S,width:S*2,height:S*2});e.canvas[aU](R);return E;};aO=function(e,bd,bc,be,E,d){var R=al("group"),i=al("roundrect"),bf=(+d||0)/(aR(be,E));R.style.cssText="position:absolute;left:0;top:0;width:"+e.width+"px;height:"+e.height+"px";R.coordsize=aI;R.coordorigin=e.coordorigin;R[aU](i);i.arcsize=bf;var S=new aF(i,R,e);S.type="rect";ae(S,{stroke:"#000"});S.arcsize=bf;S.setBox({x:bd,y:bc,width:be,height:E,r:d});e.canvas[aU](R);return S;};am=function(d,be,bd,i,e){var R=al("group"),E=al("oval"),bc=E.style;R.style.cssText="position:absolute;left:0;top:0;width:"+d.width+"px;height:"+d.height+"px";R.coordsize=aI;R.coordorigin=d.coordorigin;R[aU](E);var S=new aF(E,R,d);S.type="ellipse";ae(S,{stroke:"#000"});S.attrs.cx=be;S.attrs.cy=bd;S.attrs.rx=i;S.attrs.ry=e;S.setBox({x:be-i,y:bd-e,width:i*2,height:e*2});d.canvas[aU](R);return S;};q=function(e,d,be,bd,bf,E){var R=al("group"),i=al("image"),bc=i.style;R.style.cssText="position:absolute;left:0;top:0;width:"+e.width+"px;height:"+e.height+"px";R.coordsize=aI;R.coordorigin=e.coordorigin;i.src=d;R[aU](i);var S=new aF(i,R,e);S.type="image";S.attrs.src=d;S.attrs.x=be;S.attrs.y=bd;S.attrs.w=bf;S.attrs.h=E;S.setBox({x:be,y:bd,width:bf,height:E});e.canvas[aU](R);return S;};ab=function(e,be,bd,bf){var R=al("group"),E=al("shape"),bc=E.style,bg=al("path"),d=bg.style,i=al("textpath");R.style.cssText="position:absolute;left:0;top:0;width:"+e.width+"px;height:"+e.height+"px";R.coordsize=aI;R.coordorigin=e.coordorigin;bg.v=au.format("m{0},{1}l{2},{1}",U(be*10),U(bd*10),U(be*10)+1);bg.textpathok=true;bc.width=e.width;bc.height=e.height;i.string=bf+aA;i.on=true;E[aU](i);E[aU](bg);R[aU](E);var S=new aF(i,R,e);S.shape=E;S.textpath=bg;S.type="text";S.attrs.text=bf;S.attrs.x=be;S.attrs.y=bd;S.attrs.w=1;S.attrs.h=1;ae(S,{font:k.font,stroke:"none",fill:"#000"});S.setBox();e.canvas[aU](R);return S;};a6=function(i,d){var e=this.canvas.style;i==+i&&(i+="px");d==+d&&(d+="px");e.width=i;e.height=d;e.clip="rect(0 "+i+" "+d+" 0)";return this;};var al;P.createStyleSheet().addRule(".rvml","behavior:url(#default#VML)");try{!P.namespaces.rvml&&P.namespaces.add("rvml","urn:schemas-microsoft-com:vml");al=function(d){return P.createElement("<rvml:"+d+' class="rvml">');};}catch(aj){al=function(d){return P.createElement("<"+d+' xmlns="urn:schemas-microsoft.com:vml" class="rvml">');};}z=function(){var i=av[a7](0,arguments),d=i.container,be=i.height,bf,e=i.width,bd=i.x,bc=i.y;if(!d){throw new Error("VML container not found.");}var R=new a4,S=R.canvas=P.createElement("div"),E=S.style;e=e||512;be=be||342;e==+e&&(e+="px");be==+be&&(be+="px");R.width=1000;R.height=1000;R.coordsize=p*1000+at+p*1000;R.coordorigin="0 0";R.span=P.createElement("span");R.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";S[aU](R.span);E.cssText=au.format("width:{0};height:{1};position:absolute;clip:rect(0 {0} {1} 0);overflow:hidden",e,be);if(d==1){P.body[aU](S);E.left=bd+"px";E.top=bc+"px";}else{d.style.width=e;d.style.height=be;if(d.firstChild){d.insertBefore(S,d.firstChild);}else{d[aU](S);}}aP.call(R,R,au.fn);return R;};a4[a9].clear=function(){this.canvas.innerHTML=aA;this.span=P.createElement("span");this.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";this.canvas[aU](this.span);this.bottom=this.top=null;};a4[a9].remove=function(){this.canvas.parentNode.removeChild(this.canvas);for(var d in this){this[d]=u(d);}return true;};}if((/^Apple|^Google/).test(aB.navigator.vendor)&&!(aB.navigator.userAgent.indexOf("Version/4.0")+1)){a4[a9].safari=function(){var d=this.rect(-99,-99,this.width+99,this.height+99);aB.setTimeout(function(){d.remove();});};}else{a4[a9].safari=function(){};}var ai=(function(){if(P.addEventListener){return function(R,i,e,d){var E=function(S){return e.call(d,S);};R.addEventListener(i,E,false);return function(){R.removeEventListener(i,E,false);return true;};};}else{if(P.attachEvent){return function(S,E,i,e){var R=function(bc){return i.call(e,bc||aB.event);};S.attachEvent("on"+E,R);var d=function(){S.detachEvent("on"+E,R);return true;};return d;};}}})();for(var ag=J[n];ag--;){(function(d){aF[a9][d]=function(e){if(au.is(e,"function")){this.events=this.events||[];this.events.push({name:d,f:e,unbind:ai(this.shape||this.node,d,e,this)});}return this;};aF[a9]["un"+d]=function(E){var i=this.events,e=i[n];while(e--){if(i[e].name==d&&i[e].f==E){i[e].unbind();i.splice(e,1);!i.length&&delete this.events;return this;}}return this;};})(J[ag]);}aF[a9].hover=function(e,d){return this.mouseover(e).mouseout(d);};aF[a9].unhover=function(e,d){return this.unmouseover(e).unmouseout(d);};a4[a9].circle=function(d,i,e){return V(this,d||0,i||0,e||0);};a4[a9].rect=function(d,R,e,i,E){return aO(this,d||0,R||0,e||0,i||0,E||0);};a4[a9].ellipse=function(d,E,i,e){return am(this,d||0,E||0,i||0,e||0);};a4[a9].path=function(d){d&&!au.is(d,"string")&&!au.is(d[0],"array")&&(d+=aA);return s(au.format[a7](au,arguments),this);};a4[a9].image=function(E,d,R,e,i){return q(this,E||"about:blank",d||0,R||0,e||0,i||0);};a4[a9].text=function(d,i,e){return ab(this,d||0,i||0,e||aA);};a4[a9].set=function(d){arguments[n]>1&&(d=Array[a9].splice.call(arguments,0,arguments[n]));return new X(d);};a4[a9].setSize=a6;a4[a9].top=a4[a9].bottom=null;a4[a9].raphael=au;function x(){return this.x+at+this.y;}aF[a9].scale=function(bi,bh,E,e){if(bi==null&&bh==null){return{x:this._.sx,y:this._.sy,toString:x};}bh=bh||bi;!+bh&&(bh=bi);var bm,bk,bl,bj,by=this.attrs;if(bi!=0){var bg=this.getBBox(),bd=bg.x+bg.width/2,R=bg.y+bg.height/2,bx=bi/this._.sx,bw=bh/this._.sy;E=(+E||E==0)?E:bd;e=(+e||e==0)?e:R;var bf=~~(bi/af.abs(bi)),bc=~~(bh/af.abs(bh)),bp=this.node.style,bA=E+(bd-E)*bx,bz=e+(R-e)*bw;switch(this.type){case"rect":case"image":var be=by.width*bf*bx,bo=by.height*bc*bw;this.attr({height:bo,r:by.r*aR(bf*bx,bc*bw),width:be,x:bA-be/2,y:bz-bo/2});break;case"circle":case"ellipse":this.attr({rx:by.rx*bf*bx,ry:by.ry*bc*bw,r:by.r*aR(bf*bx,bc*bw),cx:bA,cy:bz});break;case"path":var br=ah(by.path),bs=true;for(var bu=0,bn=br[n];bu<bn;bu++){var bq=br[bu],S=aX.call(bq[0]);if(S=="M"&&bs){continue;}else{bs=false;}if(S=="A"){bq[br[bu][n]-2]*=bx;bq[br[bu][n]-1]*=bw;bq[1]*=bf*bx;bq[2]*=bc*bw;bq[5]=+!(bf+bc?!+bq[5]:+bq[5]);}else{if(S=="H"){for(var bt=1,bv=bq[n];bt<bv;bt++){bq[bt]*=bx;}}else{if(S=="V"){for(bt=1,bv=bq[n];bt<bv;bt++){bq[bt]*=bw;}}else{for(bt=1,bv=bq[n];bt<bv;bt++){bq[bt]*=(bt%2)?bx:bw;}}}}}var d=Y(br);bm=bA-d.x-d.width/2;bk=bz-d.y-d.height/2;br[0][1]+=bm;br[0][2]+=bk;this.attr({path:br});break;}if(this.type in {text:1,image:1}&&(bf!=1||bc!=1)){if(this.transformations){this.transformations[2]="scale("[a2](bf,",",bc,")");this.node[y]("transform",this.transformations[aH](at));bm=(bf==-1)?-by.x-(be||0):by.x;bk=(bc==-1)?-by.y-(bo||0):by.y;this.attr({x:bm,y:bk});by.fx=bf-1;by.fy=bc-1;}else{this.node.filterMatrix=" progid:DXImageTransform.Microsoft.Matrix(M11="[a2](bf,", M12=0, M21=0, M22=",bc,", Dx=0, Dy=0, sizingmethod='auto expand', filtertype='bilinear')");bp.filter=(this.node.filterMatrix||aA)+(this.node.filterOpacity||aA);}}else{if(this.transformations){this.transformations[2]=aA;this.node[y]("transform",this.transformations[aH](at));by.fx=0;by.fy=0;}else{this.node.filterMatrix=aA;bp.filter=(this.node.filterMatrix||aA)+(this.node.filterOpacity||aA);}}by.scale=[bi,bh,E,e][aH](at);this._.sx=bi;this._.sy=bh;}return this;};aF[a9].clone=function(){var d=this.attr();delete d.scale;delete d.translation;return this.paper[this.type]().attr(d);};var g=an(function(E,d,bd,bc,bj,bi,bh,bg,R){var bf=0,S;for(var be=0;be<1.001;be+=0.001){var e=au.findDotsAtSegment(E,d,bd,bc,bj,bi,bh,bg,be);be&&(bf+=aV(aV(S.x-e.x,2)+aV(S.y-e.y,2),0.5));if(bf>=R){return e;}S=e;}}),aK=function(d,e){return function(bl,S,bc){bl=L(bl);var bh,bg,E,bd,R="",bk={},bi,bf=0;for(var be=0,bj=bl.length;be<bj;be++){E=bl[be];if(E[0]=="M"){bh=+E[1];bg=+E[2];}else{bd=o(bh,bg,E[1],E[2],E[3],E[4],E[5],E[6]);if(bf+bd>S){if(e&&!bk.start){bi=g(bh,bg,E[1],E[2],E[3],E[4],E[5],E[6],S-bf);R+=["C",bi.start.x,bi.start.y,bi.m.x,bi.m.y,bi.x,bi.y];if(bc){return R;}bk.start=R;R=["M",bi.x,bi.y+"C",bi.n.x,bi.n.y,bi.end.x,bi.end.y,E[5],E[6]][aH]();bf+=bd;bh=+E[5];bg=+E[6];continue;}if(!d&&!e){bi=g(bh,bg,E[1],E[2],E[3],E[4],E[5],E[6],S-bf);return{x:bi.x,y:bi.y,alpha:bi.alpha};}}bf+=bd;bh=+E[5];bg=+E[6];}R+=E;}bk.end=R;bi=d?bf:e?bk:au.findDotsAtSegment(bh,bg,E[1],E[2],E[3],E[4],E[5],E[6],1);bi.alpha&&(bi={x:bi.x,y:bi.y,alpha:bi.alpha});return bi;};},o=an(function(E,d,bc,S,bi,bh,bg,bf){var R={x:0,y:0},be=0;for(var bd=0;bd<1.01;bd+=0.01){var e=T(E,d,bc,S,bi,bh,bg,bf,bd);bd&&(be+=aV(aV(R.x-e.x,2)+aV(R.y-e.y,2),0.5));R=e;}return be;});var aw=aK(1),G=aK(),N=aK(0,1);aF[a9].getTotalLength=function(){if(this.type!="path"){return;}return aw(this.attrs.path);};aF[a9].getPointAtLength=function(d){if(this.type!="path"){return;}return G(this.attrs.path,d);};aF[a9].getSubpath=function(i,e){if(this.type!="path"){return;}if(af.abs(this.getTotalLength()-e)<0.000001){return N(this.attrs.path,i).end;}var d=N(this.attrs.path,e,1);return i?N(d,i).end:d;};au.easing_formulas={linear:function(d){return d;},"<":function(d){return aV(d,3);},">":function(d){return aV(d-1,3)+1;},"<>":function(d){d=d*2;if(d<1){return aV(d,3)/2;}d-=2;return(aV(d,3)+2)/2;},backIn:function(e){var d=1.70158;return e*e*((d+1)*e-d);},backOut:function(e){e=e-1;var d=1.70158;return e*e*((d+1)*e+d)+1;},elastic:function(i){if(i==0||i==1){return i;}var e=0.3,d=e/4;return aV(2,-10*i)*af.sin((i-d)*(2*af.PI)/e)+1;},bounce:function(E){var e=7.5625,i=2.75,d;if(E<(1/i)){d=e*E*E;}else{if(E<(2/i)){E-=(1.5/i);d=e*E*E+0.75;}else{if(E<(2.5/i)){E-=(2.25/i);d=e*E*E+0.9375;}else{E-=(2.625/i);d=e*E*E+0.984375;}}}return d;}};var M={length:0},a1=function(){var be=+new Date;for(var bq in M){if(bq!="length"&&M[W](bq)){var bv=M[bq];if(bv.stop||bv.el.removed){delete M[bq];M[n]--;continue;}var bc=be-bv.start,bn=bv.ms,bm=bv.easing,br=bv.from,bj=bv.diff,E=bv.to,bi=bv.t,bl=bv.prev||0,bd=bv.el,R=bv.callback,bk={},d;if(bc<bn){var S=au.easing_formulas[bm]?au.easing_formulas[bm](bc/bn):bc/bn;for(var bo in br){if(br[W](bo)){switch(ad[bo]){case"along":d=S*bn*bj[bo];E.back&&(d=E.len-d);var bp=G(E[bo],d);bd.translate(bj.sx-bj.x||0,bj.sy-bj.y||0);bj.x=bp.x;bj.y=bp.y;bd.translate(bp.x-bj.sx,bp.y-bj.sy);E.rot&&bd.rotate(bj.r+bp.alpha,bp.x,bp.y);break;case"number":d=+br[bo]+S*bn*bj[bo];break;case"colour":d="rgb("+[F(U(br[bo].r+S*bn*bj[bo].r)),F(U(br[bo].g+S*bn*bj[bo].g)),F(U(br[bo].b+S*bn*bj[bo].b))][aH](",")+")";break;case"path":d=[];for(var bt=0,bh=br[bo][n];bt<bh;bt++){d[bt]=[br[bo][bt][0]];for(var bs=1,bu=br[bo][bt][n];bs<bu;bs++){d[bt][bs]=+br[bo][bt][bs]+S*bn*bj[bo][bt][bs];}d[bt]=d[bt][aH](at);}d=d[aH](at);break;case"csv":switch(bo){case"translation":var bg=bj[bo][0]*(bc-bl),bf=bj[bo][1]*(bc-bl);bi.x+=bg;bi.y+=bf;d=bg+at+bf;break;case"rotation":d=+br[bo][0]+S*bn*bj[bo][0];br[bo][1]&&(d+=","+br[bo][1]+","+br[bo][2]);break;case"scale":d=[+br[bo][0]+S*bn*bj[bo][0],+br[bo][1]+S*bn*bj[bo][1],(2 in E[bo]?E[bo][2]:aA),(3 in E[bo]?E[bo][3]:aA)][aH](at);break;case"clip-rect":d=[];bt=4;while(bt--){d[bt]=+br[bo][bt]+S*bn*bj[bo][bt];}break;}break;}bk[bo]=d;}}bd.attr(bk);bd._run&&bd._run.call(bd);}else{if(E.along){bp=G(E.along,E.len*!E.back);bd.translate(bj.sx-(bj.x||0)+bp.x-bj.sx,bj.sy-(bj.y||0)+bp.y-bj.sy);E.rot&&bd.rotate(bj.r+bp.alpha,bp.x,bp.y);}(bi.x||bi.y)&&bd.translate(-bi.x,-bi.y);E.scale&&(E.scale=E.scale+aA);bd.attr(E);delete M[bq];M[n]--;bd.in_animation=null;au.is(R,"function")&&R.call(bd);}bv.prev=bc;}}au.svg&&bd&&bd.paper.safari();M[n]&&aB.setTimeout(a1);},F=function(d){return d>255?255:(d<0?0:d);},v=function(d,i){if(d==null){return{x:this._.tx,y:this._.ty,toString:x};}this._.tx+=+d;this._.ty+=+i;switch(this.type){case"circle":case"ellipse":this.attr({cx:+d+this.attrs.cx,cy:+i+this.attrs.cy});break;case"rect":case"image":case"text":this.attr({x:+d+this.attrs.x,y:+i+this.attrs.y});break;case"path":var e=ah(this.attrs.path);e[0][1]+=+d;e[0][2]+=+i;this.attr({path:e});break;}return this;};aF[a9].animateWith=function(e,i,d,R,E){M[e.id]&&(i.start=M[e.id].start);return this.animate(i,d,R,E);};aF[a9].animateAlong=aG();aF[a9].animateAlongBack=aG(1);function aG(d){return function(E,i,e,S){var R={back:d};au.is(e,"function")?(S=e):(R.rot=e);E&&E.constructor==aF&&(E=E.attrs.path);E&&(R.along=E);return this.animate(R,i,S);};}aF[a9].onAnimation=function(d){this._run=d||0;return this;};aF[a9].animate=function(bq,bh,bg,E){if(au.is(bg,"function")||!bg){E=bg||null;}var bl={},e={},be={};for(var bi in bq){if(bq[W](bi)){if(ad[W](bi)){bl[bi]=this.attr(bi);(bl[bi]==null)&&(bl[bi]=k[bi]);e[bi]=bq[bi];switch(ad[bi]){case"along":var bo=aw(bq[bi]),bj=G(bq[bi],bo*!!bq.back),R=this.getBBox();be[bi]=bo/bh;be.tx=R.x;be.ty=R.y;be.sx=bj.x;be.sy=bj.y;e.rot=bq.rot;e.back=bq.back;e.len=bo;bq.rot&&(be.r=aa(this.rotate())||0);break;case"number":be[bi]=(e[bi]-bl[bi])/bh;break;case"colour":bl[bi]=au.getRGB(bl[bi]);var bk=au.getRGB(e[bi]);be[bi]={r:(bk.r-bl[bi].r)/bh,g:(bk.g-bl[bi].g)/bh,b:(bk.b-bl[bi].b)/bh};break;case"path":var S=L(bl[bi],e[bi]);bl[bi]=S[0];var bf=S[1];be[bi]=[];for(var bn=0,bd=bl[bi][n];bn<bd;bn++){be[bi][bn]=[0];for(var bm=1,bp=bl[bi][bn][n];bm<bp;bm++){be[bi][bn][bm]=(bf[bn][bm]-bl[bi][bn][bm])/bh;}}break;case"csv":var d=(bq[bi]+aA)[C](a),bc=(bl[bi]+aA)[C](a);switch(bi){case"translation":bl[bi]=[0,0];be[bi]=[d[0]/bh,d[1]/bh];break;case"rotation":bl[bi]=(bc[1]==d[1]&&bc[2]==d[2])?bc:[0,d[1],d[2]];be[bi]=[(d[0]-bl[bi][0])/bh,0,0];break;case"scale":bq[bi]=d;bl[bi]=(bl[bi]+aA)[C](a);be[bi]=[(d[0]-bl[bi][0])/bh,(d[1]-bl[bi][1])/bh,0,0];break;case"clip-rect":bl[bi]=(bl[bi]+aA)[C](a);be[bi]=[];bn=4;while(bn--){be[bi][bn]=(d[bn]-bl[bi][bn])/bh;}break;}e[bi]=d;}}}}this.stop();this.in_animation=1;M[this.id]={start:bq.start||+new Date,ms:bh,easing:bg,from:bl,diff:be,to:e,el:this,callback:E,t:{x:0,y:0}};++M[n]==1&&a1();return this;};aF[a9].stop=function(){M[this.id]&&M[n]--;delete M[this.id];return this;};aF[a9].translate=function(d,e){return this.attr({translation:d+" "+e});};aF[a9][aJ]=function(){return"Rapha\xebl\u2019s object";};au.ae=M;var X=function(d){this.items=[];this[n]=0;if(d){for(var e=0,E=d[n];e<E;e++){if(d[e]&&(d[e].constructor==aF||d[e].constructor==X)){this[this.items[n]]=this.items[this.items[n]]=d[e];this[n]++;}}}};X[a9][f]=function(){var R,d;for(var e=0,E=arguments[n];e<E;e++){R=arguments[e];if(R&&(R.constructor==aF||R.constructor==X)){d=this.items[n];this[d]=this.items[d]=R;this[n]++;}}return this;};X[a9].pop=function(){delete this[this[n]--];return this.items.pop();};for(var B in aF[a9]){if(aF[a9][W](B)){X[a9][B]=(function(d){return function(){for(var e=0,E=this.items[n];e<E;e++){this.items[e][d][a7](this.items[e],arguments);}return this;};})(B);}}X[a9].attr=function(e,bc){if(e&&au.is(e,"array")&&au.is(e[0],"object")){for(var d=0,S=e[n];d<S;d++){this.items[d].attr(e[d]);}}else{for(var E=0,R=this.items[n];E<R;E++){this.items[E].attr(e,bc);}}return this;};X[a9].animate=function(S,e,be,bd){(au.is(be,"function")||!be)&&(bd=be||null);var d=this.items[n],E=d,bc=this,R;bd&&(R=function(){!--d&&bd.call(bc);});this.items[--E].animate(S,e,be||R,R);while(E--){this.items[E].animateWith(this.items[d-1],S,e,be||R,R);}return this;};X[a9].insertAfter=function(e){var d=this.items[n];while(d--){this.items[d].insertAfter(e);}return this;};X[a9].getBBox=function(){var d=[],bc=[],e=[],R=[];for(var E=this.items[n];E--;){var S=this.items[E].getBBox();d[f](S.x);bc[f](S.y);e[f](S.x+S.width);R[f](S.y+S.height);}d=aR[a7](0,d);bc=aR[a7](0,bc);return{x:d,y:bc,width:h[a7](0,e)-d,height:h[a7](0,R)-bc};};X[a9].clone=function(E){E=new X;for(var d=0,e=this.items[n];d<e;d++){E[f](this.items[d].clone());}return E;};au.registerFont=function(e){if(!e.face){return e;}this.fonts=this.fonts||{};var E={w:e.w,face:{},glyphs:{}},i=e.face["font-family"];for(var bc in e.face){if(e.face[W](bc)){E.face[bc]=e.face[bc];}}if(this.fonts[i]){this.fonts[i][f](E);}else{this.fonts[i]=[E];}if(!e.svg){E.face["units-per-em"]=K(e.face["units-per-em"],10);for(var R in e.glyphs){if(e.glyphs[W](R)){var S=e.glyphs[R];E.glyphs[R]={w:S.w,k:{},d:S.d&&"M"+S.d[aZ](/[mlcxtrv]/g,function(bd){return{l:"L",c:"C",x:"z",t:"m",r:"l",v:"c"}[bd]||"M";})+"z"};if(S.k){for(var d in S.k){if(S[W](d)){E.glyphs[R].k[d]=S.k[d];}}}}}}return e;};a4[a9].getFont=function(be,bf,e,R){R=R||"normal";e=e||"normal";bf=+bf||{normal:400,bold:700,lighter:300,bolder:800}[bf]||400;var S=au.fonts[be];if(!S){var E=new RegExp("(^|\\s)"+be[aZ](/[^\w\d\s+!~.:_-]/g,aA)+"(\\s|$)","i");for(var d in au.fonts){if(au.fonts[W](d)){if(E.test(d)){S=au.fonts[d];break;}}}}var bc;if(S){for(var bd=0,bg=S[n];bd<bg;bd++){bc=S[bd];if(bc.face["font-weight"]==bf&&(bc.face["font-style"]==e||!bc.face["font-style"])&&bc.face["font-stretch"]==R){break;}}}return bc;};a4[a9].print=function(R,E,d,bd,be,bn){bn=bn||"middle";var bj=this.set(),bm=(d+aA)[C](aA),bk=0,bg=aA,bo;au.is(bd,"string")&&(bd=this.getFont(bd));if(bd){bo=(be||16)/bd.face["units-per-em"];var e=bd.face.bbox.split(a),bc=+e[0],bf=+e[1]+(bn=="baseline"?e[3]-e[1]+(+bd.face.descent):(e[3]-e[1])/2);for(var bi=0,S=bm[n];bi<S;bi++){var bh=bi&&bd.glyphs[bm[bi-1]]||{},bl=bd.glyphs[bm[bi]];bk+=bi?(bh.w||bd.w)+(bh.k&&bh.k[bm[bi]]||0):0;bl&&bl.d&&bj[f](this.path(bl.d).attr({fill:"#000",stroke:"none",translation:[bk,0]}));}bj.scale(bo,bo,bc,bf).translate(R-bc,E-bf);}return bj;};var aW=/\{(\d+)\}/g;au.format=function(e,i){var d=au.is(i,"array")?[0][a2](i):arguments;e&&au.is(e,"string")&&d[n]-1&&(e=e[aZ](aW,function(R,E){return d[++E]==null?aA:d[E];}));return e||aA;};au.ninja=function(){m.was?(Raphael=m.is):delete Raphael;return au;};au.el=aF[a9];return au;})();

/*
 * g.Raphael 0.4 - Charting library, based on Raphaël
 *
 * Copyright (c) 2009 Dmitry Baranovskiy (http://g.raphaeljs.com)
 * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.
 */
(function(){Raphael.fn.g=Raphael.fn.g||{};Raphael.fn.g.markers={disc:"disc",o:"disc",flower:"flower",f:"flower",diamond:"diamond",d:"diamond",square:"square",s:"square",triangle:"triangle",t:"triangle",star:"star","*":"star",cross:"cross",x:"cross",plus:"plus","+":"plus",arrow:"arrow","->":"arrow"};Raphael.fn.g.shim={stroke:"none",fill:"#000","fill-opacity":0};Raphael.fn.g.txtattr={font:"12px Arial, sans-serif"};Raphael.fn.g.colors=[];var b=[0.6,0.2,0.05,0.1333,0.75,0];for(var a=0;a<10;a++){if(a<b.length){Raphael.fn.g.colors.push("hsb("+b[a]+", .75, .75)");}else{Raphael.fn.g.colors.push("hsb("+b[a-b.length]+", 1, .5)");}}Raphael.fn.g.text=function(c,f,e){return this.text(c,f,e).attr(this.g.txtattr);};Raphael.fn.g.labelise=function(c,f,e){if(c){return(c+"").replace(/(##+(?:\.#+)?)|(%%+(?:\.%+)?)/g,function(g,i,h){if(i){return(+f).toFixed(i.replace(/^#+\.?/g,"").length);}if(h){return(f*100/e).toFixed(h.replace(/^%+\.?/g,"").length)+"%";}});}else{return(+f).toFixed(0);}};Raphael.fn.g.finger=function(j,i,e,k,f,g,h){if((f&&!k)||(!f&&!e)){return h?"":this.path();}g={square:"square",sharp:"sharp",soft:"soft"}[g]||"round";var m;k=Math.round(k);e=Math.round(e);j=Math.round(j);i=Math.round(i);switch(g){case"round":if(!f){var c=Math.floor(k/2);if(e<c){c=e;m=["M",j+0.5,i+0.5-Math.floor(k/2),"l",0,0,"a",c,Math.floor(k/2),0,0,1,0,k,"l",0,0,"z"];}else{m=["M",j+0.5,i+0.5-c,"l",e-c,0,"a",c,c,0,1,1,0,k,"l",c-e,0,"z"];}}else{var c=Math.floor(e/2);if(k<c){c=k;m=["M",j-Math.floor(e/2),i,"l",0,0,"a",Math.floor(e/2),c,0,0,1,e,0,"l",0,0,"z"];}else{m=["M",j-c,i,"l",0,c-k,"a",c,c,0,1,1,e,0,"l",0,k-c,"z"];}}break;case"sharp":if(!f){var l=Math.floor(k/2);m=["M",j,i+l,"l",0,-k,Math.max(e-l,0),0,Math.min(l,e),l,-Math.min(l,e),l+(l*2<k),"z"];}else{var l=Math.floor(e/2);m=["M",j+l,i,"l",-e,0,0,-Math.max(k-l,0),l,-Math.min(l,k),l,Math.min(l,k),l,"z"];}break;case"square":if(!f){m=["M",j,i+Math.floor(k/2),"l",0,-k,e,0,0,k,"z"];}else{m=["M",j+Math.floor(e/2),i,"l",1-e,0,0,-k,e-1,0,"z"];}break;case"soft":var c;if(!f){c=Math.min(e,Math.round(k/5));m=["M",j+0.5,i+0.5-Math.floor(k/2),"l",e-c,0,"a",c,c,0,0,1,c,c,"l",0,k-c*2,"a",c,c,0,0,1,-c,c,"l",c-e,0,"z"];}else{c=Math.min(Math.round(e/5),k);m=["M",j-Math.floor(e/2),i,"l",0,c-k,"a",c,c,0,0,1,c,-c,"l",e-2*c,0,"a",c,c,0,0,1,c,c,"l",0,k-c,"z"];}}if(h){return m.join(",");}else{return this.path(m);}};Raphael.fn.g.disc=function(c,f,e){return this.circle(c,f,e);};Raphael.fn.g.line=function(c,f,e){return this.rect(c-e,f-e/5,2*e,2*e/5);};Raphael.fn.g.square=function(c,f,e){e=e*0.7;return this.rect(c-e,f-e,2*e,2*e);};Raphael.fn.g.triangle=function(c,f,e){e*=1.75;return this.path("M".concat(c,",",f,"m0-",e*0.58,"l",e*0.5,",",e*0.87,"-",e,",0z"));};Raphael.fn.g.diamond=function(c,f,e){return this.path(["M",c,f-e,"l",e,e,-e,e,-e,-e,e,-e,"z"]);};Raphael.fn.g.flower=function(g,f,c,e){c=c*1.25;var l=c,k=l*0.5;e=+e<3||!e?5:e;var m=["M",g,f+k,"Q"],j;for(var h=1;h<e*2+1;h++){j=h%2?l:k;m=m.concat([+(g+j*Math.sin(h*Math.PI/e)).toFixed(3),+(f+j*Math.cos(h*Math.PI/e)).toFixed(3)]);}m.push("z");return this.path(m.join(","));};Raphael.fn.g.star=function(c,k,j,e){e=e||j*0.5;var h=["M",c,k+e,"L"],g;for(var f=1;f<10;f++){g=f%2?j:e;h=h.concat([(c+g*Math.sin(f*Math.PI*0.2)).toFixed(3),(k+g*Math.cos(f*Math.PI*0.2)).toFixed(3)]);}h.push("z");return this.path(h.join(","));};Raphael.fn.g.cross=function(c,f,e){e=e/2.5;return this.path("M".concat(c-e,",",f,"l",[-e,-e,e,-e,e,e,e,-e,e,e,-e,e,e,e,-e,e,-e,-e,-e,e,-e,-e,"z"]));};Raphael.fn.g.plus=function(c,f,e){e=e/2;return this.path("M".concat(c-e/2,",",f-e/2,"l",[0,-e,e,0,0,e,e,0,0,e,-e,0,0,e,-e,0,0,-e,-e,0,0,-e,"z"]));};Raphael.fn.g.arrow=function(c,f,e){return this.path("M".concat(c-e*0.7,",",f-e*0.4,"l",[e*0.6,0,0,-e*0.4,e,e*0.8,-e,e*0.8,0,-e*0.4,-e*0.6,0],"z"));};Raphael.fn.g.tag=function(c,k,j,i,g){i=i||0;g=g==null?5:g;j=j==null?"$9.99":j;var f=0.5522*g,e=this.set(),h=3;e.push(this.path().attr({fill:"#000",stroke:"none"}));e.push(this.text(c,k,j).attr(this.g.txtattr).attr({fill:"#fff"}));e.update=function(){this.rotate(0,c,k);var m=this[1].getBBox();if(m.height>=g*2){this[0].attr({path:["M",c,k+g,"a",g,g,0,1,1,0,-g*2,g,g,0,1,1,0,g*2,"m",0,-g*2-h,"a",g+h,g+h,0,1,0,0,(g+h)*2,"L",c+g+h,k+m.height/2+h,"l",m.width+2*h,0,0,-m.height-2*h,-m.width-2*h,0,"L",c,k-g-h].join(",")});}else{var l=Math.sqrt(Math.pow(g+h,2)-Math.pow(m.height/2+h,2));this[0].attr({path:["M",c,k+g,"c",-f,0,-g,f-g,-g,-g,0,-f,g-f,-g,g,-g,f,0,g,g-f,g,g,0,f,f-g,g,-g,g,"M",c+l,k-m.height/2-h,"a",g+h,g+h,0,1,0,0,m.height+2*h,"l",g+h-l+m.width+2*h,0,0,-m.height-2*h,"L",c+l,k-m.height/2-h].join(",")});}this[1].attr({x:c+g+h+m.width/2,y:k});i=(360-i)%360;this.rotate(i,c,k);i>90&&i<270&&this[1].attr({x:c-g-h-m.width/2,y:k,rotation:[180+i,c,k]});return this;};e.update();return e;};Raphael.fn.g.popupit=function(j,i,k,e,q){e=e==null?2:e;q=q||5;j=Math.round(j)+0.5;i=Math.round(i)+0.5;var g=k.getBBox(),l=Math.round(g.width/2),f=Math.round(g.height/2),o=[0,l+q*2,0,-l-q*2],m=[-f*2-q*3,-f-q,0,-f-q],c=["M",j-o[e],i-m[e],"l",-q,(e==2)*-q,-Math.max(l-q,0),0,"a",q,q,0,0,1,-q,-q,"l",0,-Math.max(f-q,0),(e==3)*-q,-q,(e==3)*q,-q,0,-Math.max(f-q,0),"a",q,q,0,0,1,q,-q,"l",Math.max(l-q,0),0,q,!e*-q,q,!e*q,Math.max(l-q,0),0,"a",q,q,0,0,1,q,q,"l",0,Math.max(f-q,0),(e==1)*q,q,(e==1)*-q,q,0,Math.max(f-q,0),"a",q,q,0,0,1,-q,q,"l",-Math.max(l-q,0),0,"z"].join(","),n=[{x:j,y:i+q*2+f},{x:j-q*2-l,y:i},{x:j,y:i-q*2-f},{x:j+q*2+l,y:i}][e];k.translate(n.x-l-g.x,n.y-f-g.y);return this.path(c).attr({fill:"#000",stroke:"none"}).insertBefore(k.node?k:k[0]);};Raphael.fn.g.popup=function(c,j,i,e,g){e=e==null?2:e;g=g||5;i=i||"$9.99";var f=this.set(),h=3;f.push(this.path().attr({fill:"#000",stroke:"none"}));f.push(this.text(c,j,i).attr(this.g.txtattr).attr({fill:"#fff"}));f.update=function(m,l,n){m=m||c;l=l||j;var q=this[1].getBBox(),s=q.width/2,o=q.height/2,v=[0,s+g*2,0,-s-g*2],t=[-o*2-g*3,-o-g,0,-o-g],k=["M",m-v[e],l-t[e],"l",-g,(e==2)*-g,-Math.max(s-g,0),0,"a",g,g,0,0,1,-g,-g,"l",0,-Math.max(o-g,0),(e==3)*-g,-g,(e==3)*g,-g,0,-Math.max(o-g,0),"a",g,g,0,0,1,g,-g,"l",Math.max(s-g,0),0,g,!e*-g,g,!e*g,Math.max(s-g,0),0,"a",g,g,0,0,1,g,g,"l",0,Math.max(o-g,0),(e==1)*g,g,(e==1)*-g,g,0,Math.max(o-g,0),"a",g,g,0,0,1,-g,g,"l",-Math.max(s-g,0),0,"z"].join(","),u=[{x:m,y:l+g*2+o},{x:m-g*2-s,y:l},{x:m,y:l-g*2-o},{x:m+g*2+s,y:l}][e];if(n){this[0].animate({path:k},500,">");this[1].animate(u,500,">");}else{this[0].attr({path:k});this[1].attr(u);}return this;};return f.update(c,j);};Raphael.fn.g.flag=function(c,i,h,g){g=g||0;h=h||"$9.99";var e=this.set(),f=3;e.push(this.path().attr({fill:"#000",stroke:"none"}));e.push(this.text(c,i,h).attr(this.g.txtattr).attr({fill:"#fff"}));e.update=function(j,m){this.rotate(0,j,m);var l=this[1].getBBox(),k=l.height/2;this[0].attr({path:["M",j,m,"l",k+f,-k-f,l.width+2*f,0,0,l.height+2*f,-l.width-2*f,0,"z"].join(",")});this[1].attr({x:j+k+f+l.width/2,y:m});g=360-g;this.rotate(g,j,m);g>90&&g<270&&this[1].attr({x:j-r-f-l.width/2,y:m,rotation:[180+g,j,m]});return this;};return e.update(c,i);};Raphael.fn.g.label=function(c,g,f){var e=this.set();e.push(this.rect(c,g,10,10).attr({stroke:"none",fill:"#000"}));e.push(this.text(c,g,f).attr(this.g.txtattr).attr({fill:"#fff"}));e.update=function(){var i=this[1].getBBox(),h=Math.min(i.width+10,i.height+10)/2;this[0].attr({x:i.x-h/2,y:i.y-h/2,width:i.width+h,height:i.height+h,r:h});};e.update();return e;};Raphael.fn.g.labelit=function(f){var e=f.getBBox(),c=Math.min(20,e.width+10,e.height+10)/2;return this.rect(e.x-c/2,e.y-c/2,e.width+c,e.height+c,c).attr({stroke:"none",fill:"#000"}).insertBefore(f[0]);};Raphael.fn.g.drop=function(c,i,h,f,g){f=f||30;g=g||0;var e=this.set();e.push(this.path(["M",c,i,"l",f,0,"A",f*0.4,f*0.4,0,1,0,c+f*0.7,i-f*0.7,"z"]).attr({fill:"#000",stroke:"none",rotation:[22.5-g,c,i]}));g=(g+90)*Math.PI/180;e.push(this.text(c+f*Math.sin(g),i+f*Math.cos(g),h).attr(this.g.txtattr).attr({"font-size":f*12/30,fill:"#fff"}));e.drop=e[0];e.text=e[1];return e;};Raphael.fn.g.blob=function(e,k,j,i,g){i=(+i+1?i:45)+90;g=g||12;var c=Math.PI/180,h=g*12/12;var f=this.set();f.push(this.path().attr({fill:"#000",stroke:"none"}));f.push(this.text(e+g*Math.sin((i)*c),k+g*Math.cos((i)*c)-h/2,j).attr(this.g.txtattr).attr({"font-size":h,fill:"#fff"}));f.update=function(q,p,v){q=q||e;p=p||k;var y=this[1].getBBox(),B=Math.max(y.width+h,g*25/12),x=Math.max(y.height+h,g*25/12),m=q+g*Math.sin((i-22.5)*c),z=p+g*Math.cos((i-22.5)*c),o=q+g*Math.sin((i+22.5)*c),A=p+g*Math.cos((i+22.5)*c),D=(o-m)/2,C=(A-z)/2,n=B/2,l=x/2,u=-Math.sqrt(Math.abs(n*n*l*l-n*n*C*C-l*l*D*D)/(n*n*C*C+l*l*D*D)),t=u*n*C/l+(o+m)/2,s=u*-l*D/n+(A+z)/2;if(v){this.animate({x:t,y:s,path:["M",e,k,"L",o,A,"A",n,l,0,1,1,m,z,"z"].join(",")},500,">");}else{this.attr({x:t,y:s,path:["M",e,k,"L",o,A,"A",n,l,0,1,1,m,z,"z"].join(",")});}return this;};f.update(e,k);return f;};Raphael.fn.g.colorValue=function(g,f,e,c){return"hsb("+[Math.min((1-g/f)*0.4,1),e||0.75,c||0.75]+")";};Raphael.fn.g.snapEnds=function(l,m,k){var h=l,n=m;if(h==n){return{from:h,to:n,power:0};}function o(f){return Math.abs(f-0.5)<0.25?Math.floor(f)+0.5:Math.round(f);}var j=(n-h)/k,c=Math.floor(j),g=c,e=0;if(c){while(g){e--;g=Math.floor(j*Math.pow(10,e))/Math.pow(10,e);}e++;}else{while(!c){e=e||1;c=Math.floor(j*Math.pow(10,e))/Math.pow(10,e);e++;}e&&e--;}var n=o(m*Math.pow(10,e))/Math.pow(10,e);if(n<m){n=o((m+0.5)*Math.pow(10,e))/Math.pow(10,e);}var h=o((l-(e>0?0:0.5))*Math.pow(10,e))/Math.pow(10,e);return{from:h,to:n,power:e};};Raphael.fn.g.axis=function(s,q,m,E,h,H,k,J,l,c){c=c==null?2:c;l=l||"t";H=H||10;var D=l=="|"||l==" "?["M",s+0.5,q,"l",0,0.001]:k==1||k==3?["M",s+0.5,q,"l",0,-m]:["M",s,q+0.5,"l",m,0],v=this.g.snapEnds(E,h,H),I=v.from,z=v.to,G=v.power,F=0,A=this.set();d=(z-I)/H;var p=I,o=G>0?G:0;u=m/H;if(+k==1||+k==3){var e=q,w=(k-1?1:-1)*(c+3+!!(k-1));while(e>=q-m){l!="-"&&l!=" "&&(D=D.concat(["M",s-(l=="+"||l=="|"?c:!(k-1)*c*2),e+0.5,"l",c*2+1,0]));A.push(this.text(s+w,e,(J&&J[F++])||(Math.round(p)==p?p:+p.toFixed(o))).attr(this.g.txtattr).attr({"text-anchor":k-1?"start":"end"}));p+=d;e-=u;}if(Math.round(e+u-(q-m))){l!="-"&&l!=" "&&(D=D.concat(["M",s-(l=="+"||l=="|"?c:!(k-1)*c*2),q-m+0.5,"l",c*2+1,0]));A.push(this.text(s+w,q-m,(J&&J[F])||(Math.round(p)==p?p:+p.toFixed(o))).attr(this.g.txtattr).attr({"text-anchor":k-1?"start":"end"}));}}else{var g=s,p=I,o=G>0?G:0,w=(k?-1:1)*(c+9+!k),u=m/H,B=0,C=0;while(g<=s+m){l!="-"&&l!=" "&&(D=D.concat(["M",g+0.5,q-(l=="+"?c:!!k*c*2),"l",0,c*2+1]));A.push(B=this.text(g,q+w,(J&&J[F++])||(Math.round(p)==p?p:+p.toFixed(o))).attr(this.g.txtattr));var n=B.getBBox();if(C>=n.x-5){A.pop(A.length-1).remove();}else{C=n.x+n.width;}p+=d;g+=u;}if(Math.round(g-u-s-m)){l!="-"&&l!=" "&&(D=D.concat(["M",s+m+0.5,q-(l=="+"?c:!!k*c*2),"l",0,c*2+1]));A.push(this.text(s+m,q+w,(J&&J[F])||(Math.round(p)==p?p:+p.toFixed(o))).attr(this.g.txtattr));}}var K=this.path(D);K.text=A;K.all=this.set([K,A]);K.remove=function(){this.text.remove();this.constructor.prototype.remove.call(this);};return K;};Raphael.el.lighter=function(e){e=e||2;var c=[this.attrs.fill,this.attrs.stroke];this.fs=this.fs||[c[0],c[1]];c[0]=Raphael.rgb2hsb(Raphael.getRGB(c[0]).hex);c[1]=Raphael.rgb2hsb(Raphael.getRGB(c[1]).hex);c[0].b=Math.min(c[0].b*e,1);c[0].s=c[0].s/e;c[1].b=Math.min(c[1].b*e,1);c[1].s=c[1].s/e;this.attr({fill:"hsb("+[c[0].h,c[0].s,c[0].b]+")",stroke:"hsb("+[c[1].h,c[1].s,c[1].b]+")"});};Raphael.el.darker=function(e){e=e||2;var c=[this.attrs.fill,this.attrs.stroke];this.fs=this.fs||[c[0],c[1]];c[0]=Raphael.rgb2hsb(Raphael.getRGB(c[0]).hex);c[1]=Raphael.rgb2hsb(Raphael.getRGB(c[1]).hex);c[0].s=Math.min(c[0].s*e,1);c[0].b=c[0].b/e;c[1].s=Math.min(c[1].s*e,1);c[1].b=c[1].b/e;this.attr({fill:"hsb("+[c[0].h,c[0].s,c[0].b]+")",stroke:"hsb("+[c[1].h,c[1].s,c[1].b]+")"});};Raphael.el.original=function(){if(this.fs){this.attr({fill:this.fs[0],stroke:this.fs[1]});delete this.fs;}};})();

/*
 * g.Raphael 0.4 - Charting library, based on Raphaël
 *
 * Copyright (c) 2009 Dmitry Baranovskiy (http://g.raphaeljs.com)
 * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.
 */
Raphael.fn.g.barchart = function (x, y, width, height, values, opts) {
    opts = opts || {};
    var type = {round: "round", sharp: "sharp", soft: "soft"}[opts.type] || "square",
        gutter = parseFloat(opts.gutter || "20%"),
        chart = this.set(),
        bars = this.set(),
        covers = this.set(),
        covers2 = this.set(),
        total = Math.max.apply(Math, values),
        stacktotal = [],
        paper = this,
        multi = 0,
        colors = opts.colors || this.g.colors,
        len = values.length,
        ids = opts.ids,
        featureDictionary = {};
        
    if (this.raphael.is(values[0], "array")) {
        total = [];
        multi = len;
        len = 0;
        var bar;
        for (var i = values.length; i--;) {
        	bar = this.set();
        	
        	// featureDictionary[ ids[i] ] = bar;
        	
        	
            bars.push(bar);
            total.push(Math.max.apply(Math, values[i]));
            len = Math.max(len, values[i].length);
        }
        if (opts.stacked) {
            for (var i = len; i--;) {
                var tot = 0;
                for (var j = values.length; j--;) {
                    tot +=+ values[j][i] || 0;
                }
                stacktotal.push(tot);
            }
        }
        for (var i = values.length; i--;) {
            if (values[i].length < len) {
                for (var j = len; j--;) {
                    values[i].push(0);
                }
            }
        }
        total = Math.max.apply(Math, opts.stacked ? stacktotal : total);
    }
    
    total = (opts.to) || total;
    var barwidth = width / (len * (100 + gutter) + gutter) * 100,
        barhgutter = barwidth * gutter / 100,
        barvgutter = opts.vgutter == null ? 20 : opts.vgutter,
        stack = [],
        X = x + barhgutter,
        Y = (height - 2 * barvgutter) / total;
    if (!opts.stretch) {
        barhgutter = Math.round(barhgutter);
        barwidth = Math.floor(barwidth);
    }
    !opts.stacked && (barwidth /= multi || 1);
    for (var i = 0; i < len; i++) {
        stack = [];
        for (var j = 0; j < (multi || 1); j++) {
            var h = Math.round((multi ? values[j][i] : values[i]) * Y),
                top = y + height - barvgutter - h,
                bar = this.g.finger(Math.round(X + barwidth / 2), top + h, barwidth, h, true, type).attr({stroke: colors[multi ? j : i], fill: colors[multi ? j : i]});
            if (multi) {
                bars[j].push(bar);
            } else {
                bars.push(bar);
            }
            bar.y = top;
            bar.x = Math.round(X + barwidth / 2);
            bar.w = barwidth;
            bar.h = h;
						bar['index'] = i;
            bar.value = multi ? values[j][i] : values[i];
            if (!opts.stacked) {
                X += barwidth;
            } else {
                stack.push(bar);
            }
        }
        if (opts.stacked) {
            var cvr;
            covers2.push(cvr = this.rect(stack[0].x - stack[0].w / 2, y, barwidth, height).attr(this.g.shim));
            cvr.bars = this.set();
            var size = 0;
            for (var s = stack.length; s--;) {
                stack[s].toFront();
            }
            for (var s = 0, ss = stack.length; s < ss; s++) {
                var bar = stack[s],
                    cover,
                    h = (size + bar.value) * Y,
                    path = this.g.finger(bar.x, y + height - barvgutter - !!size * .5, barwidth, h, true, type, 1);
                cvr.bars.push(bar);
                size && bar.attr({path: path});
                bar.h = h;
                bar.y = y + height - barvgutter - !!size * .5 - h;
                covers.push(cover = this.rect(bar.x - bar.w / 2, bar.y, barwidth, bar.value * Y).attr(this.g.shim));
                cover.bar = bar;
                cover.value = bar.value;
                size += bar.value;
            }
            X += barwidth;
        }
        X += barhgutter;
    }
    covers2.toFront();
    X = x + barhgutter;
    if (!opts.stacked) {
        for (var i = 0; i < len; i++) {
            for (var j = 0; j < (multi || 1); j++) {
                var cover;
                covers.push(cover = this.rect(Math.round(X), y + barvgutter, barwidth, height - barvgutter).attr(this.g.shim));
                featureDictionary[ ids[i] ] = cover;
                cover.bar = multi ? bars[j][i] : bars[i];
                cover.value = cover.bar.value;
                X += barwidth;
            }
            X += barhgutter;
        }
    }
    chart.label = function (labels, isBottom) {
        labels = labels || [];
        this.labels = paper.set();
        var L, l = -Infinity;
        if (opts.stacked) {
            for (var i = 0; i < len; i++) {
                var tot = 0;
                for (var j = 0; j < (multi || 1); j++) {
                    tot += multi ? values[j][i] : values[i];
                    if (j == multi - 1) {
                        var label = paper.g.labelise(labels[i], tot, total);
                        L = paper.g.text(bars[i * (multi || 1) + j].x, y + height - barvgutter / 2, label).insertBefore(covers[i * (multi || 1) + j]);
                        var bb = L.getBBox();
                        if (bb.x - 7 < l) {
                            L.remove();
                        } else {
                            this.labels.push(L);
                            l = bb.x + bb.width;
                        }
                    }
                }
            }
        } else {
            for (var i = 0; i < len; i++) {
                for (var j = 0; j < (multi || 1); j++) {
                    var label = paper.g.labelise(multi ? labels[j] && labels[j][i] : labels[i], multi ? values[j][i] : values[i], total);
                    L = paper.g.text(bars[i * (multi || 1) + j].x, isBottom ? y + height - barvgutter / 2 : bars[i * (multi || 1) + j].y - 10, label).insertBefore(covers[i * (multi || 1) + j]);
                    var bb = L.getBBox();
                    if (bb.x - 7 < l) {
                        L.remove();
                    } else {
                        this.labels.push(L);
                        l = bb.x + bb.width;
                    }
                }
            }
        }
        return this;
    };
    chart.hover = function (fin, fout) {
        covers2.hide();
        covers.show();
        covers.mouseover(fin).mouseout(fout);
        return this;
    };
    chart.hoverColumn = function (fin, fout) {
        covers.hide();
        covers2.show();
        fout = fout || function () {};
        covers2.mouseover(fin).mouseout(fout);
        return this;
    };
    chart.click = function (f) {
        covers2.hide();
        covers.show();
        covers.click(f);
        return this;
    };
    chart.each = function (f) {
        if (!Raphael.is(f, "function")) {
            return this;
        }
        for (var i = covers.length; i--;) {
            f.call(covers[i]);
        }
        return this;
    };
    chart.eachColumn = function (f) {
        if (!Raphael.is(f, "function")) {
            return this;
        }
        for (var i = covers2.length; i--;) {
            f.call(covers2[i]);
        }
        return this;
    };
    chart.clickColumn = function (f) {
        covers.hide();
        covers2.show();
        covers2.click(f);
        return this;
    };
    chart.push(bars, covers, covers2);
    chart.bars = bars;
    chart.covers = covers;
    chart.featureDictionary = featureDictionary;
    
    return chart;
};

Raphael.fn.g.hbarchart = function (x, y, width, height, values, opts) {
    opts = opts || {};
    var type = {round: "round", sharp: "sharp", soft: "soft"}[opts.type] || "square",
        gutter = parseFloat(opts.gutter || "20%"),
        chart = this.set(),
        bars = this.set(),
        covers = this.set(),
        covers2 = this.set(),
        total = Math.max.apply(Math, values),
        stacktotal = [],
        paper = this,
        multi = 0,
        colors = opts.colors || this.g.colors,
        len = values.length;
    if (this.raphael.is(values[0], "array")) {
        total = [];
        multi = len;
        len = 0;
        for (var i = values.length; i--;) {
            bars.push(this.set());
            total.push(Math.max.apply(Math, values[i]));
            len = Math.max(len, values[i].length);
        }
        if (opts.stacked) {
            for (var i = len; i--;) {
                var tot = 0;
                for (var j = values.length; j--;) {
                    tot +=+ values[j][i] || 0;
                }
                stacktotal.push(tot);
            }
        }
        for (var i = values.length; i--;) {
            if (values[i].length < len) {
                for (var j = len; j--;) {
                    values[i].push(0);
                }
            }
        }
        total = Math.max.apply(Math, opts.stacked ? stacktotal : total);
    }
    
    total = (opts.to) || total;
    var barheight = Math.floor(height / (len * (100 + gutter) + gutter) * 100),
        bargutter = Math.floor(barheight * gutter / 100),
        stack = [],
        Y = y + bargutter,
        X = (width - 1) / total;
    !opts.stacked && (barheight /= multi || 1);
    for (var i = 0; i < len; i++) {
        stack = [];
        for (var j = 0; j < (multi || 1); j++) {
            var val = multi ? values[j][i] : values[i],
                bar = this.g.finger(x, Y + barheight / 2, Math.round(val * X), barheight - 1, false, type).attr({stroke: colors[multi ? j : i], fill: colors[multi ? j : i]});
            if (multi) {
                bars[j].push(bar);
            } else {
                bars.push(bar);
            }
            bar.x = x + Math.round(val * X);
            bar.y = Y + barheight / 2;
            bar.w = Math.round(val * X);
            bar.h = barheight;
            bar.value = +val;
            if (!opts.stacked) {
                Y += barheight;
            } else {
                stack.push(bar);
            }
        }
        if (opts.stacked) {
            var cvr = this.rect(x, stack[0].y - stack[0].h / 2, width, barheight).attr(this.g.shim);
            covers2.push(cvr);
            cvr.bars = this.set();
            var size = 0;
            for (var s = stack.length; s--;) {
                stack[s].toFront();
            }
            for (var s = 0, ss = stack.length; s < ss; s++) {
                var bar = stack[s],
                    cover,
                    val = Math.round((size + bar.value) * X),
                    path = this.g.finger(x, bar.y, val, barheight - 1, false, type, 1);
                cvr.bars.push(bar);
                size && bar.attr({path: path});
                bar.w = val;
                bar.x = x + val;
                covers.push(cover = this.rect(x + size * X, bar.y - bar.h / 2, bar.value * X, barheight).attr(this.g.shim));
                cover.bar = bar;
                size += bar.value;
            }
            Y += barheight;
        }
        Y += bargutter;
    }
    covers2.toFront();
    Y = y + bargutter;
    if (!opts.stacked) {
        for (var i = 0; i < len; i++) {
            for (var j = 0; j < multi; j++) {
                var cover = this.rect(x, Y, width, barheight).attr(this.g.shim);
                covers.push(cover);
                cover.bar = bars[j][i];
                Y += barheight;
            }
            Y += bargutter;
        }
    }
    chart.label = function (labels, isRight) {
        labels = labels || [];
        this.labels = paper.set();
        for (var i = 0; i < len; i++) {
            for (var j = 0; j < multi; j++) {
                var  label = paper.g.labelise(multi ? labels[j] && labels[j][i] : labels[i], multi ? values[j][i] : values[i], total);
                var X = isRight ? bars[i * (multi || 1) + j].x - barheight / 2 + 3 : x + 5,
                    A = isRight ? "end" : "start",
                    L;
                this.labels.push(L = paper.g.text(X, bars[i * (multi || 1) + j].y, label).attr({"text-anchor": A}).insertBefore(covers[0]));
                if (L.getBBox().x < x + 5) {
                    L.attr({x: x + 5, "text-anchor": "start"});
                } else {
                    bars[i * (multi || 1) + j].label = L;
                }
            }
        }
        return this;
    };
    chart.hover = function (fin, fout) {
        covers2.hide();
        covers.show();
        fout = fout || function () {};
        covers.mouseover(fin).mouseout(fout);
        return this;
    };
    chart.hoverColumn = function (fin, fout) {
        covers.hide();
        covers2.show();
        fout = fout || function () {};
        covers2.mouseover(fin).mouseout(fout);
        return this;
    };
    chart.each = function (f) {
        if (!Raphael.is(f, "function")) {
            return this;
        }
        for (var i = covers.length; i--;) {
            f.call(covers[i]);
        }
        return this;
    };
    chart.eachColumn = function (f) {
        if (!Raphael.is(f, "function")) {
            return this;
        }
        for (var i = covers2.length; i--;) {
            f.call(covers2[i]);
        }
        return this;
    };
    chart.click = function (f) {
        covers2.hide();
        covers.show();
        covers.click(f);
        return this;
    };
    chart.clickColumn = function (f) {
        covers.hide();
        covers2.show();
        covers2.click(f);
        return this;
    };
    chart.push(bars, covers, covers2);
    chart.bars = bars;
    chart.covers = covers;
    chart.featureDictionary = featureDictionary;
    
    return chart;
};


/*
 * g.Raphael 0.4 - Charting library, based on Raphaël
 *
 * Copyright (c) 2009 Dmitry Baranovskiy (http://g.raphaeljs.com)
 * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.
 */
Raphael.fn.g.linechart = function (x, y, width, height, valuesx, valuesy, opts) {
    function shrink(values, dim) {
        var k = values.length / dim,
            j = 0,
            l = k,
            sum = 0,
            res = [];
        while (j < values.length) {
            l--;
            if (l < 0) {
                sum += values[j] * (1 + l);
                res.push(sum / k);
                sum = values[j++] * -l;
                l += k;
            } else {
                sum += values[j++];
            }
        }
        return res;
    }
    opts = opts || {};
    if (!this.raphael.is(valuesx[0], "array")) {
        valuesx = [valuesx];
    }
    if (!this.raphael.is(valuesy[0], "array")) {
        valuesy = [valuesy];
    }
    var allx = Array.prototype.concat.apply([], valuesx),
        ally = Array.prototype.concat.apply([], valuesy),
        xdim = this.g.snapEnds(Math.min.apply(Math, allx), Math.max.apply(Math, allx), valuesx[0].length - 1),
        minx = xdim.from,
        maxx = xdim.to,
        gutter = opts.gutter || 10,
        kx = (width - gutter * 2) / (maxx - minx),
        ydim = this.g.snapEnds(Math.min.apply(Math, ally), Math.max.apply(Math, ally), valuesy[0].length - 1),
        miny = ydim.from,
        maxy = ydim.to,
        ky = (height - gutter * 2) / (maxy - miny),
        len = Math.max(valuesx[0].length, valuesy[0].length),
        symbol = opts.symbol || "",
        colors = opts.colors || Raphael.fn.g.colors,
        that = this,
        columns = null,
        dots = null,
        chart = this.set(),
        path = [];

    for (var i = 0, ii = valuesy.length; i < ii; i++) {
        len = Math.max(len, valuesy[i].length);
    }
    var shades = this.set();
    for (var i = 0, ii = valuesy.length; i < ii; i++) {
        if (opts.shade) {
            shades.push(this.path().attr({stroke: "none", fill: colors[i], opacity: opts.nostroke ? 1 : .3}));
        }
        if (valuesy[i].length > width - 2 * gutter) {
            valuesy[i] = shrink(valuesy[i], width - 2 * gutter);
            len = width - 2 * gutter;
        }
        if (valuesx[i] && valuesx[i].length > width - 2 * gutter) {
            valuesx[i] = shrink(valuesx[i], width - 2 * gutter);
        }
    }
    var axis = this.set();
    if (opts.axis) {
        var ax = (opts.axis + "").split(/[,\s]+/);
        +ax[0] && axis.push(this.g.axis(x + gutter, y + gutter, width - 2 * gutter, minx, maxx, opts.axisxstep || Math.floor((width - 2 * gutter) / 20), 2, opts.axisxlabels || null, opts.axisxtype || "t"));
        +ax[1] && axis.push(this.g.axis(x + width - gutter, y + height - gutter, height - 2 * gutter, miny, maxy, opts.axisystep || Math.floor((height - 2 * gutter) / 20), 3, opts.axisylabels || null, opts.axisytype || "t"));
        +ax[2] && axis.push(this.g.axis(x + gutter, y + height - gutter, width - 2 * gutter, minx, maxx, opts.axisxstep || Math.floor((width - 2 * gutter) / 20), 0, opts.axisxlabels || null, opts.axisxtype || "t"));
        +ax[3] && axis.push(this.g.axis(x + gutter, y + height - gutter, height - 2 * gutter, miny, maxy, opts.axisystep || Math.floor((height - 2 * gutter) / 20), 1, opts.axisylabels || null, opts.axisytype || "t"));
    }
    var lines = this.set(),
        symbols = this.set(),
        line;
    for (var i = 0, ii = valuesy.length; i < ii; i++) {
        if (!opts.nostroke) {
            lines.push(line = this.path().attr({
                stroke: colors[i],
                "stroke-width": opts.width || 2,
                "stroke-linejoin": "round",
                "stroke-linecap": "round",
                "stroke-dasharray": opts.dash || ""
            }));
        }
        var sym = this.raphael.is(symbol, "array") ? symbol[i] : symbol,
            symset = this.set();
        path = [];
        for (var j = 0, jj = valuesy[i].length; j < jj; j++) {
            var X = x + gutter + ((valuesx[i] || valuesx[0])[j] - minx) * kx;
            var Y = y + height - gutter - (valuesy[i][j] - miny) * ky;
            (Raphael.is(sym, "array") ? sym[j] : sym) && symset.push(this.g[Raphael.fn.g.markers[this.raphael.is(sym, "array") ? sym[j] : sym]](X, Y, (opts.width || 2) * 3).attr({fill: colors[i], stroke: "none"}));
            path = path.concat([j ? "L" : "M", X, Y]);
        }
        symbols.push(symset);
        if (opts.shade) {
            shades[i].attr({path: path.concat(["L", X, y + height - gutter, "L",  x + gutter + ((valuesx[i] || valuesx[0])[0] - minx) * kx, y + height - gutter, "z"]).join(",")});
        }
        !opts.nostroke && line.attr({path: path.join(",")});
    }
    function createColumns(f) {
        // unite Xs together
        var Xs = [];
        for (var i = 0, ii = valuesx.length; i < ii; i++) {
            Xs = Xs.concat(valuesx[i]);
        }
        Xs.sort();
        // remove duplicates
        var Xs2 = [],
            xs = [];
        for (var i = 0, ii = Xs.length; i < ii; i++) {
            Xs[i] != Xs[i - 1] && Xs2.push(Xs[i]) && xs.push(x + gutter + (Xs[i] - minx) * kx);
        }
        Xs = Xs2;
        ii = Xs.length;
        var cvrs = f || that.set();
        for (var i = 0; i < ii; i++) {
            var X = xs[i] - (xs[i] - (xs[i - 1] || x)) / 2,
                w = ((xs[i + 1] || x + width) - xs[i]) / 2 + (xs[i] - (xs[i - 1] || x)) / 2,
                C;
            f ? (C = {}) : cvrs.push(C = that.rect(X - 1, y, Math.max(w + 1, 1), height).attr({stroke: "none", fill: "#000", opacity: 0}));
            C.values = [];
            C.symbols = that.set();
            C.y = [];
            C.x = xs[i];
            C.axis = Xs[i];
            for (var j = 0, jj = valuesy.length; j < jj; j++) {
                Xs2 = valuesx[j] || valuesx[0];
                for (var k = 0, kk = Xs2.length; k < kk; k++) {
                    if (Xs2[k] == Xs[i]) {
                        C.values.push(valuesy[j][k]);
                        C.y.push(y + height - gutter - (valuesy[j][k] - miny) * ky);
                        C.symbols.push(chart.symbols[j][k]);
                    }
                }
            }
            f && f.call(C);
        }
        !f && (columns = cvrs);
    }
    function createDots(f) {
        var cvrs = f || that.set(),
            C;
        for (var i = 0, ii = valuesy.length; i < ii; i++) {
            for (var j = 0, jj = valuesy[i].length; j < jj; j++) {
                var X = x + gutter + ((valuesx[i] || valuesx[0])[j] - minx) * kx,
                    nearX = x + gutter + ((valuesx[i] || valuesx[0])[j ? j - 1 : 1] - minx) * kx,
                    Y = y + height - gutter - (valuesy[i][j] - miny) * ky;
                f ? (C = {}) : cvrs.push(C = that.circle(X, Y, Math.abs(nearX - X) / 2).attr({stroke: "none", fill: "#000", opacity: 0}));
                C.x = X;
                C.y = Y;
                C.value = valuesy[i][j];
                C.line = chart.lines[i];
                C.shade = chart.shades[i];
                C.symbol = chart.symbols[i][j];
                C.symbols = chart.symbols[i];
                C.axis = (valuesx[i] || valuesx[0])[j];
                f && f.call(C);
            }
        }
        !f && (dots = cvrs);
    }
    chart.push(lines, shades, symbols, axis, columns, dots);
    chart.lines = lines;
    chart.shades = shades;
    chart.symbols = symbols;
    chart.axis = axis;
    chart.hoverColumn = function (fin, fout) {
        !columns && createColumns();
        columns.mouseover(fin).mouseout(fout);
        return this;
    };
    chart.clickColumn = function (f) {
        !columns && createColumns();
        columns.click(f);
        return this;
    };
    chart.hrefColumn = function (cols) {
        var hrefs = that.raphael.is(arguments[0], "array") ? arguments[0] : arguments;
        if (!(arguments.length - 1) && typeof cols == "object") {
            for (var x in cols) {
                for (var i = 0, ii = columns.length; i < ii; i++) if (columns[i].axis == x) {
                    columns[i].attr("href", cols[x]);
                }
            }
        }
        !columns && createColumns();
        for (var i = 0, ii = hrefs.length; i < ii; i++) {
            columns[i] && columns[i].attr("href", hrefs[i]);
        }
        return this;
    };
    chart.hover = function (fin, fout) {
        !dots && createDots();
        dots.mouseover(fin).mouseout(fout);
        return this;
    };
    chart.click = function (f) {
        !dots && createDots();
        dots.click(f);
        return this;
    };
    chart.each = function (f) {
        createDots(f);
        return this;
    };
    chart.eachColumn = function (f) {
        createColumns(f);
        return this;
    };
    return chart;
};


/*
 * g.Raphael 0.4 - Charting library, based on Raphaël
 *
 * Copyright (c) 2009 Dmitry Baranovskiy (http://g.raphaeljs.com)
 * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.
 */
Raphael.fn.g.dotchart = function (x, y, width, height, valuesx, valuesy, size, opts) {
    function drawAxis(ax) {
        +ax[0] && (ax[0] = paper.g.axis(x + gutter, y + gutter, width - 2 * gutter, minx, maxx, opts.axisxstep || Math.floor((width - 2 * gutter) / 20), 2, opts.axisxlabels || null, opts.axisxtype || "t"));
        +ax[1] && (ax[1] = paper.g.axis(x + width - gutter, y + height - gutter, height - 2 * gutter, miny, maxy, opts.axisystep || Math.floor((height - 2 * gutter) / 20), 3, opts.axisylabels || null, opts.axisytype || "t"));
        +ax[2] && (ax[2] = paper.g.axis(x + gutter, y + height - gutter + maxR, width - 2 * gutter, minx, maxx, opts.axisxstep || Math.floor((width - 2 * gutter) / 20), 0, opts.axisxlabels || null, opts.axisxtype || "t"));
        +ax[3] && (ax[3] = paper.g.axis(x + gutter - maxR, y + height - gutter, height - 2 * gutter, miny, maxy, opts.axisystep || Math.floor((height - 2 * gutter) / 20), 1, opts.axisylabels || null, opts.axisytype || "t"));
    }
    opts = opts || {};
    var xdim = this.g.snapEnds(Math.min.apply(Math, valuesx), Math.max.apply(Math, valuesx), valuesx.length - 1),
        minx = xdim.from,
        maxx = xdim.to,
        gutter = opts.gutter || 10,
        ydim = this.g.snapEnds(Math.min.apply(Math, valuesy), Math.max.apply(Math, valuesy), valuesy.length - 1),
        miny = ydim.from,
        maxy = ydim.to,
        len = Math.max(valuesx.length, valuesy.length, size.length),
        symbol = this.g.markers[opts.symbol] || "disc",
        res = this.set(),
        series = this.set(),
        max = opts.max || 100,
        top = Math.max.apply(Math, size),
        R = [],
        paper = this,
        k = Math.sqrt(top / Math.PI) * 2 / max,
        ids = opts.ids,
        featureDictionary = {};

    for (var i = 0; i < len; i++) {
        R[i] = Math.min(Math.sqrt(size[i] / Math.PI) * 2 / k, max);
    }
    gutter = Math.max.apply(Math, R.concat(gutter));
    var axis = this.set(),
        maxR = Math.max.apply(Math, R);
    if (opts.axis) {
        var ax = (opts.axis + "").split(/[,\s]+/);
        drawAxis(ax);
        var g = [], b = [];
        for (var i = 0, ii = ax.length; i < ii; i++) {
            var bb = ax[i].all ? ax[i].all.getBBox()[["height", "width"][i % 2]] : 0;
            g[i] = bb + gutter;
            b[i] = bb;
        }
        gutter = Math.max.apply(Math, g.concat(gutter));
        for (var i = 0, ii = ax.length; i < ii; i++) if (ax[i].all) {
            ax[i].remove();
            ax[i] = 1;
        }
        drawAxis(ax);
        for (var i = 0, ii = ax.length; i < ii; i++) if (ax[i].all) {
            axis.push(ax[i].all);
        }
        res.axis = axis;
    }
    var kx = (width - gutter * 2) / ((maxx - minx) || 1),
        ky = (height - gutter * 2) / ((maxy - miny) || 1);
    for (var i = 0, ii = valuesy.length; i < ii; i++) {
        var sym = this.raphael.is(symbol, "array") ? symbol[i] : symbol,
            X = x + gutter + (valuesx[i] - minx) * kx,
            Y = y + height - gutter - (valuesy[i] - miny) * ky;
        
        var dot = this.g[sym](X, Y, R[i]).attr({fill: opts.heat ? this.g.colorValue(R[i], maxR) : Raphael.fn.g.colors[0], "fill-opacity": opts.opacity ? R[i] / max : 1, stroke: "none"});
        
        featureDictionary[ ids[i] ] = dot;
        
        sym && R[i] && series.push(dot);
    }
    var covers = this.set();
    for (var i = 0, ii = valuesy.length; i < ii; i++) {
        var X = x + gutter + (valuesx[i] - minx) * kx,
            Y = y + height - gutter - (valuesy[i] - miny) * ky;
        covers.push(this.circle(X, Y, maxR).attr(this.g.shim));
        opts.href && opts.href[i] && covers[i].attr({href: opts.href[i]});
        covers[i].r = +R[i].toFixed(3);
        covers[i].x = +X.toFixed(3);
        covers[i].y = +Y.toFixed(3);
        covers[i].X = valuesx[i];
        covers[i].Y = valuesy[i];
        covers[i].value = size[i] || 0;
        covers[i].dot = series[i];
				covers[i].index = i;
    }
    res.covers = covers;
    res.series = series;
    res.featureDictionary = featureDictionary;
    res.push(series, axis, covers);
    res.hover = function (fin, fout) {
        covers.mouseover(fin).mouseout(fout);
        return this;
    };
    res.click = function (f) {
        covers.click(f);
        return this;
    };
    res.each = function (f) {
        if (!Raphael.is(f, "function")) {
            return this;
        }
        for (var i = covers.length; i--;) {
            f.call(covers[i]);
        }
        return this;
    };
    res.href = function (map) {
        var cover;
        for (var i = covers.length; i--;) {
            cover = covers[i];
            if (cover.X == map.x && cover.Y == map.y && cover.value == map.value) {
                cover.attr({href: map.href});
            }
        }
    };
    
    return res;
};


/*
 * g.Raphael 0.4 - Charting library, based on Raphaël
 *
 * Copyright (c) 2009 Dmitry Baranovskiy (http://g.raphaeljs.com)
 * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.
 */
Raphael.fn.g.piechart = function (cx, cy, r, values, opts) {
    opts = opts || {};
    var paper = this,
        sectors = [],
        covers = this.set(),
        chart = this.set(),
        series = this.set(),
        order = [],
        len = values.length,
        angle = 0,
        total = 0,
        others = 0,
        cut = 9,
        defcut = true;
    chart.covers = covers;
    if (len == 1) {
        series.push(this.circle(cx, cy, r).attr({fill: this.g.colors[0], stroke: opt.stroke || "#fff", "stroke-width": opts.strokewidth == null ? 1 : opts.strokewidth}));
        covers.push(this.circle(cx, cy, r).attr(this.g.shim));
        total = values[0];
        values[0] = {value: values[0], order: 0, valueOf: function () { return this.value; }};
        series[0].middle = {x: cx, y: cy};
        series[0].mangle = 180;
    } else {
        function sector(cx, cy, r, startAngle, endAngle, fill) {
            var rad = Math.PI / 180,
                x1 = cx + r * Math.cos(-startAngle * rad),
                x2 = cx + r * Math.cos(-endAngle * rad),
                xm = cx + r / 2 * Math.cos(-(startAngle + (endAngle - startAngle) / 2) * rad),
                y1 = cy + r * Math.sin(-startAngle * rad),
                y2 = cy + r * Math.sin(-endAngle * rad),
                ym = cy + r / 2 * Math.sin(-(startAngle + (endAngle - startAngle) / 2) * rad),
                res = ["M", cx, cy, "L", x1, y1, "A", r, r, 0, +(Math.abs(endAngle - startAngle) > 180), 1, x2, y2, "z"];
            res.middle = {x: xm, y: ym};
            return res;
        }
        for (var i = 0; i < len; i++) {
            total += values[i];
            values[i] = {value: values[i], order: i, valueOf: function () { return this.value; }};
        }
        values.sort(function (a, b) {
            return b.value - a.value;
        });
        for (var i = 0; i < len; i++) {
            if (defcut && values[i] * 360 / total <= 1.5) {
                cut = i;
                defcut = false;
            }
            if (i > cut) {
                defcut = false;
                values[cut].value += values[i];
                values[cut].others = true;
                others = values[cut].value;
            }
        }
        len = Math.min(cut + 1, values.length);
        others && values.splice(len) && (values[cut].others = true);
        for (var i = 0; i < len; i++) {
            var mangle = angle - 360 * values[i] / total / 2;
            if (!i) {
                angle = 90 - mangle;
                mangle = angle - 360 * values[i] / total / 2;
            }
            if (opts.init) {
                var ipath = sector(cx, cy, 1, angle, angle - 360 * values[i] / total).join(",");
            }
            var path = sector(cx, cy, r, angle, angle -= 360 * values[i] / total);
            var p = this.path(opts.init ? ipath : path).attr({fill: opts.colors && opts.colors[i] || this.g.colors[i] || "#666", stroke: opts.stroke || "#fff", "stroke-width": (opts.strokewidth == null ? 1 : opts.strokewidth), "stroke-linejoin": "round"});
            p.value = values[i];
            p.middle = path.middle;
            p.mangle = mangle;
            sectors.push(p);
            series.push(p);
            opts.init && p.animate({path: path.join(",")}, (+opts.init - 1) || 1000, ">");
        }
        for (var i = 0; i < len; i++) {
            var p = paper.path(sectors[i].attr("path")).attr(this.g.shim);
            opts.href && opts.href[i] && p.attr({href: opts.href[i]});
            p.attr = function () {};
            covers.push(p);
            series.push(p);
        }
    }

    chart.hover = function (fin, fout) {
        fout = fout || function () {};
        var that = this;
        for (var i = 0; i < len; i++) {
            (function (sector, cover, j) {
                var o = {
                    sector: sector,
                    cover: cover,
                    cx: cx,
                    cy: cy,
                    mx: sector.middle.x,
                    my: sector.middle.y,
                    mangle: sector.mangle,
                    r: r,
                    value: values[j],
                    total: total,
                    label: that.labels && that.labels[j]
                };
                cover.mouseover(function () {
                    fin.call(o);
                }).mouseout(function () {
                    fout.call(o);
                });
            })(series[i], covers[i], i);
        }
        return this;
    };
    // x: where label could be put
    // y: where label could be put
    // value: value to show
    // total: total number to count %
    chart.each = function (f) {
        var that = this;
        for (var i = 0; i < len; i++) {
            (function (sector, cover, j) {
                var o = {
                    sector: sector,
                    cover: cover,
                    cx: cx,
                    cy: cy,
                    x: sector.middle.x,
                    y: sector.middle.y,
                    mangle: sector.mangle,
                    r: r,
                    value: values[j],
                    total: total,
                    label: that.labels && that.labels[j]
                };
                f.call(o);
            })(series[i], covers[i], i);
        }
        return this;
    };
    chart.click = function (f) {
        var that = this;
        for (var i = 0; i < len; i++) {
            (function (sector, cover, j) {
                var o = {
                    sector: sector,
                    cover: cover,
                    cx: cx,
                    cy: cy,
                    mx: sector.middle.x,
                    my: sector.middle.y,
                    mangle: sector.mangle,
                    r: r,
                    value: values[j],
                    total: total,
                    label: that.labels && that.labels[j]
                };
                cover.click(function () { f.call(o); });
            })(series[i], covers[i], i);
        }
        return this;
    };
    chart.inject = function (element) {
        element.insertBefore(covers[0]);
    };
    var legend = function (labels, otherslabel, mark, dir) {
        var x = cx + r + r / 5,
            y = cy,
            h = y + 10;
        labels = labels || [];
        dir = (dir && dir.toLowerCase && dir.toLowerCase()) || "east";
        mark = paper.g.markers[mark && mark.toLowerCase()] || "disc";
        chart.labels = paper.set();
        for (var i = 0; i < len; i++) {
            var clr = series[i].attr("fill"),
                j = values[i].order,
                txt;
            values[i].others && (labels[j] = otherslabel || "Others");
            labels[j] = paper.g.labelise(labels[j], values[i], total);
            chart.labels.push(paper.set());
            chart.labels[i].push(paper.g[mark](x + 5, h, 5).attr({fill: clr, stroke: "none"}));
            chart.labels[i].push(txt = paper.text(x + 20, h, labels[j] || values[j]).attr(paper.g.txtattr).attr({fill: opts.legendcolor || "#000", "text-anchor": "start"}));
            covers[i].label = chart.labels[i];
            h += txt.getBBox().height * 1.2;
        }
        var bb = chart.labels.getBBox(),
            tr = {
                east: [0, -bb.height / 2],
                west: [-bb.width - 2 * r - 20, -bb.height / 2],
                north: [-r - bb.width / 2, -r - bb.height - 10],
                south: [-r - bb.width / 2, r + 10]
            }[dir];
        chart.labels.translate.apply(chart.labels, tr);
        chart.push(chart.labels);
    };
    if (opts.legend) {
        legend(opts.legend, opts.legendothers, opts.legendmark, opts.legendpos);
    }
    chart.push(series, covers);
    chart.series = series;
    chart.covers = covers;
    return chart;
};



(function($){$.extend({tablesorter:new function(){var parsers=[],widgets=[];this.defaults={cssHeader:"header",cssAsc:"headerSortUp",cssDesc:"headerSortDown",sortInitialOrder:"asc",sortMultiSortKey:"shiftKey",sortForce:null,sortAppend:null,textExtraction:"simple",parsers:{},widgets:[],widgetZebra:{css:["even","odd"]},headers:{},widthFixed:false,cancelSelection:true,sortList:[],headerList:[],dateFormat:"us",decimal:'.',debug:false};function benchmark(s,d){log(s+","+(new Date().getTime()-d.getTime())+"ms");}this.benchmark=benchmark;function log(s){if(typeof console!="undefined"&&typeof console.debug!="undefined"){console.log(s);}else{alert(s);}}function buildParserCache(table,$headers){if(table.config.debug){var parsersDebug="";}var rows=table.tBodies[0].rows;if(table.tBodies[0].rows[0]){var list=[],cells=rows[0].cells,l=cells.length;for(var i=0;i<l;i++){var p=false;if($.metadata&&($($headers[i]).metadata()&&$($headers[i]).metadata().sorter)){p=getParserById($($headers[i]).metadata().sorter);}else if((table.config.headers[i]&&table.config.headers[i].sorter)){p=getParserById(table.config.headers[i].sorter);}if(!p){p=detectParserForColumn(table,cells[i]);}if(table.config.debug){parsersDebug+="column:"+i+" parser:"+p.id+"\n";}list.push(p);}}if(table.config.debug){log(parsersDebug);}return list;};function detectParserForColumn(table,node){var l=parsers.length;for(var i=1;i<l;i++){if(parsers[i].is($.trim(getElementText(table.config,node)),table,node)){return parsers[i];}}return parsers[0];}function getParserById(name){var l=parsers.length;for(var i=0;i<l;i++){if(parsers[i].id.toLowerCase()==name.toLowerCase()){return parsers[i];}}return false;}function buildCache(table){if(table.config.debug){var cacheTime=new Date();}var totalRows=(table.tBodies[0]&&table.tBodies[0].rows.length)||0,totalCells=(table.tBodies[0].rows[0]&&table.tBodies[0].rows[0].cells.length)||0,parsers=table.config.parsers,cache={row:[],normalized:[]};for(var i=0;i<totalRows;++i){var c=table.tBodies[0].rows[i],cols=[];cache.row.push($(c));for(var j=0;j<totalCells;++j){cols.push(parsers[j].format(getElementText(table.config,c.cells[j]),table,c.cells[j]));}cols.push(i);cache.normalized.push(cols);cols=null;};if(table.config.debug){benchmark("Building cache for "+totalRows+" rows:",cacheTime);}return cache;};function getElementText(config,node){if(!node)return"";var t="";if(config.textExtraction=="simple"){if(node.childNodes[0]&&node.childNodes[0].hasChildNodes()){t=node.childNodes[0].innerHTML;}else{t=node.innerHTML;}}else{if(typeof(config.textExtraction)=="function"){t=config.textExtraction(node);}else{t=$(node).text();}}return t;}function appendToTable(table,cache){if(table.config.debug){var appendTime=new Date()}var c=cache,r=c.row,n=c.normalized,totalRows=n.length,checkCell=(n[0].length-1),tableBody=$(table.tBodies[0]),rows=[];for(var i=0;i<totalRows;i++){rows.push(r[n[i][checkCell]]);if(!table.config.appender){var o=r[n[i][checkCell]];var l=o.length;for(var j=0;j<l;j++){tableBody[0].appendChild(o[j]);}}}if(table.config.appender){table.config.appender(table,rows);}rows=null;if(table.config.debug){benchmark("Rebuilt table:",appendTime);}applyWidget(table);setTimeout(function(){$(table).trigger("sortEnd");},0);};function buildHeaders(table){if(table.config.debug){var time=new Date();}var meta=($.metadata)?true:false,tableHeadersRows=[];for(var i=0;i<table.tHead.rows.length;i++){tableHeadersRows[i]=0;};$tableHeaders=$("thead th",table);$tableHeaders.each(function(index){this.count=0;this.column=index;this.order=formatSortingOrder(table.config.sortInitialOrder);if(checkHeaderMetadata(this)||checkHeaderOptions(table,index))this.sortDisabled=true;if(!this.sortDisabled){$(this).addClass(table.config.cssHeader);}table.config.headerList[index]=this;});if(table.config.debug){benchmark("Built headers:",time);log($tableHeaders);}return $tableHeaders;};function checkCellColSpan(table,rows,row){var arr=[],r=table.tHead.rows,c=r[row].cells;for(var i=0;i<c.length;i++){var cell=c[i];if(cell.colSpan>1){arr=arr.concat(checkCellColSpan(table,headerArr,row++));}else{if(table.tHead.length==1||(cell.rowSpan>1||!r[row+1])){arr.push(cell);}}}return arr;};function checkHeaderMetadata(cell){if(($.metadata)&&($(cell).metadata().sorter===false)){return true;};return false;}function checkHeaderOptions(table,i){if((table.config.headers[i])&&(table.config.headers[i].sorter===false)){return true;};return false;}function applyWidget(table){var c=table.config.widgets;var l=c.length;for(var i=0;i<l;i++){getWidgetById(c[i]).format(table);}}function getWidgetById(name){var l=widgets.length;for(var i=0;i<l;i++){if(widgets[i].id.toLowerCase()==name.toLowerCase()){return widgets[i];}}};function formatSortingOrder(v){if(typeof(v)!="Number"){i=(v.toLowerCase()=="desc")?1:0;}else{i=(v==(0||1))?v:0;}return i;}function isValueInArray(v,a){var l=a.length;for(var i=0;i<l;i++){if(a[i][0]==v){return true;}}return false;}function setHeadersCss(table,$headers,list,css){$headers.removeClass(css[0]).removeClass(css[1]);var h=[];$headers.each(function(offset){if(!this.sortDisabled){h[this.column]=$(this);}});var l=list.length;for(var i=0;i<l;i++){h[list[i][0]].addClass(css[list[i][1]]);}}function fixColumnWidth(table,$headers){var c=table.config;if(c.widthFixed){var colgroup=$('<colgroup>');$("tr:first td",table.tBodies[0]).each(function(){colgroup.append($('<col>').css('width',$(this).width()));});$(table).prepend(colgroup);};}function updateHeaderSortCount(table,sortList){var c=table.config,l=sortList.length;for(var i=0;i<l;i++){var s=sortList[i],o=c.headerList[s[0]];o.count=s[1];o.count++;}}function multisort(table,sortList,cache){if(table.config.debug){var sortTime=new Date();}var dynamicExp="var sortWrapper = function(a,b) {",l=sortList.length;for(var i=0;i<l;i++){var c=sortList[i][0];var order=sortList[i][1];var s=(getCachedSortType(table.config.parsers,c)=="text")?((order==0)?"sortText":"sortTextDesc"):((order==0)?"sortNumeric":"sortNumericDesc");var e="e"+i;dynamicExp+="var "+e+" = "+s+"(a["+c+"],b["+c+"]); ";dynamicExp+="if("+e+") { return "+e+"; } ";dynamicExp+="else { ";}var orgOrderCol=cache.normalized[0].length-1;dynamicExp+="return a["+orgOrderCol+"]-b["+orgOrderCol+"];";for(var i=0;i<l;i++){dynamicExp+="}; ";}dynamicExp+="return 0; ";dynamicExp+="}; ";eval(dynamicExp);cache.normalized.sort(sortWrapper);if(table.config.debug){benchmark("Sorting on "+sortList.toString()+" and dir "+order+" time:",sortTime);}return cache;};function sortText(a,b){return((a<b)?-1:((a>b)?1:0));};function sortTextDesc(a,b){return((b<a)?-1:((b>a)?1:0));};function sortNumeric(a,b){return a-b;};function sortNumericDesc(a,b){return b-a;};function getCachedSortType(parsers,i){return parsers[i].type;};this.construct=function(settings){return this.each(function(){if(!this.tHead||!this.tBodies)return;var $this,$document,$headers,cache,config,shiftDown=0,sortOrder;this.config={};config=$.extend(this.config,$.tablesorter.defaults,settings);$this=$(this);$headers=buildHeaders(this);this.config.parsers=buildParserCache(this,$headers);cache=buildCache(this);var sortCSS=[config.cssDesc,config.cssAsc];fixColumnWidth(this);$headers.click(function(e){$this.trigger("sortStart");var totalRows=($this[0].tBodies[0]&&$this[0].tBodies[0].rows.length)||0;if(!this.sortDisabled&&totalRows>0){var $cell=$(this);var i=this.column;this.order=this.count++%2;if(!e[config.sortMultiSortKey]){config.sortList=[];if(config.sortForce!=null){var a=config.sortForce;for(var j=0;j<a.length;j++){if(a[j][0]!=i){config.sortList.push(a[j]);}}}config.sortList.push([i,this.order]);}else{if(isValueInArray(i,config.sortList)){for(var j=0;j<config.sortList.length;j++){var s=config.sortList[j],o=config.headerList[s[0]];if(s[0]==i){o.count=s[1];o.count++;s[1]=o.count%2;}}}else{config.sortList.push([i,this.order]);}};setTimeout(function(){setHeadersCss($this[0],$headers,config.sortList,sortCSS);appendToTable($this[0],multisort($this[0],config.sortList,cache));},1);return false;}}).mousedown(function(){if(config.cancelSelection){this.onselectstart=function(){return false};return false;}});$this.bind("update",function(){this.config.parsers=buildParserCache(this,$headers);cache=buildCache(this);}).bind("sorton",function(e,list){$(this).trigger("sortStart");config.sortList=list;var sortList=config.sortList;updateHeaderSortCount(this,sortList);setHeadersCss(this,$headers,sortList,sortCSS);appendToTable(this,multisort(this,sortList,cache));}).bind("appendCache",function(){appendToTable(this,cache);}).bind("applyWidgetId",function(e,id){getWidgetById(id).format(this);}).bind("applyWidgets",function(){applyWidget(this);});if($.metadata&&($(this).metadata()&&$(this).metadata().sortlist)){config.sortList=$(this).metadata().sortlist;}if(config.sortList.length>0){$this.trigger("sorton",[config.sortList]);}applyWidget(this);});};this.addParser=function(parser){var l=parsers.length,a=true;for(var i=0;i<l;i++){if(parsers[i].id.toLowerCase()==parser.id.toLowerCase()){a=false;}}if(a){parsers.push(parser);};};this.addWidget=function(widget){widgets.push(widget);};this.formatFloat=function(s){var i=parseFloat(s);return(isNaN(i))?0:i;};this.formatInt=function(s){var i=parseInt(s);return(isNaN(i))?0:i;};this.isDigit=function(s,config){var DECIMAL='\\'+config.decimal;var exp='/(^[+]?0('+DECIMAL+'0+)?$)|(^([-+]?[1-9][0-9]*)$)|(^([-+]?((0?|[1-9][0-9]*)'+DECIMAL+'(0*[1-9][0-9]*)))$)|(^[-+]?[1-9]+[0-9]*'+DECIMAL+'0+$)/';return RegExp(exp).test($.trim(s));};this.clearTableBody=function(table){if($.browser.msie){function empty(){while(this.firstChild)this.removeChild(this.firstChild);}empty.apply(table.tBodies[0]);}else{table.tBodies[0].innerHTML="";}};}});$.fn.extend({tablesorter:$.tablesorter.construct});var ts=$.tablesorter;ts.addParser({id:"text",is:function(s){return true;},format:function(s){return $.trim(s.toLowerCase());},type:"text"});ts.addParser({id:"digit",is:function(s,table){var c=table.config;return $.tablesorter.isDigit(s,c);},format:function(s){return $.tablesorter.formatFloat(s);},type:"numeric"});ts.addParser({id:"currency",is:function(s){return/^[£$€?.]/.test(s);},format:function(s){return $.tablesorter.formatFloat(s.replace(new RegExp(/[^0-9.]/g),""));},type:"numeric"});ts.addParser({id:"ipAddress",is:function(s){return/^\d{2,3}[\.]\d{2,3}[\.]\d{2,3}[\.]\d{2,3}$/.test(s);},format:function(s){var a=s.split("."),r="",l=a.length;for(var i=0;i<l;i++){var item=a[i];if(item.length==2){r+="0"+item;}else{r+=item;}}return $.tablesorter.formatFloat(r);},type:"numeric"});ts.addParser({id:"url",is:function(s){return/^(https?|ftp|file):\/\/$/.test(s);},format:function(s){return jQuery.trim(s.replace(new RegExp(/(https?|ftp|file):\/\//),''));},type:"text"});ts.addParser({id:"isoDate",is:function(s){return/^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(s);},format:function(s){return $.tablesorter.formatFloat((s!="")?new Date(s.replace(new RegExp(/-/g),"/")).getTime():"0");},type:"numeric"});ts.addParser({id:"percent",is:function(s){return/\%$/.test($.trim(s));},format:function(s){return $.tablesorter.formatFloat(s.replace(new RegExp(/%/g),""));},type:"numeric"});ts.addParser({id:"usLongDate",is:function(s){return s.match(new RegExp(/^[A-Za-z]{3,10}\.? [0-9]{1,2}, ([0-9]{4}|'?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(AM|PM)))$/));},format:function(s){return $.tablesorter.formatFloat(new Date(s).getTime());},type:"numeric"});ts.addParser({id:"shortDate",is:function(s){return/\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4}/.test(s);},format:function(s,table){var c=table.config;s=s.replace(/\-/g,"/");if(c.dateFormat=="us"){s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/,"$3/$1/$2");}else if(c.dateFormat=="uk"){s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/,"$3/$2/$1");}else if(c.dateFormat=="dd/mm/yy"||c.dateFormat=="dd-mm-yy"){s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2})/,"$1/$2/$3");}return $.tablesorter.formatFloat(new Date(s).getTime());},type:"numeric"});ts.addParser({id:"time",is:function(s){return/^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(am|pm)))$/.test(s);},format:function(s){return $.tablesorter.formatFloat(new Date("2000/01/01 "+s).getTime());},type:"numeric"});ts.addParser({id:"metadata",is:function(s){return false;},format:function(s,table,cell){var c=table.config,p=(!c.parserMetadataName)?'sortValue':c.parserMetadataName;return $(cell).metadata()[p];},type:"numeric"});ts.addWidget({id:"zebra",format:function(table){if(table.config.debug){var time=new Date();}$("tr:visible",table.tBodies[0]).filter(':even').removeClass(table.config.widgetZebra.css[1]).addClass(table.config.widgetZebra.css[0]).end().filter(':odd').removeClass(table.config.widgetZebra.css[0]).addClass(table.config.widgetZebra.css[1]);if(table.config.debug){$.tablesorter.benchmark("Applying Zebra widget",time);}}});})(jQuery);

if(typeof(F1)=='undefined') {F1 = {}}
(function(){
  F1.Visualizer = function(options) {  //constructor
    this.options = options;
    F1.Visualizer.instances[options.id] = this;
  }
  
  F1.Visualizer.instances = {}
  F1.Visualizer.prototype = {
    
      init: function(map_id, chart_id, is_edit) {
          var self = this;

          self.is_edit = is_edit;
          self.element = "visualizer_" + chart_id;
          jq('#charts').append(F1.Visualizer.views.chart_div({ element: self.element }));
          var chart_url = F1.maker_host + '/maps/' + map_id + '/charts/' + chart_id + '.json?callback=?';
          jq.getJSON(chart_url, {}, function(data) {
              self.chart = data;

              /*
              jq('#'+self.element).draggable({ handle: '.vis_header', stop: function(event, ui) { self.moved(ui); } });
              jq('#'+self.element).resizable( 
                  { 
                      start: function(event, ui) { jq('#visualizations').width("100%"); jq('#visualizations').height("100%"); },
                      stop: function(event, ui) { self.resize(ui.size.height, ui.size.width) },
                      helper: 'ui-resizable-helper',
                      handles: 'se',
                      minHeight: 225,
                      minWidth: 300,
                      maxHeight: 370,
                      maxWidth: 600
                  });
              */
            self.determine_position();
            jq('#'+self.element+'_object').addClass('cover_div');
            setTimeout(function() { self.loading_timeout() }, 15000);
            jq('#'+self.element).fadeIn();
            setTimeout(function() { self.load_data() }, 2500); // TODO THIS NEEDS TO BE FIXED IN THE FLASH
          });
    },
		
		load_data: function() {
			var self = this;
			self.limit = (self.chart.style.sort.limit == null ? 10 : parseInt(self.chart.style.sort.limit))
			self.order = (self.chart.style.sort.order == null ? 'ascending' : self.chart.style.sort.order)
			self.sort_attribute = (self.chart.style.sort.order == null ? self.chart.style.attributes.data : self.chart.style.sort.attribute)
			self.load_features(function() { 
				if (self.features == null || self.features.length < 1) {
					self.throw_error("We could not get any features!", self.is_edit);
					return;
				}
				self.prep_features();
				self.populate_chart_back();
				self.render_chart();
				self.hide_back();
				jq('#'+self.element+'_object').removeClass('cover_div');
				self.wire_events();
			});
		},
		
		load_features: function(callback) {
			var self = this;
			var items = [];
			F1.Visualizer.utils.get_data_from_flash(self.chart.style.finder_id, function(data) {
			
				if (data.features != null && data.features.length > 0) {
					jq.each(data.features, function(i, feature) { 
						var ftr = feature.attributes;
						ftr['internal_flash_id'] = i;
						items.push(ftr);
					});
				}
				self.features = items;
				self.attributes = data.attributes;
				callback();
			});
			// jq.each(data.attributes, function(i, attr) { 
			// 	self.attributes[attr.attributes.original_name] = attr.attributes.name;
			// });
		},
		
		loading_timeout: function() {
			var self = this;
			if (!self.is_rendered) {
				self.throw_error("We're sorry, but there was a problem loading this chart.", self.is_edit);
			}
		},
		
		throw_error: function(message, show_delete) {
			var self = this;
			self.hide_back();
			jq('#'+this.element+' .vis_header p').html("CHART ERROR!");
			var html = message;
			if (show_delete) {
				html += "<br /><br />";
				html += "<a href='#' class='delete_chart'>Delete this chart.</a>";
				jq('#'+this.element+'_object .delete_chart').live('click', function() {
					self.delete_chart();
				});
			}
			jq('#'+this.element+'_object').html(html);
			jq('#'+self.element+'_object').removeClass('cover_div'); 
		},
		
        prep_features: function(start, limit, order, sort_attribute) {
            var self = this;
            var start = (start == null ? 0 : start);
            var limit = (limit == null ? self.limit : limit)
            var order = (order == null ? self.order : order)
            var sort_attribute = (sort_attribute == null ? self.sort_attribute : sort_attribute)
            var items = [];
            var items = F1.Visualizer.utils.sort_features(self.features, sort_attribute, order);
            // THis dandy doohickey makes sure it doesn't split same x-values
            while (F1.Visualizer.chart_templates[self.chart.style.chart_type].attribute_select
                && items[limit-1] && items[limit] 
                && (items[limit-1][sort_attribute] == items[limit][sort_attribute])) {
                    limit++;
                }
                items = items.slice(start, limit); 
                self.chart.style.attributes['sort'] = self.chart.style.sort.attribute;
                var attributes = {}
                if (F1.Visualizer.chart_templates[self.chart.style.chart_type].attribute_select) {
                    jq.each(self.chart.style.attributes, function(name, attribute) { 
                        attributes[name] = { original_name: attribute, name: self.attributes[attribute].name };
                    });
                } else {
                    attributes = self.attributes;
                }
                self.data = { 'attributes':attributes, 'features': items }
                self.items = items;
            },
		
		wire_events: function() {
			var self = this;
			jq('#'+self.element+'_object .grid_chart table tr').live("mouseover", function() {
				jq(this).addClass('hovering');
			});
			jq('#'+self.element+'_object .grid_chart table tr').live("mouseout", function() {
				jq(this).removeClass('hovering');
			});

			jq('#'+self.element+'_object .grid_chart table tr').live("click", function() {
				if (jq(this).hasClass('selected')) {
					jq('#'+self.element+'_object .grid_chart table tr').removeClass('selected');
					F1.Maker.current_map.swf.selectFeature(self.chart.style.finder_id, -1);
				} else {
					jq('#'+self.element+'_object .grid_chart table tr').removeClass('selected');
					jq(this).addClass('selected');
					F1.Maker.current_map.swf.selectFeature(self.chart.style.finder_id, this.id.gsub(/feature\_/, ''));
				}
			});
			jq('#'+self.element+'_object .grid_chart .load_link').live("click", function() {
				// Load next 10 items;
				self.limit += 10;
				self.prep_features(0, self.limit);
				self.render_chart();
				return false;
			});
			jq('#'+self.element+' .vis_header .chart_info').bind('click', function(event) {
				self.show_back();
				return false;
			});
			jq('#'+this.element+' .vis_header .delete_chart').live('click', function(e) { self.delete_chart(); return false; });
			jq('#'+self.element+'_object_grid th').live('click', function() {
				var sort_direction = 'descending';
				if (jq(this).hasClass('headerSortUp')) {
					sort_direction = 'ascending';
				} 
				self.order = sort_direction;
				jq('#'+self.element+'_object_grid th').removeClass('headerSortDown headerSortUp');
				var column_name = jq(this).attr('name');
				self.sort_attribute = column_name;
				var index = jq('#'+self.element+'_object_grid th').index(this);
				self.prep_features();
				self.redraw();
				var new_element = jq('#'+self.element+'_object_grid th')[index];
				if (sort_direction == 'descending') {
					jq(new_element).addClass('headerSortUp');
				} else {
					jq(new_element).addClass('headerSortDown');
				}
				return false;
			});
		},
		
		show_back: function(callback) {
			var self = this;
			jq('#'+self.element+' .vis_header .chart_info').unbind('click');
			jq('#'+self.element+'_object').fadeOut(function() { jq('#'+self.element+'_back').fadeIn(function() {
				callback && callback();
				jq('#'+self.element+' .vis_header .chart_info').bind('click', function(event) {
					self.hide_back();
					//jq("#"+self.element).rotate3Di('unflip', 500, { sideChange: function() { self.hide_back() } })
					return false;
				});
				
			}); });

		},
		hide_back: function(callback) {
			var self = this;
			jq('#'+self.element+' .vis_header .chart_info').unbind('click');
			jq('#'+self.element+'_back').fadeOut(function() { jq('#'+self.element+'_object').fadeIn(function() {
				callback && callback();
				 jq('#'+self.element+' .vis_header .chart_info').bind('click', function(event) {
					self.show_back();
					//jq("#"+self.element).rotate3Di('flip', 500, { sideChange: function() { self.show_back() } })
					return false;
				});
				
			}) });			


			
		},
		
		populate_chart_back: function()
		{			
			var self = this;
			var title = (self.chart.title == "My Chart Title" ? "" : self.chart.title);
			var description = ((self.chart.style.description == "My chart description." || self.chart.description == "") ? "No chart description given." : self.chart.style.description);
			jq('#'+self.element+'_back').html(F1.Visualizer.views.back_info({ 
				title: title, description: description, 
				height: self.position.height - 35, width: self.position.width - 10
			}));
		},
		
		determine_position: function() {
			var self = this;
			var top = (document.documentElement.clientHeight * self.chart.style.position.y);
			var left = (document.documentElement.clientWidth * self.chart.style.position.x);
			var height = parseInt(self.chart.style.position.height, 10);
			var width = parseInt(self.chart.style.position.width);
			
			// Keep everything on screen
			if ((top + height) > document.documentElement.clientHeight) top = document.documentElement.clientHeight - height - 5;
			if ((left + width) > document.documentElement.clientWidth) left = document.documentElement.clientWidth - width - 5;
			if (top < 0) top = 0;
			if (left < 0) left = 0;
			
			jq('#'+self.element).css('height', height + 'px');
			jq('#'+self.element).css('width', width + 'px');
			jq('#'+self.element).css('top', top+'px');
			jq('#'+self.element).css('left', left+'px');
			self.position = { 'height':height, 'width':width, 'x':left, 'y':top } // temporary position
		},
		
		render_chart: function() {
			var self = this;
			var title = (self.chart.title == "My Chart Title" ? "" : self.chart.title);
			jq('#'+this.element+' .vis_header p').html(title);
			jq('#'+this.element+' .vis_header p').css('width', (self.position.width - 44)+'px');
			var icon_html = "";
			if (this.is_edit) {
				icon_html += '<a href="#" class="delete_chart chart-icon ui-dialog-titlebar-close ui-corner-all" role="button" unselectable="on" style="-moz-user-select: none;"><span class="ui-icon ui-icon-closethick" unselectable="on" style="-moz-user-select: none;">close</span></a>';
			}
			icon_html += '<a href="#" class="chart_info chart-icon ui-dialog-titlebar-close ui-corner-all" role="button" unselectable="on" style="-moz-user-select: none;"><span class="ui-icon ui-icon-info" unselectable="on" style="-moz-user-select: none;">info</span></a>';
			jq('#'+this.element+' .vis_header span').html(icon_html);
			jq('#'+this.element+'_object').html("");
			jq('#'+this.element+'_object').attr('style', null);
			F1.Visualizer.charts[self.chart.style.chart_type](self.position.height, self.position.width, self.data, this.element+'_object');
			self.is_rendered = true;
		},
		
		get_break: function(breaks, value) {
			for (i=0;i<breaks.length;i++)
			{
				if (value < breaks[i]) {
					return i;
				}
			}
			return (breaks.length);
		},
		
		delete_chart: function() {
			var self = this;
			if (confirm('Are you sure you want to permanently delete ' + (self.chart.title == "My Chart Title" ? 'this chart' : "'" + self.chart.title +"'")  + '?'))
			{
				jq('#'+self.element+'_object').html("");
				jq('#'+self.element+'_object').addClass('cover_div');
				var url = F1.maker_host + '/maps/' + self.chart.map_id + '/charts/' + self.chart.id + '.json';
				
				jq.ajax({
					type: 'POST',
					data: { _method: 'delete' },
					url: url,
					success: function(data) { jq('#'+self.element).fadeOut(function() { jq('#'+self.element).remove(); }); },
					error: function(data) { 
						self.throw_error("Something went wrong and we were unable to delete this chart. Please try again later.", self.is_edit);
					}
				});
			}
		},
		
		resize: function(height, width) {
			var self = this;
			jq('#visualizations').width("0%");
			jq('#visualizations').height("0%");
			self.position.width = width;
			self.position.height = height;
			//self.redraw();
			self.hide_back(function() { self.redraw(); });
			// 	
				// jq('#'+self.element.id).queue(function() {
				// 	self.redraw();
				// });
			if (self.is_edit) self.save_position();
		},
		
		redraw: function() {
			var self = this;
			this.render_chart();
			self.populate_chart_back();
			// Protovis resets visibility, so we need to hide it again if the chart is flipped:			
			// if (jq('#'+self.element+'_back').is(':visible')) {
			// 				self.show_back();
			// 			}
			self.hide_back();
		
		},
		
		moved: function(ui) {
			var self = this;
			// Fun with javascript rouding
			self.position.x = Math.round(10000*(ui.absolutePosition.left / document.documentElement.clientWidth))/10000;
			self.position.y = Math.round(10000*(ui.absolutePosition.top / document.documentElement.clientHeight))/10000;
			
			if (self.is_edit) self.save_position();
		},
			
		save_position: function() {
			var self = this;
			var url = F1.maker_host + '/maps/' + self.chart.map_id + '/charts/' + self.chart.id
			var params = "chart[style][position][x]="+self.position.x;
			params += "&chart[style][position][y]="+self.position.y;
			params += "&chart[style][position][height]="+self.position.height;
			params += "&chart[style][position][width]="+self.position.width;
			
			jq.ajax({
			  type: 'PUT',
			  url: url,
			  data: params,
				success: function(data) {  },
			  dataType: 'json'
			});
			
		}
	}
	
	F1.Visualizer.charts = {
	  
	 	/*
	 	 * bar chart using g.raphael
	 	 */
		bar: function(height, width, items, element_id, opts) 
		{		
			var self = this;
			jq('#'+element_id).html("");
			var split_items = F1.Visualizer.utils.split(items);
			var ranges = F1.Visualizer.utils.rangify(split_items.features);
			var data = split_items.features;

     	//log({split_items: split_items, ranges: ranges, data: data});
		
			if (ranges.span <= 0) { jq('#'+element_id).html('Could not render chart with this data. Try selecting a different attribute to graph or increase the number of rows.'); return false; }
			var sortedData = data.slice().sort();
			if (sortedData[0] < 0) { jq('#'+element_id).html('Could not render chart with this data. Try selecting only positive data.'); return false; }
			
      //jq('#'+element_id).attr('title', 'x axis: ' + items.attributes.sort.name + '\n y axis: ' + items.attributes.data.name ); //#redundant
			
			var r = Raphael(element_id);
			//r.safari(); // Raphael has problems with webkit & mouseover/rendering

			var showLabel = function (ev) 
			{
				var rotation = 0;
				if (this.bar.index > (data.length / 2)) {
					rotation = 180;
				}
				var Label = items.attributes.description.name;
        var labelVal = items.features[this.bar.index][Label]
				var feature_num = new Numify(split_items.features[this.bar.index]).commify().flatten().to_s
				var sorted_num  = new Numify(split_items.sorted[this.bar.index]  ).commify().flatten().to_s
				var text = Textify.elide_during(Label, 20, '...' )+": " + labelVal + "\n"+Textify.elide_during(items.attributes.data.name, 20, '...' )+": " + feature_num + "\n"+ Textify.elide_during(items.attributes.sort.name, 20, '...' ) +": " + sorted_num;
				var x = 1000 //this.bar.x;  // top right justify label
				var y = 0    //this.bar.y;
				this.tag = r.g.label(x, y, text).insertBefore(this);
				var bbox = this.tag.getBBox();
				if (bbox.x < 0) x = bbox.width / 2;   // TODO: find a way to calculate that takes into account the varying gutter width for data counts > 50
				if (bbox.x + bbox.width > width) x = width - (bbox.width/2);
				if (bbox.y < 0) y = bbox.height / 2;
				if (bbox.y + bbox.height > height) y = height - (bbox.height/2);
				this.tag.remove();
				this.tag = r.g.label(x, y, text).insertBefore(this);
				this.tag.show();
      		}
      
      		var hideLabel = function () 
      		{
        		//this.tag && this.tag.animate({opacity: 0}, 300, function () {this.remove();});
				this.tag && this.tag.remove();
      		}
            
      		r.g.txtattr.font = "12px 'Helvetica', Helvetica, sans-serif";
      		var left_lbl = r.g.text(10, parseInt(height/2), Textify.elide_during(items.attributes.data.name, 25, '...'));
    			left_lbl.rotate(270);
    			left_lbl.attr({title:items.attributes.data, fill:"#999"});
    			this.preview_yaxis_label = left_lbl // for the hover effects in the creator

							
      		var gutter = data.length > 50 ? "0%" : null;
            var bar_options = 
            { 
              axis: "0 0 1 1",
            	gutter: gutter, 
            	ids : split_items.ids
            };

          var chart_width = width-40
          var chart_height = height-40
      		if(opts && opts != null && opts["href"] != null)
        		bar_options["href"] = opts["href"];
          var barchart = r.g.barchart(20, 0, chart_width, chart_height, [data], bar_options).hover(showLabel, hideLabel);
      		
      		
      		//F1.poop = barchart;
			
			barchart.highlightedFeatures = [];
			
			if(opts != null && opts["onclick"] != null)
      		{
        		barchart.click( function(e) {           
         			// this.attr( { stroke : "#fefe00", 'stroke-width' : 4 } );
         			
         			var feature = this.bar;
         			
         			barchart.highlightedFeatures.push( feature );
         			
         			feature.attr( { fill : "#fefe00", stroke : "#f00" } );
       				var atts = [
						{ name : items.attributes.sort.original_name, value : split_items.sorted[this.bar.index] },
						{ name : items.attributes.data.original_name, value : split_items.features[this.bar.index] }
					];
					
					opts["onclick"](e, atts);
          		});
      		}
      		
      		barchart.clearHighlights = function()
      		{
      			for ( var i = 0; i < barchart.highlightedFeatures.length; i++ )
      			{
      				barchart.highlightedFeatures[i].attr( {fill: "120-#13416e-#226a9e", 'stroke-width': '1', 'stroke': '#13416e'} );
      			}
      			
      			barchart.highlightedFeatures = [];
      		}
      		
      		barchart.highlightFeaturesByID = function( features, idField )
      		{
      			var guid, feature;
      			jq.each( features, function( index, featureData )
      			{
      				guid = featureData[idField];
      				feature = barchart.featureDictionary[guid].bar;
      				feature.attr( { fill : "#fefe00", stroke : "#f00" } );
	          		barchart.highlightedFeatures.push( feature );
      			});
      		}

	
			// group colorize
			var colors = ["#3366CC", "#0D376F"]; //Raphael.fn.g.colors;
			var index = 0;
			var lastItem = split_items.sorted[0];
			jq.each(split_items.sorted, function(i, sItem) {
				if (lastItem != sItem) {
					index++;
					if (index >= colors.length) index = 0;
				}
				barchart.bars[0][i].attr({fill: "120-#13416e-#226a9e", 'stroke-width': '1', 'stroke': '#13416e'})
		        /*jq(barchart.covers[0][i].node).bind('click', function(e) {
		          log({index: index, val: data[i], id: split_items.ids[i]});
		        });*/
				lastItem = sItem;
			});
			//var xLabelText = items.attributes.description.name + " sorted by " + items.attributes.sort.name;
			var xLabelText = items.attributes.sort.name;
			var xLabel = r.g.text(parseInt(width/2), height-35, Textify.elide_during(xLabelText, 45, '...'	));
			xLabel.attr({title:xLabelText, fill:"#999"});
			xLabel.node.id = "preview_xaxis"			
			this.preview_xaxis_label = xLabel // for the hover effects in the creator
			return barchart;
		},
		// end bar chart
		
		/**
		 * grid
		 */
		grid: function(height, width, data, element_id, keys) 
		{
			var items = data.features;
			
			if (items == null || items.length < 1) return;

			if(!(height instanceof String)) 
				height = height - 23; 
			if(!(width instanceof String)) 
			    width = width - 2; 
			    
			if(keys == null) 
			{
        		keys = [];
    			for(key in data.attributes)
    	  		{
    		  		if (key != "internal_flash_id")
    			  		keys.push(key);
    			}
    		}
			var header_row = F1.Visualizer.views.table_row({'columns':jq.map(keys, function(key) { 
				return F1.Visualizer.views.header_column({ original_name: key, name: data.attributes[key].name }) 
			}).join('') });
			var rows = [];
			var index = 0;
			jq.each(items, function(i, item) 
			{
			    index += 1;
				var columns = [];
				jq.each(keys, function(j, key){
						columns.push(F1.Visualizer.views.data_column({ 'data':item[key] }));		
				});
				rows.push(F1.Visualizer.views.grid_row({id:item.internal_flash_id,'columns':columns.join(''),'odd':((index % 2 == 0) ? "even" : "odd")}))
			});
			var table = F1.Visualizer.views.grid_div({ 'id': element_id+'_grid', 'height':height, 'width':width, 'header_row':header_row, 'data_rows':rows.join('') });
			jq('#'+element_id).html(table);
			//jq('#'+element_id+'_grid').tablesorter();
			return true;
		},
		// end grid
		
		/*
		 * scatterplot using g.raphael
		 */
		scatterplot: function(height, width, items, element_id, opts) 
		{
			var self = this;
			jq('#'+element_id).html("");
			var split_items = F1.Visualizer.utils.split(items);
			var rangesy = F1.Visualizer.utils.rangify(split_items.features);
			var rangesx =  F1.Visualizer.utils.rangify(split_items.sorted);
			var data = split_items.features;
			
			if (rangesx.span <= 0) { jq('#'+element_id).html('Could not render chart with this data. Try selecting a different attribute to graph or increase the number of rows.'); return false; }
      var sortedData = data.slice().sort();
      if (sortedData[0] < 0) { jq('#'+element_id).html('Could not render chart with this data. Try selecting only positive data.'); return false; }
    
      
			var r = Raphael(element_id);
			//r.safari(); // Raphael has problems with webkit & mouseover/rendering
			//var flag;
			var dotchart = null;
			var showLabel = function () 
			{
				var rotation = 0;
				if (this.index > (data.length / 2)) {
					rotation = 180;
				}
				var Label = Textify.elide_during(items.attributes.description.name, 20, '...' );
        var labelVal = items.features[this.index][Label]
				var text = Label+": " + labelVal + "\n"+ Textify.elide_during(items.attributes.sort.name, 20, '...' ) +": " + split_items.sorted[this.index] + "\n"+Textify.elide_during(items.attributes.data.name, 20, '...' )+": " + split_items.features[this.index];
        		this.tag = this.tag || r.g.tag(this.x, this.y, text, rotation, this.r + 2).insertBefore(this);
        		this.tag.show();
      		}
      		var hideLabel = function () 
      		{
        		this.tag && this.tag.hide();
      		}

      		r.g.txtattr.font = "12px 'Helvetica', Helvetica, sans-serif";
      		var left_lbl = r.g.text(10, parseInt(height/2), Textify.elide_during(items.attributes.data.name, 25, '...'));
			left_lbl.rotate(270);
			left_lbl.attr({title:items.attributes.data.name, fill:"#999"});
			var xLabelText = items.attributes.sort.name;
			var xLabel = r.g.text(parseInt(width/2), height-35, Textify.elide_during(xLabelText, 45, '...'	));
			xLabel.attr({title:xLabelText, fill:"#999"});				
			this.preview_xaxis_label = xLabel;
			this.preview_yaxis_label = left_lbl;
			
			var x = [], sizes = [];			
			for (var i = 0; i < data.length; i++) 
			{
				x[i] = i;
				sizes[i] = 5;
			}
			
			var chart_width = width-65;
      var chart_height = height-20;
      
      var axis_opts = this.f1_axis_opts(r, chart_width, chart_height, split_items.sorted, data)
			
			var largest_length = axis_opts.axisylabels[0].length;
      if (axis_opts.axisylabels.last().length > largest_length) { largest_length = axis_opts.axisylabels.last().length; }
      var left_padding = 5*largest_length + 20; // 35

			try {
        var dotchart = r.g.dotchart(left_padding, 0, chart_width, chart_height, split_items.sorted, data, data, 
        {
          symbol: "o", 
          max: 10, 
          heat: true, 
          axis: "0 0 1 1",
          axisxstep: axis_opts.axisxstep,
          axisystep: axis_opts.axisystep,
          axisxlabels: axis_opts.axisxlabels,
          axisylabels: axis_opts.axisylabels,
          ids : split_items.ids
        }).hover(showLabel, hideLabel);
        return (dotchart) ? true : false;
      } catch(e) {
        return false;
      }
			
			dotchart.highlightedFeatures = [];
		  
      		if(opts != null && opts["onclick"] != null)
      		{
        		dotchart.click(function(e) 
        		{ 
        			var feature = this;
	          		feature.attr( { stroke : "#fefe00", 'stroke-width' : 4 } );
	          		
	          		dotchart.highlightedFeatures.push( feature );
	          		
					var atts = [
						{ name : items.attributes.sort.original_name, value : split_items.sorted[this.index] },
						{ name : items.attributes.data.original_name, value : split_items.features[this.index] }
					];
					
					opts["onclick"](e, atts);
          		});
	      	}
	      	
	      	dotchart.clearHighlights = function()
	      	{
	      		for ( var i = 0; i < dotchart.highlightedFeatures.length; i++ )
      			{
      				dotchart.highlightedFeatures[i].attr( {'stroke': 'none'} );
      			}
      			
      			dotchart.highlightedFeatures = [];
      		}
      		
      		dotchart.highlightFeaturesByID = function( features, idField )
      		{
      			var guid, feature;
      			jq.each( features, function( index, featureData )
      			{
      				guid = featureData[idField];
      				feature = dotchart.featureDictionary[guid];
      				
      				feature.attr( { stroke : "#fefe00", 'stroke-width' : 4 } );
	          		dotchart.highlightedFeatures.push( feature );
      			});
      		}
			
			//r.path("M 40 "+(height-50)+" L "+(width)+" "+(height-50)).attr({stroke: '#000'});
			return dotchart;
		},
		// end scatterplot

		area: function(height, width, items, element_id, is_area) {
            var self = this;
            var split_items = F1.Visualizer.utils.split(items);
            var rangesy = F1.Visualizer.utils.rangify(split_items.features);
            var rangesx =  F1.Visualizer.utils.rangify(split_items.sorted);
            var data = split_items.features;
            if (rangesx.span <= 0 || rangesy.span <= 0) { jq('#'+element_id).html('Could not render chart with this data. Try selecting a different attribute to graph or increase the number of rows.'); return false; }
            jq('#'+element_id).html("");
            //jq('#'+element_id).attr('title', 'x axis: ' + items.attributes.sort.name + '\n y axis: ' + items.attributes.data.name );
            var r = Raphael(element_id);
            
            r.g.txtattr.font = "12px 'Helvetica', Helvetica, sans-serif";
            var left_lbl = r.g.text(10, parseInt(height/2), Textify.elide_during(items.attributes.data.name, 25, '...'));
            this.preview_yaxis_label = left_lbl
            left_lbl.rotate(270);
            
            left_lbl.attr({title:items.attributes.data.name, fill:"#999"});
            var x = [];
            for (var i = 0; i < data.length; i++) 
            {
                x[i] = i;
            }

            var chart_width = width-65;
            var chart_height = height-50;
            var axis_opts = this.f1_axis_opts(r, chart_width, chart_height, split_items.sorted, data);
            var largest_length = axis_opts.axisylabels[0].length;
            if (axis_opts.axisylabels.last().length > largest_length) { largest_length = axis_opts.axisylabels.last().length; }
            var left_padding = 5*largest_length + 20; // 35

            var lineChart = r.g.linechart(left_padding, 0, chart_width, chart_height, split_items.sorted, data, 
            {
                shade: is_area,
                colors: ["#993A3C"], 
                nostroke: false, 
                axis: "0 0 1 1",
                axisxstep: axis_opts.axisxstep,
                axisystep: axis_opts.axisystep,
                axisxlabels: axis_opts.axisxlabels,
                axisylabels: axis_opts.axisylabels,
                symbol: "o", 
                smooth: true
             }).hoverColumn(function () {
                  this.tags = r.set();
                  for (var i = 0, ii = this.y.length; i < ii; i++) {
                    //var Label = Textify.elide_during(items.attributes.description.name, 20, '...' );
                    //var labelVal = items.features[this.values[i]][Label]
                    //var text = split_items.descriptions[this.bar.index] + "\n"+items.attributes.data.name+": " + feature_num + "\n"+ items.attributes.sort.name +": " + sorted_num;
                    var ytitle = Textify.elide_during(items.attributes.data.name, 20, '...' );
                    //var text = Label+": " + labelVal + "\n" + ytitle+": " + this.values[i] + "\n" + Textify.elide_during(items.attributes.sort.name, 20, '...' )+": " + this.axis;
                    var text = ytitle+": " + this.values[i] + "\n" + Textify.elide_during(items.attributes.sort.name, 20, '...' )+": " + this.axis;
                    this.tags.push(r.g.label(220, 20, text).insertBefore(this));//.attr([{fill: "#EEE"}, {fill: this.symbols[i].attr("fill")}]));
                    var bbox = this.tags.getBBox();
                    if (bbox.x < 0) x = bbox.width / 2;   // TODO: find a way to calculate that takes into account the varying gutter width for data counts > 50
                    if (bbox.x + bbox.width > width) x = width - (bbox.width/2);
                    if (bbox.y < 0) y = bbox.height / 2;
                    if (bbox.y + bbox.height > height) y = height - (bbox.height/2);
                    this.tags.remove();
                    this.tags = r.g.label(220, 20, text).insertBefore(this);
                    this.tags.show();
                  }
                }, function () {
                    this.tags && this.tags.remove();
                });
            lineChart.symbols.attr({r: 2});

            var xLabelText = items.attributes.sort.name;
            var xLabel = r.g.text(parseInt(width/2), height-35, Textify.elide_during(xLabelText, 45, '...'  ));
            xLabel.attr({title:xLabelText, fill:"#999"});
            this.preview_xaxis_label = xLabel;
            return true;
		},
		
		
    line: function(height, width, items, element_id, opts, is_area)
        {
            var self = this;
            var split_items = F1.Visualizer.utils.split(items);
            var rangesy = F1.Visualizer.utils.rangify(split_items.features);
            var rangesx =  F1.Visualizer.utils.rangify(split_items.sorted);
            var data = split_items.features;
            if (rangesx.span <= 0 || rangesy.span <= 0) { jq('#'+element_id).html('Could not render chart with this data. Try selecting a different attribute to graph or increase the number of rows.'); return false; }
            jq('#'+element_id).html("");
            //jq('#'+element_id).attr('title', 'x axis: ' + items.attributes.sort.name + '\n y axis: ' + items.attributes.data.name );
            var r = Raphael(element_id);

            r.g.txtattr.font = "12px 'Helvetica', Helvetica, sans-serif";
            var left_lbl = r.g.text(10, parseInt(height/2), Textify.elide_during(items.attributes.data.name, 25, '...'));
            this.preview_yaxis_label = left_lbl
            left_lbl.rotate(270);
            left_lbl.attr({title:items.attributes.data.name, fill:"#999"});
            var x = [];
            for (var i = 0; i < data.length; i++) 
            {
              x[i] = i;
            }

            var chart_width = width-65;
            var chart_height = height-50;
            var axis_opts = this.f1_axis_opts(r, chart_width, chart_height, split_items.sorted, data);
            var largest_length = axis_opts.axisylabels[0].length;
            if (axis_opts.axisylabels.last().length > largest_length) { largest_length = axis_opts.axisylabels.last().length; }
            var left_padding = 5*largest_length + 20; // 35
  
            var lineChart = r.g.linechart(left_padding, 0, chart_width, chart_height, split_items.sorted, data, 
            {
                shade: false, 
                colors: ["#993A3C"], 
                nostroke: false, 
                axis: "0 0 1 1",
                axisxstep: axis_opts.axisxstep,
                axisystep: axis_opts.axisystep,
                axisxlabels: axis_opts.axisxlabels,
                axisylabels: axis_opts.axisylabels,
                nostroke: false,
                symbol: "o",
                smooth: true
          	 }).hoverColumn(function () {
                  this.tags = r.set();
                  for (var i = 0, ii = this.y.length; i < ii; i++) {
                    //var Label = Textify.elide_during(items.attributes.description.name, 20, '...' );
                    //var labelVal = items.features[this.values[i]][Label];
                    var ytitle = Textify.elide_during(items.attributes.data.name, 20, '...' ); 
                    //var text = Label+": " + labelVal + "\n" + ytitle+": " + this.values[i] + "\n" + Textify.elide_during(items.attributes.sort.name, 20, '...' )+": " + this.axis;
                    var text = ytitle+": " + this.values[i] + "\n" + Textify.elide_during(items.attributes.sort.name, 20, '...' )+": " + this.axis;
                    this.tags.push(r.g.label(220, 20, text).insertBefore(this));//.attr([{fill: "#EEE"}, {fill: this.symbols[i].attr("fill")}]));
                    var bbox = this.tags.getBBox();
                    if (bbox.x < 0) x = bbox.width / 2;   // TODO: find a way to calculate that takes into account the varying gutter width for data counts > 50
                    if (bbox.x + bbox.width > width) x = width - (bbox.width/2);
                    if (bbox.y < 0) y = bbox.height / 2;
                    if (bbox.y + bbox.height > height) y = height - (bbox.height/2);
                    this.tags.remove();
                    this.tags = r.g.label(220, 20, text).insertBefore(this);
                    this.tags.show();
                  }
                }, function () {
                    this.tags && this.tags.remove();
                });
            lineChart.symbols.attr({r: 2});
                
          	var xLabelText = items.attributes.sort.name;
            var xLabel = r.g.text(parseInt(width/2), height-35, Textify.elide_during(xLabelText, 45, '...'	));
            xLabel.attr({title:xLabelText, fill:"#999"});
            this.preview_xaxis_label = xLabel;
            return true;
   	},
   	// end line chart
		
		
    pie: function(height, width, items, element_id, opts) {
     	var self = this;
      var split_items = F1.Visualizer.utils.split(items);
      //var data = (typeof(split_items.features[0])=='string') ? this.calculate_values(split_items.features) : split_items.features;
      var percents = this.calculate_values(split_items.features, split_items.descriptions);
      var data = percents[0], descriptions = percents[1];
      var ranges = F1.Visualizer.utils.rangify(split_items.features);
      if (ranges.span <= 0) { jq('#'+element_id).html('<div class="notice" style="margin:10px;">Could not render chart with this data. Try selecting a different attribute to graph or increase the number of rows.</div>'); return false; }			
      if (data.length == 1) { jq('#'+element_id).html('<div class="notice" style="margin:10px;">Could not render chart with this attribute ( only one unique value ). Try another attribute.</div>'); return false; }
      //if (data.slice().sort()[0] < 0) { jq('#'+element_id).html('Could not render chart with this data. Try selecting only positive data.'); return false; }
        

      jq('#'+element_id).html("");
      var r = Raphael(element_id);
      //r.safari(); // Raphael has problems with webkit & mouseover/rendering
      r.g.txtattr.font = "12px 'Fontin Sans', Fontin-Sans, sans-serif";       
      
      var highlight = function() 
      {
          this.sector.stop();
          this.sector.scale(1.1, 1.1, this.cx, this.cy);
          if (this.label) 
          {
              this.label[0].stop();
              this.label[0].scale(1.5);
              this.label[1].attr({"font-weight": 800});
          }
      };
      var unhighlight = function() 
      {
          this.sector.animate({scale: [1, 1, this.cx, this.cy]}, 500, "bounce");
          if (this.label) 
          {
              this.label[0].animate({scale: 1}, 500, "bounce");
              this.label[1].attr({"font-weight": 400});
          }
      };
      
      var click = function(e) 
      {
      	log({click: e, dis: this});
      };
          
        var label_length = (opts !== null && opts["label_length"] !== null) ? opts["label_length"] : 10

      descriptions = jq.map(descriptions, function(description) { return Textify.elide_during(description,label_length,'...'); });
      legends = jq.map(descriptions, function(description) { return description ; });
      var longest_description = 0;
      jq.each(legends, function(i, legend) { if (legend.length > longest_description) longest_description = legend.length });
      var legend_width = (longest_description * 8) + 60;
      // legend_width = (legend_width > 180 ? 180 : legend_width);
      
      var radius = parseInt(height*.4);
      if (legend_width + radius*2 + 10 > width) 
      {
          radius = parseInt((width - legend_width) / 2) - 20;
      }
      var x = radius + 10;
      var y = parseInt(height/2) - (parseInt(height*.05));
      
      var pie_options = {legend: legends, legendpos: "east"};
      if(opts != null && opts["href"] != null) pie_options["href"] = opts["href"];
      if(opts != null && opts["colors"] != null) pie_options["colors"] = opts["colors"];
     
      try { 
        var pie = r.g.piechart(x, y, radius, data, pie_options).hover(highlight, unhighlight).click(click);
        if(opts != null && opts["onclick"] != null) pie.click(opts["onclick"]);
        if(opts != null && opts["chart"] != null) {
      	  jq.each(opts["chart"], function(key, value) {
              pie_options[key] = value;
          });
        }
        return (pie) ? true : false;
      } catch(e){
        return false;
      }
    },
		// end pie chart

    calculate_values: function(features,desc){
      var vals = [], text = [], sums = {};
      var n = features.length;
      if(isNaN(features[0])) {
        jq.each(features,function(i,f){
          if (sums[f]){
            sums[f].value++;
          } else {
            sums[f] = {};
            sums[f].value = 1;
            sums[f].name = desc[i];
          }
        });
        // should get rid of this and just send back one obj, no 2nd loop
      } else {
        jq.each(features,function(i,f){
          if (sums[f]){
            sums[f].value += f;
          } else {
            sums[f] = {};
            sums[f].value = f;
            sums[f].name = desc[i];
          }
        });
      }
      jq.each(sums,function(k,v){
        vals.push((v.value/n)*100);
        text.push(v.name + '');
      })
      
      return [vals, text];
    },
    calculate_values2: function(features, desc){
      var vals = [], text = [], sums = {};
      var n = features.length;
      var i = 0;
      var map = function(){
        var f = features.shift();
        if (sums[f]){
          sums[f].value++;
        } else {
          sums[f] = {};
          sums[f].value = 1;
          sums[f].name = desc[i];
        }
        i++;
        if (features.length > 0){
          setTimeout(map(),0);
        }
      }
      map();
      jq.each(sums,function(k,v){
        vals.push((v.value/n)*100);
        text.push(v.name);
      })
      return [vals, text];
    },

		
		f1_axis_opts: function(r, chart_width, chart_height, valuesx, valuesy) 
		{
		  	var xdim = r.g.snapEnds(Math.min.apply(Math, valuesx), Math.max.apply(Math, valuesx), valuesx.length - 1),
          	minx = xdim.from,
          	maxx = xdim.to,
          	gutter = 10,
          	ydim = r.g.snapEnds(Math.min.apply(Math, valuesy), Math.max.apply(Math, valuesy), valuesy.length - 1),
          	miny = ydim.from,
          	maxy = ydim.to,
          	xstep = Math.floor((chart_width - 2 * gutter) / 20),
          	ystep =  Math.floor((chart_height - 2 * gutter) / 20),
          	xloopstep = Math.max(Math.floor((maxx-minx) / xstep), 1),
          	yloopstep = Math.max(Math.floor((maxy-miny) / ystep), 1),
          	axisxlabels = [],
          	axisylabels = []
		  
      		for(var i = minx; i < maxx; i += xloopstep) 
      		{
      		  axisxlabels.push( new Numify(i).humanize().commify().flatten().to_s )
      		}
		  	  for(var i = miny; i < maxy; i += yloopstep) 
		  	  {
        		axisylabels.push( new Numify(i).humanize().commify().flatten().to_s )
      		}
		  	var ret = 
		  	{
		    	axisxstep: Math.floor((chart_width - 2 * 10) / 25),
			  	axisystep: Math.floor((chart_height - 2 * 10) / 15),
			  	axisxlabels: axisxlabels,
			  	axisylabels: axisylabels
			}
			return ret;
		}
	}
	
	
	
	F1.Visualizer.utils = {
	  
		split: function(data) {
			var f = [];
      jq.each(data.features, function(i, feature) {
        //if (feature) { 
          f[i] = (feature[data.attributes.data.original_name] == null) ? null : feature[data.attributes.data.original_name]; 
        //} 
      });
			var descriptions = jq.map(data.features, function(feature) { 
        if (feature) { 
          return (feature[data.attributes.description.original_name] == null ? '' : feature[data.attributes.description.original_name]); 
        } 
      });
			var sorted = jq.map(data.features, function(feature) { 
        if (feature) { 
          return (feature[data.attributes.sort.original_name] == null ? 0 : feature[data.attributes.sort.original_name]); 
        } 
      });
			var ids = jq.map(data.features, function(feature) { if (feature) { return (feature['guid'] == null ? -1 : feature['guid']); } });
			return { 'features':f, 'descriptions':descriptions, 'sorted':sorted, 'ids': ids };
		},
		
		rangify: function(data_items) {
			var largest_value = data_items[0]
			var smallest_value = data_items[0]
			for (i=0;i<data_items.length;i++)
			{
				if (data_items[i] > largest_value)
					largest_value = data_items[i];
				if (data_items[i] < smallest_value)
					smallest_value = data_items[i]
			}

			var span = largest_value - smallest_value;
			if (span < 0) {
				span = 0;
			}
			return { 'largest':largest_value,'smallest':smallest_value,'span':span };
		},
		
		sort_features: function(features, sort_attribute, order)
		{
			var self = this;
			var sortFunction = function(a, b) {
				if (order == "ascending") {
					if (a[sort_attribute] > b[sort_attribute]) return 1;
					if (a[sort_attribute] < b[sort_attribute]) return -1;
					return 0;
				} else {
					if (a[sort_attribute] < b[sort_attribute]) return 1;
					if (a[sort_attribute] > b[sort_attribute]) return -1;
					return 0;
					
				}
			}
			return features.sort(sortFunction);
		},
		
		get_data_from_flash: function(finder_id, callback, map) {
      F1.Maker.current_map.getFeatures(finder_id, callback);
      /*
			try {
				var features = null;
				var attributes = null;
				if (map == null)
				{
					map = F1.Maker.current_map;
				}
				var allAttributes = unescape(map.swf.getAttributes(finder_id));
				var allFeatures = unescape(map.swf.getAllFeatures(finder_id));
				try {
		   		allAttributes = allAttributes.replace(/\n|\r/ig, '');
	       	allFeatures = allFeatures.replace(/\n|\r/ig, '');
	       	attributes = (JSON != null ? JSON.parse(allAttributes) : jq.parseJSON(allAttributes));
	       	features = (JSON != null ? JSON.parse(allFeatures) : jq.parseJSON(allFeatures));
				} catch(ex) {
				  // Totally unsafe but we must make concessions to IE
				  attributes = eval("attributes="+allAttributes);
				  features = eval("features="+allFeatures);
				}
			} catch (ex) {
				//console.log("Error! " + ex);    
				var attributes = null, features = null;
			}
			if (attributes == "null" || !attributes) {
				var url = F1.host + "/overlays/" + finder_id + ".json?include_geometry=0&include_attributes=1&include_features=1&callback=?";
				jq.getJSON(url, {}, function(data) {
					attributes = data.data_attributes;
          features = jq.map(data.features, function(f, i) { return { attributes: f } });
					var cleaned_attributes = {};
					jq.each(attributes, function(i, attr) { cleaned_attributes[attr.original_name] = attr; });
					callback({ attributes:cleaned_attributes, features:features });
				});
			} else {
				var cleaned_attributes = {};
				jq.each(attributes, function(i, attr) { cleaned_attributes[attr.original_name] = attr; });
				jq.each (features, function(i, feechur) { 
					jq.each(feechur.attributes, function(key, atr) {
						if (atr && typeof(atr) == "string") {
							feechur.attributes[key] = unescape(atr);
						} 
					});
				});
				callback({ attributes:cleaned_attributes, features:features });
			}
			return { attributes:cleaned_attributes, features:features }
    */
		}
	}
	
	F1.Visualizer.chart_templates = {
		'bar':{'data_types':['integer', 'decimal'],'attribute_select':['data', 'description', 'sort'],'max_rows':50},
		'grid':{'data_types':['integer', 'decimal', 'string', 'datetime'],'attribute_select':null,'max_rows':100},
		'scatterplot':{'data_types':['integer', 'decimal'],'attribute_select':['data', 'description', 'sort'],'max_rows':100},
		'area':{'data_types':['integer', 'decimal'],'attribute_select':['data', 'sort'],'max_rows':100},
		'line':{'data_types':['integer', 'decimal'],'attribute_select':['data', 'sort'],'max_rows':100},
		'pie':{'data_types':['integer', 'decimal'],'attribute_select':['data', 'description', 'sort'],'max_rows':100}
	}
	
	F1.Visualizer.views = {
		chart_div: tmpl('<div id="<%= element %>"  class="visualization" style="display:none; position:absolute;"> \
		<div class="vis_header ui-widget-header"><p>Loading...</p><span></span></div> \
		<div id="<%= element %>_object" class="visualization_object"> \
		</div> \
		<div id="<%= element %>_back" class="visualization_back" style="display:none;">\
		</div>'),
		grid_div: tmpl('<div class="grid_chart" style="height: <%= Math.round(height) %>px; width: <%= Math.round(width) %>px;"><table id="<%= id %>"><thead><%= header_row %></thead><tbody><%= data_rows %></tbody></table><a href="#" class="load_link">Load more rows.</a></div>'),
		table_row: tmpl('<tr><%= columns %></tr>'),
		grid_row: tmpl('<tr id="feature_<%= id %>" class="row_<%= odd %>"><%= columns %></tr>'),
		data_column: tmpl('<td><%= data %></td>'),
		header_column: tmpl('<th name="<%= original_name %>"><div style="position: relative;"><span class="column_title"><%= name %></span><span class="sort_icon">sort</span></div></th>'),
		back_info: tmpl('<div style="height: <%= height %>px; width: <%= width %>px;">\
			<h1><%= title %></a></h1>\
			<p><%= description %></p>')		
	}
	
  // -------------------- Rapheal Extensions
  // A subtler label with a better corner radius
  Raphael.fn.g.label = function (x, y, text) {
      var res = this.set();
      res.push(this.rect(x, y, 10, 10).attr({stroke: "#eee", fill: "#fff", opacity:"0.9"}));
      res.push(this.text(x, y, text).attr(this.g.txtattr).attr({fill: "#999"}));
      res.update = function () {
          var bb = this[1].getBBox(),
              r = 4, // Math.min(bb.width + 10, bb.height + 10) / 2;
              p = 8
          bb.x = Math.round(bb.x); // less svg blur
          bb.y = Math.round(bb.y); 
          bb.height = Math.round(bb.height);
          bb.height = Math.round(bb.height);
          this[0].attr({x: (bb.x - p), y: bb.y - p, width: bb.width + (p*2), height: bb.height + (p*2), r: r});
      };
      res.update();
      return res;
  };
  
	
})();  // preserving the global namespace


(function() {
    // Override default jQuery css() method to support CSS 'transform' property
    // uniformly across Webkit/Safari and Firefox 3.1+
    // 2009 Zachary Johnson www.zachstronaut.com
    function getTransformProperty(element) {
        // Try transform first for forward compatibility
        var properties = ['transform', 'WebkitTransform', 'MozTransform'];
        var p;
        while (p = properties.shift()) {
            if (typeof element.style[p] != 'undefined') {
                return p;
            }
        }
        // Default to transform also
        return 'transform';
    }
    
    var proxied = jQuery.fn.css;
    jQuery.fn.css = function(key, value) {
        if (key == 'transform') {
            if (typeof jQuery.props[key] == 'undefined') {
                jQuery.props[key] = getTransformProperty(this.get(0));
            }
            // We force the property mapping here because jQuery.attr() does
            // property mapping with jQuery.props when setting a CSS property,
            // but curCSS() does *not* do property mapping when *getting* a
            // CSS property.  (It probably should since it manually does it
            // for 'float' now anyway.)
            key = jQuery.props[key];
        }
        return proxied.apply(this, arguments);
    };
})();


if(typeof(F1)=='undefined') {F1 = {}}
(function(){
  F1.VisualCreator = function(options) {  //constructor
    this.options = options;
    F1.VisualCreator.instances[options.id] = this;
  }
  
  F1.VisualCreator.instances = {}
  F1.VisualCreator.prototype = {
		// pass in an array of hashes, eg [{ 'id' => finder_id, 'title' => title }]
    init: function(overlays, map_id){ 
			i = 1;
			var self = this;
			self.map_id = map_id;
			self.create_form(overlays);
			self.init_dialog();
			self.stylize_and_disable_buttons();
			
			
			// Event wireups
			jq('#overlay_selection').change(function(event) { self.choose_overlay() });
			jq('#chart_style_chart_type').change(function(event) { self.choose_chart() });
			jq('[id^=chart_style_attributes]').change(function(event) { self.preview(); });
			jq('[id^=chart_style_sort]').change(function(event) { self.preview(); });
			
			
			jq('#'+self.options.id + ' .pane').show();
			self.enable_pane('layer');
			
			jq('#'+self.options.id+'_form').submit(function(event) {
				self.create_visual();
				return false;
			});
						
			jq('#chart_title').focus(function() {
      	jq(this).removeClass('blurred_input')
      	if (this.value == "My Chart Title") {
      		this.value = ""
      	}
      });
			jq('#chart_title').blur(function(event) { 
				if (this.value == "My Chart Title" || this.value == "") {
					jq(this).addClass('blurred_input')
					this.value = "My Chart Title";
				}
			});
			
			jq('#chart_style_description').focus(function() {
      	jq(this).removeClass('blurred_input')
      	if (this.value == "My chart description.") {
      		this.value = ""
      	}
      });
			jq('#chart_style_description').blur(function(event) { 
				if (this.value == "My chart description." || this.value == "") {
					jq(this).addClass('blurred_input')
					this.value = "My chart description.";
				}
			});		
		},
		
		stylize_and_disable_buttons: function() {
			var self = this;
      jq('.visual_creator_dialog .ui-dialog-buttonpane button:contains(Next)').css('cssText', 'float: right !important');
      jq('.visual_creator_dialog .ui-dialog-buttonpane button:contains(Finish)').css('cssText', 'float: right !important');
      jq('.visual_creator_dialog .ui-dialog-buttonpane button:contains(Back)').css('cssText', 'float: left !important');
			self.disable_button('Back');
			self.disable_button('Finish');
			self.disable_button('Next');
		},
		
		create_form: function(overlays) {
			var self = this;
			var form = self.view.creator_form({
				div_id: self.options.id,
				map_id: self.map_id,
				overlay_options: jq.map(overlays, function(o) { return self.view.overlay_item({ id: o.id, name: Textify.elide_during_long_stuff(o.title, 15)}) }).join('')
			});
			jq('body').append(form);
			jq('#'+self.options.id+' .layer_selection li').click(function() {
				self.choose_overlay(jq(this).children('a').get(0).attributes.rel.value);
				return false;
			});
			self.show_layer_pane();
		},
		
		init_dialog: function() {
			var self = this;
			jq('#'+self.options.id).dialog({ 
				autoOpen: true, 
				modal: true,
				position: [0, 104], 
				"buttons": { "Back":function(event) { self.previous_pane(event); }, "Next":function(event){ self.next_pane(event); }, "Finish": function() {self.create_visual()} }, 
				close: function() { self.reset(); },
				width: 500, 
        height: 350,
				resizable: false,
				draggable: false,
				dialogClass: 'visual_creator_dialog'
       });
		},
		
		disable_button: function(name) {
			jq('.visual_creator_dialog .ui-dialog-buttonpane button:contains("'+name+'")').attr('disabled', 'true');
			jq('.visual_creator_dialog .ui-dialog-buttonpane button:contains("'+name+'")').css('opacity', '.25');
		},		
		enable_button: function(name) {
			jq('.visual_creator_dialog .ui-dialog-buttonpane button:contains("'+name+'")').attr('disabled', null);
			jq('.visual_creator_dialog .ui-dialog-buttonpane button:contains("'+name+'")').css('opacity', '1');
		},
		
		next_pane: function(event) {
			var self = this;
			if (!self.current_pane) { return; }
			var index = self.panels.indexOf(self.current_pane);
			if (index >= self.panels.length - 1) { return; }
			for(var i=index+1;i<self.panels.length;i++) {
				if (self.is_enabled(self.panels[i])) {
					self.show_pane(self.panels[i]);
					return;
				}
			}
		},
		previous_pane: function(event) {
			var self = this;
			if (!self.current_pane) { return; }
			var index = self.panels.indexOf(self.current_pane);
			if (index == 0) { return; }
			for(var i=index-1;i>=0;i--) {
				if (self.is_enabled(self.panels[i])) {
					self.show_pane(self.panels[i]);
					return;
				}
			}
		},
		
		toggle_buttons: function(pane) {
			var self = this;
			var index = self.panels.indexOf(pane);
			self.disable_button('Back');
			self.disable_button('Next');
			var next_enabled = false
			jq.each(self.panels, function(i, p) {
				if (self.is_enabled(p)) {
					if (i < index) {
						self.enable_button('Back');
					} else if (i > index) {
						self.enable_button('Next');
						next_enabled = true
					}
				}
			});
			if (next_enabled) {
        jq('.visual_creator_dialog .ui-dialog-buttonpane button:contains(Next)').show()
			} else {
        jq('.visual_creator_dialog .ui-dialog-buttonpane button:contains(Next)').hide()
			}
		},
		
		show_layer_pane: function() { this.show_pane('layer'); },
		show_chart_pane: function() { this.show_pane('chart'); },
		show_data_pane: function() { this.show_pane('data'); },
		show_describe_pane: function() { this.show_pane('describe'); },
		
		show_pane: function(panel) {
			var self = this;
			self.hide_loading();
			if (self.current_pane == null) {
				jq('#'+self.options.id + '_'+panel+'_pane').animate({left:'0'});
			} else if (panel == self.current_pane) {
				jq('#'+self.options.id + '_'+panel+'_pane').css('left', '0');
				return;
			} else if (self.panels.indexOf(panel) > self.panels.indexOf(self.current_pane)) {
		 		jq('#'+self.options.id+' .pane:not(#'+self.options.id+'_'+self.current_pane+'_pane,#'+self.options.id+'_'+panel+'_pane)').css('left', '-498px');
				jq('#'+self.options.id + '_'+panel+'_pane').css('left', '498px');
				jq('#'+self.options.id + ' .pane').animate({left:'-=498'});
			} else {
				// moving left to right
				jq('#'+self.options.id+' .pane:not(#'+self.options.id+'_'+self.current_pane+'_pane,#'+self.options.id+'_'+panel+'_pane)').css('left', '498px');
				jq('#'+self.options.id + '_'+panel+'_pane').css('left', '-498px');
				jq('#'+self.options.id + ' .pane').animate({left:'+=498'});
			}
			jq('#'+self.options.id + ' .breadcrumb_tabs li').removeClass("active");
			jq('#'+self.options.id + ' .breadcrumb_tabs li.'+panel).addClass("active");
			//self.toggle_buttons(panel);
			self.current_pane = panel;
			self.toggle_buttons(panel);
		},
		
		reset: function() {
			var self = this;
			jq('#'+self.options.id+'_visualization_preview').remove();
			jq('#more_data_clue').remove();
			jq('#'+self.options.id).remove();
		},
		
		create_visual: function() {
			var self = this;
			
			self.hide_preview();
			
			var create_url = F1.maker_host + '/maps/' + self.map_id + '/charts'
			jq('#'+self.options.id + ' .cover_div').fadeIn();
			jq('#'+self.options.id).dialog('options', 'button', {});
			
			var data = jq('#'+self.options.id + '_form').serialize();
			
			jq.post(create_url, data, function(data) { 
				jq('#'+self.options.id).dialog('close');
				new F1.Visualizer({id:'visualizer_'+data.id})
				   		F1.Visualizer.instances["visualizer_"+data.id].init(self.map_id, data.id, true)
			 }, 'json');
		},
		
		choose_overlay: function(finder_id) {
			var i = 100;
			var self = this;
			jq('#chart_style_finder_id').get(0).value = finder_id;
			self.show_loading();
			//var data = F1.Visualizer.utils.get_data_from_flash(finder_id);
			F1.Visualizer.utils.get_data_from_flash(finder_id, function(data) {
				self.show_chart_pane();
				self.features = data.features;
				self.attributes = data.attributes;
				if (data.attributes != null && data.attributes != "null" && data.features != null && !Object.isEmpty(data.attributes) && data.features.length > 0) {
					self.populate_chart_select();
				} else {
					self.throw_error("Could not get features and attributes from this overlay.");
				}
			});
		},
		
		show_loading: function() { jq('#'+this.options.id + ' .cover_div').show(); },
		hide_loading: function() { jq('#'+this.options.id + ' .cover_div').hide(); },
		
		populate_attribute_select: function() {
			var self = this;
			var first_text_attribute = null;
			self.enable_pane('data');
			self.hide_loading();
			
			var data_attribute_options = [];
			jq.each(self.attributes, function(i, attr) {
				if (attr.data_type == 'integer' || attr.data_type == 'decimal') {
					data_attribute_options.push(self.view.select_option({ id: attr.original_name, name: Textify.elide_during(attr.name,40)}));
				}
			})
			data_attribute_options = data_attribute_options.join('');
			var all_attribute_options = [];
			jq.each(self.attributes, function(i, attr) {
				if (!first_text_attribute && (attr.data_type == 'string'))
					first_text_attribute = attr.original_name					
				all_attribute_options.push(self.view.select_option({ id: attr.original_name, name: Textify.elide_during(attr.name,40)}));
			});
			all_attribute_options = all_attribute_options.join('');
			
			jq('#chart_style_attributes_data').html(data_attribute_options);
			jq('#chart_style_attributes_description').html(all_attribute_options);
			jq('#chart_style_sort_attribute').html(data_attribute_options);
			
			jq('#'+self.options.id+' [class$=_attribute_group]').hide();
			jq.each(self.chosen_chart.attribute_select, function(i, attribute) {
				jq('#'+self.options.id+' .'+attribute+'_attribute_group').show();
			});
						
			// Try to choose good default attributes (string for description)
			if (first_text_attribute) {
				jq('#chart_style_attributes_description option[value='+first_text_attribute+']').get(0).selected = true;
			}
			self.preview();
		},
		
		keys: function(hash) {
			var keys = [];
			jq.each(hash, function(k,v) { keys.push(k); });
			return keys;
		},
		
		choose_chart: function(selected_chart) {
			var self = this;
			var chosen_chart = null;
			self.show_loading();
		
			jq.each(F1.Visualizer.chart_templates, function(i, chart) {
				chart['type'] = i;
				if (i == selected_chart) {
					chosen_chart = chart;
				}
			});

			self.chosen_chart = chosen_chart;

			self.enable_pane('describe');
			
			
			jq('#chart_style_chart_type').get(0).value = chosen_chart.type;
			if (chosen_chart.attribute_select) {	
				self.populate_attribute_select();
				self.enable_pane('data');
				self.show_data_pane();
			} else {
				self.disable_pane('data');
				self.hide_preview();
				self.show_describe_pane();
			}
			self.enable_button('Finish');

			
		},
		
		enable_pane: function(pane) {
			var self = this;
			jq('#'+self.options.id + ' .breadcrumb_tabs li.'+pane).addClass('enabled');
			jq('#'+self.options.id + ' .breadcrumb_tabs li.'+pane).click(function(e) { self.show_pane(pane); });
		},
		disable_pane: function(pane) {
			var self = this;
			jq('#'+self.options.id + ' .breadcrumb_tabs li.'+pane).removeClass('enabled');
			jq('#'+self.options.id + ' .breadcrumb_tabs li.'+pane).unbind('click');
		},
		is_enabled: function(pane) {
			var self = this;
			return jq('#'+self.options.id + ' .breadcrumb_tabs li.'+pane).hasClass('enabled');
		},

		populate_chart_select: function() {
			var self = this;
			self.enable_pane('chart');
			jq('#chart_selection').html("Loading...");
			var available_charts = [];
			jq.each(F1.Visualizer.chart_templates, function(i, chart) {
				chart['type'] = i;
				jq.each(self.attributes, function(j, attr) {
					if (chart.data_types.include(attr.data_type)) {
						available_charts.push(chart)
						return false;
					}
				});
			});
			if (available_charts.length < 1) {
				self.throw_error("There is a problem and the attributes on this overlay cannot be charted.");
			}
			var show_attribute_select = false;
			jq('#chart_selection').html(
				jq.map(available_charts, function(chart) {
					return self.view.chart_item({ id: chart.type, name: chart.type});
				}).join('')
			);
			jq('#'+self.options.id+' #chart_selection li').click(function() {
				self.choose_chart(jq(this).attr('rel'));
			});
		},
		
		show_preview: function(skip_animation) { jq('.visualization_preview:hidden').show('slide', { direction:'left'}, 1000 ).css('z-index', '10000'); },
		hide_preview: function(skip_animation) { 
			if (skip_animation) jq('.visualization_preview:visible').hide();
			else jq('.visualization_preview:visible').hide('slide', { direction:'left' }, 1000);
			// TODO: Hopefully this doesn't affect anything else, its a hack to fix a jquery UI problem with residual DIVs being left on the screen
			jq('.ui-effects-wrapper').hide();
			jq('#more_data_clue').remove();
		},
		
		preview: function() {
			var self = this;
			var items = [];
			var features = jq.map(self.features, function(feature, index) { return feature.attributes; });
			var sorted_features = F1.Visualizer.utils.sort_features(features, self.selected_sort_attribute(), self.selected_sort_order());
			// THis dandy doohickey makes sure it doesn't split same x-values
			var isLengthened = false;
			var limit = self.selected_limit();
			var sort_attribute = self.selected_sort_attribute();
			while (self.chosen_chart.attribute_select
				&& sorted_features[limit-1] && sorted_features[limit] 
				&& (sorted_features[limit-1][sort_attribute] == sorted_features[limit][sort_attribute])) {
				isLengthened = true;
				limit++;
			}
			jq('#more_data_clue').remove();
			if (isLengthened) {
				jq('#'+self.options.id).append(self.view.more_data_clue({limit:limit}));
				jq('#more_data_clue').data('options', {"offset_y": 30, "offset_x": 15, "hidden": false, "dismiss_on_click": true, "position": "right", "target": "#"+self.options.id+'_visualization_preview', "direction": ["down", "center"]})
			}
			var items = sorted_features.slice(0, limit);
			var hattributes = { 'data':self.selected_data_attribute(), 'description':self.selected_description_attribute(), 'sort': self.selected_sort_attribute() }
			var attributes = {}
			jq.each(hattributes, function(name, attribute) { 
				attributes[name] = { original_name: attribute, name: self.attributes[attribute].name };
			});
			var data = { 'attributes': attributes, 'features': items }
			self.show_preview();
			jq('.visualization_preview').queue(function() {
				var previewSuccess = F1.Visualizer.charts[self.chosen_chart.type](200, 300, data, self.options.id+'_form_preview');
				if (isLengthened && previewSuccess) {
					RagingClue.position('#more_data_clue');
					jq('#more_data_clue').fadeIn();
				}
				jq(this).dequeue();
			});
			
			// Hilight the preview axes when we hover over the form
			jq('.data_attribute_group').hover(
			  function(){
			    F1.Visualizer.charts.preview_yaxis_label && 
			    F1.Visualizer.charts.preview_yaxis_label.attr({fill:'#000'});
			  }, 
			  function(){
			    F1.Visualizer.charts.preview_yaxis_label && 
			    F1.Visualizer.charts.preview_yaxis_label.attr({fill:'#999'});
			  }
			)
			jq('.description_attribute_group, .sort_attribute_group').hover(
			  function(){
			    F1.Visualizer.charts.preview_xaxis_label && 
			    F1.Visualizer.charts.preview_xaxis_label.attr({fill:'#000'});
			  }, 
			  function(){
			    F1.Visualizer.charts.preview_xaxis_label && 
			    F1.Visualizer.charts.preview_xaxis_label.attr({fill:'#999'});
			  }
			)
		},
		
		
		selected_overlay_id: function() { return parseInt(this.form_data('chart_style_finder_id'), 10); },
		selected_chart: function() { return this.form_data('chart_style_chart_type'); },
		selected_data_attribute: function() { return this.form_data('chart_style_attributes_data'); },
		selected_description_attribute: function() { return this.form_data('chart_style_attributes_description'); },
		selected_sort_attribute: function() { return this.form_data('chart_style_sort_attribute'); },
		selected_sort_order: function() { return this.form_data('chart_style_sort_order'); },
		selected_limit: function() { return this.form_data('chart_style_sort_limit'); },
		selected_title: function() { return this.form_data('chart_title'); },

		form_data: function(name) { return jq('#'+name).get(0).value;	},		
		
		throw_error: function(message) {
			var self = this;
			alert(message);
			jq('#'+self.options.id).dialog('close');
		},
		
		translate_graph_name: function(graph_name) {
			return graph_name.replace(/\_/, ' ');
		},
		
		panels: ["layer","chart","data","describe"],
		
		view:  {		
			creator_form : tmpl('<div id="<%= div_id %>" class="chart_creator" title="CREATE A CHART"> \
				<div id="<%= div_id %>_cover" class="cover_div" style="display:none;"><h1>Loading...</h1></div>\
				<div class="breadcrumb_tabs"><ul><li class="layer">Layer</li><li class="chart">Chart</li><li class="data">Data</li><li class="describe">Describe</li></ul></div>\
				<div id="<%= div_id %>_panes" class="panes"> \
					<form id="<%= div_id %>_form">\
					<div id="<%= div_id %>_layer_pane" class="pane" style=""> \
						<h1>Choose a layer</h1>\
						<p> \
							<div class="layer_selection">\
								<ol id="overlay_selection"><%= overlay_options %></ol>\
							</div>\
						</p>\
					</div>\
					<div id="<%= div_id %>_chart_pane" class="pane" style=""> \
						<h1>Choose a chart type</h1>\
						<p>\
						<span class="chart_selection"><ol id="chart_selection"></ol></span>\
						</p>\
					</div>\
					<div id="<%= div_id %>_data_pane" class="pane" style=""> \
						<h1>Choose your data</h1>\
						<span class="attribute_selection attribute_group">\
						<p class="selections data_attribute_group">\
							Graph <select id="chart_style_attributes_data" name="chart[style][attributes][data]"><option>...</option></select>\
							<br /><span class="whisper">This is the main data attribute you wish to view.</span>\
						</p>\
						<p class="selections description_attribute_group">\
							Described by <select id="chart_style_attributes_description" name="chart[style][attributes][description]"><option>...</option></select>.\
							<br /><span class="whisper">This is how you will identify each mark.</span>\
						</p>\
						<p class="selections sort_attribute_group">Sorted by the <select id="chart_style_sort_order" name="chart[style][sort][order]"> \
							<option value="descending">highest</option><option value="ascending">lowest</option>\
						</select>&nbsp;<select id="chart_style_sort_attribute" name="chart[style][sort][attribute]"><option>...</option></select>.\
						<br /><span class="whisper">This is the order in which the data will be displayed.</span>\
						</p>\
						<p class="selections">\
							Show <select id="chart_style_sort_limit" name="chart[style][sort][limit]">\
								<option value="10">10</option><option value="20">20</option><option value="50">50</option><option value="100">100</option>\
							</select> rows.\
							<br /><span class="whisper">This is how many rows of the data we will return.</span>\
						</p>\
						</span>\
					</div>\
					<div id="<%= div_id %>_describe_pane" class="pane" style="">\
						<h1>Describe your chart</h1>\
						<p class="selections">\
							<span class="whisper">This information will display on the back of your chart.</span>\
							<span class="chart_title"><input type="text" id="chart_title" name="chart[title]" class="blurred_input" value="My Chart Title" /></span>\
						</p>\
						<p class="selections">\
							<textarea id="chart_style_description" class="blurred_input" name="chart[style][description]">My chart description.</textarea>\
						</p> \
						<input type="hidden" id="chart_style_finder_id" name="chart[style][finder_id]">\
						<input type="hidden" id="chart_style_chart_type" name="chart[style][chart_type]" />\
						<input type="hidden" id="chart_map_id" value="<%= map_id %>" name="chart[map_id]" />\
						<input type="hidden" id="chart_style_position_x" value=".1" name="chart[style][position][x]" />\
						<input type="hidden" id="chart_style_position_y" value=".1" name="chart[style][position][y]" />\
						<input type="hidden" id="chart_style_position_height" value="250" name="chart[style][position][height]" />\
						<input type="hidden" id="chart_style_position_width" value="350" name="chart[style][position][width]" />\
					</div> \
					</form>\
				</div>\
			</div>\
			<div id="<%= div_id%>_visualization_preview" class="visualization_preview ui-corner-right ui-shadow" style="display: none;">\
				<h3>Sample preview</h3> \
				<div id="<%= div_id %>_form_preview"></div> \
			</div>\
			'),
			
			select_option: tmpl('<option value="<%= id %>"><%= name %></option>'),
			
			list_item: tmpl('<li rel="<%= id %>"><%= name %></li>'),
			
			chart_item: tmpl('<li rel="<%= id %>"><img src="/images/chart.<%= name %>.png" /><span><%= name %></span></li>'),
			
			overlay_item: tmpl('\
			  <li class="layer_select ui-corner-all clearfix">\
			    <span><%= name %></span>\
			    <a href="#" class="rb b_select" rel="<%= id %>">Select</a>\
			  </li>'),
			
			style: tmpl("{ :finder_id => '<%= finder_id %>', :chart_type => '<%= chart_type %>', :attributes => { :data => '<%= data_attribute %>', :description => '<%= description_attribute %>' }, :sort => '<%= sort  %>', :limit => '<%= limit %>', :position => { :x => 23, :y => 45, :height => 50, :width => 50 } }"),
			
			more_data_clue: tmpl('<div class="raging_clue arrow_left" id="more_data_clue" style="display: none;">\
				  <div class="arrow"></div>\
				  <div class="raging_clue_inner">\
				    We have extended the graph to show <%= limit %> rows for additional accuracy.\
				  </div>\
				</div>')
		}
	}
})();
